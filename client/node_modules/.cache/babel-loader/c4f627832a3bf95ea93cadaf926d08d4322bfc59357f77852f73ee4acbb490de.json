{"ast":null,"code":"import { Axes as e, Grid as a, renderGridLinesToCanvas as i, renderAxesToCanvas as t } from \"@nivo/axes\";\nimport { useAnnotations as n, Annotation as r, useComputedAnnotations as l, renderAnnotationsToCanvas as o } from \"@nivo/annotations\";\nimport { jsx as d, Fragment as u, jsxs as c } from \"react/jsx-runtime\";\nimport { BoxLegendSvg as s, renderLegendToCanvas as h } from \"@nivo/legends\";\nimport { useTheme as b, getPropertyAccessor as g, usePropertyAccessor as v, useValueFormatter as f, Container as m, useMotionConfig as p, useDimensions as x, bindDefs as y, CartesianMarkers as S, SvgWrapper as k, getRelativeCursor as L, isCursorInRect as w, ResponsiveWrapper as C } from \"@nivo/core\";\nimport { useMemo as V, createElement as W, useCallback as M, useState as B, Fragment as I, forwardRef as T, useRef as R, useEffect as H } from \"react\";\nimport { animated as P, to as E, useTransition as F } from \"@react-spring/web\";\nimport { useTooltip as X, BasicTooltip as Y } from \"@nivo/tooltip\";\nimport { useOrdinalColorScale as D, useInheritedColor as O } from \"@nivo/colors\";\nimport { computeScale as G } from \"@nivo/scales\";\nimport { stack as A, stackOffsetDiverging as j } from \"d3-shape\";\nimport q from \"lodash/uniqBy\";\nfunction z() {\n  return z = Object.assign ? Object.assign.bind() : function (e) {\n    for (var a = 1; a < arguments.length; a++) {\n      var i = arguments[a];\n      for (var t in i) Object.prototype.hasOwnProperty.call(i, t) && (e[t] = i[t]);\n    }\n    return e;\n  }, z.apply(this, arguments);\n}\nfunction K(e, a) {\n  if (null == e) return {};\n  var i,\n    t,\n    n = {},\n    r = Object.keys(e);\n  for (t = 0; t < r.length; t++) i = r[t], a.indexOf(i) >= 0 || (n[i] = e[i]);\n  return n;\n}\nvar N,\n  J = function (e) {\n    var a = e.bars,\n      i = e.annotations,\n      t = n({\n        data: a,\n        annotations: i,\n        getPosition: function (e) {\n          return {\n            x: e.x + e.width / 2,\n            y: e.y + e.height / 2\n          };\n        },\n        getDimensions: function (e) {\n          var a = e.height,\n            i = e.width;\n          return {\n            width: i,\n            height: a,\n            size: Math.max(i, a)\n          };\n        }\n      });\n    return d(u, {\n      children: t.map(function (e, a) {\n        return d(r, z({}, e), a);\n      })\n    });\n  },\n  Q = function (e) {\n    var a = e.width,\n      i = e.height,\n      t = e.legends,\n      n = e.toggleSerie;\n    return d(u, {\n      children: t.map(function (e, t) {\n        var r,\n          l = e[0],\n          o = e[1];\n        return d(s, z({}, l, {\n          containerWidth: a,\n          containerHeight: i,\n          data: null != (r = l.data) ? r : o,\n          toggleSerie: l.toggleSerie && \"keys\" === l.dataFrom ? n : void 0\n        }), t);\n      })\n    });\n  },\n  U = [\"data\"],\n  Z = function (e) {\n    var a,\n      i = e.bar,\n      t = i.data,\n      n = K(i, U),\n      r = e.style,\n      l = r.borderColor,\n      o = r.color,\n      u = r.height,\n      s = r.labelColor,\n      h = r.labelOpacity,\n      g = r.labelX,\n      v = r.labelY,\n      f = r.transform,\n      m = r.width,\n      p = e.borderRadius,\n      x = e.borderWidth,\n      y = e.label,\n      S = e.shouldRenderLabel,\n      k = e.isInteractive,\n      L = e.onClick,\n      w = e.onMouseEnter,\n      C = e.onMouseLeave,\n      B = e.tooltip,\n      I = e.isFocusable,\n      T = e.ariaLabel,\n      R = e.ariaLabelledBy,\n      H = e.ariaDescribedBy,\n      F = b(),\n      Y = X(),\n      D = Y.showTooltipFromEvent,\n      O = Y.showTooltipAt,\n      G = Y.hideTooltip,\n      A = V(function () {\n        return function () {\n          return W(B, z({}, n, t));\n        };\n      }, [B, n, t]),\n      j = M(function (e) {\n        null == L || L(z({\n          color: n.color\n        }, t), e);\n      }, [n, t, L]),\n      q = M(function (e) {\n        return D(A(), e);\n      }, [D, A]),\n      N = M(function (e) {\n        null == w || w(t, e), D(A(), e);\n      }, [t, w, D, A]),\n      J = M(function (e) {\n        null == C || C(t, e), G();\n      }, [t, G, C]),\n      Q = M(function () {\n        O(A(), [n.absX + n.width / 2, n.absY]);\n      }, [O, A, n]),\n      Z = M(function () {\n        G();\n      }, [G]);\n    return c(P.g, {\n      transform: f,\n      children: [d(P.rect, {\n        width: E(m, function (e) {\n          return Math.max(e, 0);\n        }),\n        height: E(u, function (e) {\n          return Math.max(e, 0);\n        }),\n        rx: p,\n        ry: p,\n        fill: null != (a = t.fill) ? a : o,\n        strokeWidth: x,\n        stroke: l,\n        focusable: I,\n        tabIndex: I ? 0 : void 0,\n        \"aria-label\": T ? T(t) : void 0,\n        \"aria-labelledby\": R ? R(t) : void 0,\n        \"aria-describedby\": H ? H(t) : void 0,\n        onMouseEnter: k ? N : void 0,\n        onMouseMove: k ? q : void 0,\n        onMouseLeave: k ? J : void 0,\n        onClick: k ? j : void 0,\n        onFocus: k && I ? Q : void 0,\n        onBlur: k && I ? Z : void 0\n      }), S && d(P.text, {\n        x: g,\n        y: v,\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        fillOpacity: h,\n        style: z({}, F.labels.text, {\n          pointerEvents: \"none\",\n          fill: s\n        }),\n        children: y\n      })]\n    });\n  },\n  $ = [\"color\", \"label\"],\n  _ = function (e) {\n    var a = e.color,\n      i = e.label,\n      t = K(e, $);\n    return d(Y, {\n      id: i,\n      value: t.formattedValue,\n      enableChip: !0,\n      color: a\n    });\n  },\n  ee = {\n    indexBy: \"id\",\n    keys: [\"value\"],\n    groupMode: \"stacked\",\n    layout: \"vertical\",\n    reverse: !1,\n    minValue: \"auto\",\n    maxValue: \"auto\",\n    valueScale: {\n      type: \"linear\"\n    },\n    indexScale: {\n      type: \"band\",\n      round: !0\n    },\n    padding: .1,\n    innerPadding: 0,\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: !1,\n    enableGridY: !0,\n    enableLabel: !0,\n    label: \"formattedValue\",\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: {\n      from: \"theme\",\n      theme: \"labels.text.fill\"\n    },\n    colorBy: \"id\",\n    colors: {\n      scheme: \"nivo\"\n    },\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: {\n      from: \"color\"\n    },\n    isInteractive: !0,\n    tooltip: _,\n    tooltipLabel: function (e) {\n      return e.id + \" - \" + e.indexValue;\n    },\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: []\n  },\n  ae = z({}, ee, {\n    layers: [\"grid\", \"axes\", \"bars\", \"markers\", \"legends\", \"annotations\"],\n    barComponent: Z,\n    defs: [],\n    fill: [],\n    animate: !0,\n    motionConfig: \"default\",\n    role: \"img\",\n    isFocusable: !1\n  }),\n  ie = z({}, ee, {\n    layers: [\"grid\", \"axes\", \"bars\", \"legends\", \"annotations\"],\n    pixelRatio: \"undefined\" != typeof window && null != (N = window.devicePixelRatio) ? N : 1\n  }),\n  te = function (e, a, i, t, n, r) {\n    return G(t, {\n      all: e.map(a),\n      min: 0,\n      max: 0\n    }, n, r).padding(i);\n  },\n  ne = function (e, a) {\n    return e.map(function (e) {\n      return z({}, a.reduce(function (e, a) {\n        return e[a] = null, e;\n      }, {}), e);\n    });\n  },\n  re = function (e) {\n    return Object.keys(e).reduce(function (a, i) {\n      return e[i] && (a[i] = e[i]), a;\n    }, {});\n  },\n  le = function (e) {\n    return [e, Number(e)];\n  },\n  oe = [\"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"innerPadding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  de = function (e, a) {\n    return e > a;\n  },\n  ue = function (e, a) {\n    return e < a;\n  },\n  ce = function (e, a) {\n    return Array.from(\" \".repeat(a - e), function (a, i) {\n      return e + i;\n    });\n  },\n  se = function (e) {\n    return de(e, 0) ? 0 : e;\n  },\n  he = function (e, a, i, t) {\n    var n = e.data,\n      r = e.formatValue,\n      l = e.getColor,\n      o = e.getIndex,\n      d = e.getTooltipLabel,\n      u = e.innerPadding,\n      c = void 0 === u ? 0 : u,\n      s = e.keys,\n      h = e.xScale,\n      b = e.yScale,\n      g = e.margin,\n      v = i ? ue : de,\n      f = n.map(re),\n      m = [];\n    return s.forEach(function (e, i) {\n      return ce(0, h.domain().length).forEach(function (u) {\n        var s,\n          p,\n          x,\n          y = le(n[u][e]),\n          S = y[0],\n          k = y[1],\n          L = o(n[u]),\n          w = (null != (s = h(L)) ? s : 0) + a * i + c * i,\n          C = v(p = k, 0) ? null != (x = b(p)) ? x : 0 : t,\n          V = function (e, a) {\n            var i;\n            return v(e, 0) ? t - a : (null != (i = b(e)) ? i : 0) - t;\n          }(k, C),\n          W = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: r(k),\n            hidden: !1,\n            index: u,\n            indexValue: L,\n            data: f[u]\n          };\n        m.push({\n          key: e + \".\" + W.indexValue,\n          index: m.length,\n          data: W,\n          x: w,\n          y: C,\n          absX: g.left + w,\n          absY: g.top + C,\n          width: a,\n          height: V,\n          color: l(W),\n          label: d(W)\n        });\n      });\n    }), m;\n  },\n  be = function (e, a, i, t) {\n    var n = e.data,\n      r = e.formatValue,\n      l = e.getIndex,\n      o = e.getColor,\n      d = e.getTooltipLabel,\n      u = e.keys,\n      c = e.innerPadding,\n      s = void 0 === c ? 0 : c,\n      h = e.xScale,\n      b = e.yScale,\n      g = e.margin,\n      v = i ? ue : de,\n      f = n.map(re),\n      m = [];\n    return u.forEach(function (e, i) {\n      return ce(0, b.domain().length).forEach(function (u) {\n        var c,\n          p,\n          x,\n          y = le(n[u][e]),\n          S = y[0],\n          k = y[1],\n          L = l(n[u]),\n          w = v(p = k, 0) ? t : null != (x = h(p)) ? x : 0,\n          C = (null != (c = b(L)) ? c : 0) + a * i + s * i,\n          V = function (e, a) {\n            var i;\n            return v(e, 0) ? (null != (i = h(e)) ? i : 0) - t : t - a;\n          }(k, w),\n          W = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: r(k),\n            hidden: !1,\n            index: u,\n            indexValue: L,\n            data: f[u]\n          };\n        m.push({\n          key: e + \".\" + W.indexValue,\n          index: m.length,\n          data: W,\n          x: w,\n          y: C,\n          absX: g.left + w,\n          absY: g.top + C,\n          width: V,\n          height: a,\n          color: o(W),\n          label: d(W)\n        });\n      });\n    }), m;\n  },\n  ge = function (e) {\n    var a,\n      i,\n      t = e.layout,\n      n = e.minValue,\n      r = e.maxValue,\n      l = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.innerPadding,\n      h = void 0 === s ? 0 : s,\n      b = e.valueScale,\n      g = e.indexScale,\n      v = e.hiddenIds,\n      f = void 0 === v ? [] : v,\n      m = K(e, oe),\n      p = m.keys.filter(function (e) {\n        return !f.includes(e);\n      }),\n      x = ne(m.data, p),\n      y = \"vertical\" === t ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      S = y[0],\n      k = y[1],\n      L = y[2],\n      w = te(x, m.getIndex, c, g, L, k),\n      C = z({\n        max: r,\n        min: n,\n        reverse: l\n      }, b),\n      V = \"auto\" === C.min ? se : function (e) {\n        return e;\n      },\n      W = x.reduce(function (e, a) {\n        return [].concat(e, p.map(function (e) {\n          return a[e];\n        }));\n      }, []).filter(Boolean),\n      M = V(Math.min.apply(Math, W)),\n      B = (i = Math.max.apply(Math, W), isFinite(i) ? i : 0),\n      I = G(C, {\n        all: W,\n        min: M,\n        max: B\n      }, \"x\" === S ? o : d, S),\n      T = \"vertical\" === t ? [w, I] : [I, w],\n      R = T[0],\n      H = T[1],\n      P = (w.bandwidth() - h * (p.length - 1)) / p.length,\n      E = [z({}, m, {\n        data: x,\n        keys: p,\n        innerPadding: h,\n        xScale: R,\n        yScale: H\n      }), P, C.reverse, null != (a = I(0)) ? a : 0];\n    return {\n      xScale: R,\n      yScale: H,\n      bars: P > 0 ? \"vertical\" === t ? he.apply(void 0, E) : be.apply(void 0, E) : []\n    };\n  },\n  ve = [\"data\", \"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  fe = function e(a) {\n    var i;\n    return a.some(Array.isArray) ? e((i = []).concat.apply(i, a)) : a;\n  },\n  me = function (e, a, i) {\n    var t = e.formatValue,\n      n = e.getColor,\n      r = e.getIndex,\n      l = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return u.domain().forEach(function (d, b) {\n        var g,\n          v,\n          f = e[b],\n          m = null != (g = u(r(f.data))) ? g : 0,\n          p = (null != (v = function (e) {\n            return c(e[i ? 0 : 1]);\n          }(f)) ? v : 0) + .5 * o,\n          x = function (e, a) {\n            var t;\n            return (null != (t = c(e[i ? 1 : 0])) ? t : 0) - a;\n          }(f, p) - o,\n          y = le(f.data[e.key]),\n          S = y[0],\n          k = y[1],\n          L = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: t(k),\n            hidden: !1,\n            index: b,\n            indexValue: d,\n            data: re(f.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: L,\n          x: m,\n          y: p,\n          absX: s.left + m,\n          absY: s.top + p,\n          width: a,\n          height: x,\n          color: n(L),\n          label: l(L)\n        });\n      });\n    }), h;\n  },\n  pe = function (e, a, i) {\n    var t = e.formatValue,\n      n = e.getColor,\n      r = e.getIndex,\n      l = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return c.domain().forEach(function (d, b) {\n        var g,\n          v,\n          f = e[b],\n          m = null != (g = c(r(f.data))) ? g : 0,\n          p = (null != (v = function (e) {\n            return u(e[i ? 1 : 0]);\n          }(f)) ? v : 0) + .5 * o,\n          x = function (e, a) {\n            var t;\n            return (null != (t = u(e[i ? 0 : 1])) ? t : 0) - a;\n          }(f, p) - o,\n          y = le(f.data[e.key]),\n          S = y[0],\n          k = y[1],\n          L = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: t(k),\n            hidden: !1,\n            index: b,\n            indexValue: d,\n            data: re(f.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: L,\n          x: p,\n          y: m,\n          absX: s.left + p,\n          absY: s.top + m,\n          width: x,\n          height: a,\n          color: n(L),\n          label: l(L)\n        });\n      });\n    }), h;\n  },\n  xe = function (e) {\n    var a,\n      i = e.data,\n      t = e.layout,\n      n = e.minValue,\n      r = e.maxValue,\n      l = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.valueScale,\n      h = e.indexScale,\n      b = e.hiddenIds,\n      g = void 0 === b ? [] : b,\n      v = K(e, ve),\n      f = v.keys.filter(function (e) {\n        return !g.includes(e);\n      }),\n      m = A().keys(f).offset(j)(ne(i, f)),\n      p = \"vertical\" === t ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      x = p[0],\n      y = p[1],\n      S = p[2],\n      k = te(i, v.getIndex, c, h, S, y),\n      L = z({\n        max: r,\n        min: n,\n        reverse: l\n      }, s),\n      w = (a = fe(m), \"log\" === s.type ? a.filter(function (e) {\n        return 0 !== e;\n      }) : a),\n      C = Math.min.apply(Math, w),\n      V = Math.max.apply(Math, w),\n      W = G(L, {\n        all: w,\n        min: C,\n        max: V\n      }, \"x\" === x ? o : d, x),\n      M = \"vertical\" === t ? [k, W] : [W, k],\n      B = M[0],\n      I = M[1],\n      T = v.innerPadding > 0 ? v.innerPadding : 0,\n      R = k.bandwidth(),\n      H = [z({}, v, {\n        innerPadding: T,\n        stackedData: m,\n        xScale: B,\n        yScale: I\n      }), R, L.reverse];\n    return {\n      xScale: B,\n      yScale: I,\n      bars: R > 0 ? \"vertical\" === t ? me.apply(void 0, H) : pe.apply(void 0, H) : []\n    };\n  },\n  ye = function (e) {\n    var a = e.bars,\n      i = e.direction,\n      t = e.from,\n      n = e.groupMode,\n      r = e.layout,\n      l = e.legendLabel,\n      o = e.reverse,\n      d = g(null != l ? l : \"indexes\" === t ? \"indexValue\" : \"id\");\n    return \"indexes\" === t ? function (e, a, i) {\n      var t = q(e.map(function (e) {\n        var a, t;\n        return {\n          id: null != (a = e.data.indexValue) ? a : \"\",\n          label: i(e.data),\n          hidden: e.data.hidden,\n          color: null != (t = e.color) ? t : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return \"horizontal\" === a && t.reverse(), t;\n    }(a, r, d) : function (e, a, i, t, n, r) {\n      var l = q(e.map(function (e) {\n        var a;\n        return {\n          id: e.data.id,\n          label: r(e.data),\n          hidden: e.data.hidden,\n          color: null != (a = e.color) ? a : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return (\"vertical\" === a && \"stacked\" === t && \"column\" === i && !0 !== n || \"horizontal\" === a && \"stacked\" === t && !0 === n) && l.reverse(), l;\n    }(a, r, i, n, o, d);\n  },\n  Se = function (e) {\n    var a = e.indexBy,\n      i = void 0 === a ? ee.indexBy : a,\n      t = e.keys,\n      n = void 0 === t ? ee.keys : t,\n      r = e.label,\n      l = void 0 === r ? ee.label : r,\n      o = e.tooltipLabel,\n      d = void 0 === o ? ee.tooltipLabel : o,\n      u = e.valueFormat,\n      c = e.colors,\n      s = void 0 === c ? ee.colors : c,\n      h = e.colorBy,\n      g = void 0 === h ? ee.colorBy : h,\n      m = e.borderColor,\n      p = void 0 === m ? ee.borderColor : m,\n      x = e.labelTextColor,\n      y = void 0 === x ? ee.labelTextColor : x,\n      S = e.groupMode,\n      k = void 0 === S ? ee.groupMode : S,\n      L = e.layout,\n      w = void 0 === L ? ee.layout : L,\n      C = e.reverse,\n      W = void 0 === C ? ee.reverse : C,\n      I = e.data,\n      T = e.minValue,\n      R = void 0 === T ? ee.minValue : T,\n      H = e.maxValue,\n      P = void 0 === H ? ee.maxValue : H,\n      E = e.margin,\n      F = e.width,\n      X = e.height,\n      Y = e.padding,\n      G = void 0 === Y ? ee.padding : Y,\n      A = e.innerPadding,\n      j = void 0 === A ? ee.innerPadding : A,\n      q = e.valueScale,\n      K = void 0 === q ? ee.valueScale : q,\n      N = e.indexScale,\n      J = void 0 === N ? ee.indexScale : N,\n      Q = e.initialHiddenIds,\n      U = void 0 === Q ? ee.initialHiddenIds : Q,\n      Z = e.enableLabel,\n      $ = void 0 === Z ? ee.enableLabel : Z,\n      _ = e.labelSkipWidth,\n      ae = void 0 === _ ? ee.labelSkipWidth : _,\n      ie = e.labelSkipHeight,\n      te = void 0 === ie ? ee.labelSkipHeight : ie,\n      ne = e.legends,\n      re = void 0 === ne ? ee.legends : ne,\n      le = e.legendLabel,\n      oe = B(null != U ? U : []),\n      de = oe[0],\n      ue = oe[1],\n      ce = M(function (e) {\n        ue(function (a) {\n          return a.indexOf(e) > -1 ? a.filter(function (a) {\n            return a !== e;\n          }) : [].concat(a, [e]);\n        });\n      }, []),\n      se = v(i),\n      he = v(l),\n      be = v(d),\n      ve = f(u),\n      fe = b(),\n      me = D(s, g),\n      pe = O(p, fe),\n      Se = O(y, fe),\n      ke = (\"grouped\" === k ? ge : xe)({\n        layout: w,\n        reverse: W,\n        data: I,\n        getIndex: se,\n        keys: n,\n        minValue: R,\n        maxValue: P,\n        width: F,\n        height: X,\n        getColor: me,\n        padding: G,\n        innerPadding: j,\n        valueScale: K,\n        indexScale: J,\n        hiddenIds: de,\n        formatValue: ve,\n        getTooltipLabel: be,\n        margin: E\n      }),\n      Le = ke.bars,\n      we = ke.xScale,\n      Ce = ke.yScale,\n      Ve = V(function () {\n        return Le.filter(function (e) {\n          return null !== e.data.value;\n        }).map(function (e, a) {\n          return z({}, e, {\n            index: a\n          });\n        });\n      }, [Le]),\n      We = M(function (e) {\n        var a = e.width,\n          i = e.height;\n        return !!$ && !(ae > 0 && a < ae) && !(te > 0 && i < te);\n      }, [$, ae, te]),\n      Me = V(function () {\n        return n.map(function (e) {\n          var a = Le.find(function (a) {\n            return a.data.id === e;\n          });\n          return z({}, a, {\n            data: z({\n              id: e\n            }, null == a ? void 0 : a.data, {\n              hidden: de.includes(e)\n            })\n          });\n        });\n      }, [de, n, Le]),\n      Be = V(function () {\n        return re.map(function (e) {\n          return [e, ye({\n            bars: \"keys\" === e.dataFrom ? Me : Le,\n            direction: e.direction,\n            from: e.dataFrom,\n            groupMode: k,\n            layout: w,\n            legendLabel: le,\n            reverse: W\n          })];\n        });\n      }, [re, Me, Le, k, w, le, W]);\n    return {\n      bars: Le,\n      barsWithValue: Ve,\n      xScale: we,\n      yScale: Ce,\n      getIndex: se,\n      getLabel: he,\n      getTooltipLabel: be,\n      formatValue: ve,\n      getColor: me,\n      getBorderColor: pe,\n      getLabelColor: Se,\n      shouldRenderBarLabel: We,\n      hiddenIds: de,\n      toggleSerie: ce,\n      legendsWithData: Be\n    };\n  },\n  ke = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  Le = function (i) {\n    var t = i.data,\n      n = i.indexBy,\n      r = i.keys,\n      l = i.margin,\n      o = i.width,\n      u = i.height,\n      c = i.groupMode,\n      s = i.layout,\n      h = i.reverse,\n      b = i.minValue,\n      g = i.maxValue,\n      v = i.valueScale,\n      f = i.indexScale,\n      m = i.padding,\n      L = i.innerPadding,\n      w = i.axisTop,\n      C = i.axisRight,\n      M = i.axisBottom,\n      B = void 0 === M ? ae.axisBottom : M,\n      T = i.axisLeft,\n      R = void 0 === T ? ae.axisLeft : T,\n      H = i.enableGridX,\n      P = void 0 === H ? ae.enableGridX : H,\n      E = i.enableGridY,\n      X = void 0 === E ? ae.enableGridY : E,\n      Y = i.gridXValues,\n      D = i.gridYValues,\n      O = i.layers,\n      G = void 0 === O ? ae.layers : O,\n      A = i.barComponent,\n      j = void 0 === A ? ae.barComponent : A,\n      q = i.enableLabel,\n      K = void 0 === q ? ae.enableLabel : q,\n      N = i.label,\n      U = i.labelSkipWidth,\n      Z = void 0 === U ? ae.labelSkipWidth : U,\n      $ = i.labelSkipHeight,\n      _ = void 0 === $ ? ae.labelSkipHeight : $,\n      ee = i.labelTextColor,\n      ie = i.markers,\n      te = void 0 === ie ? ae.markers : ie,\n      ne = i.colorBy,\n      re = i.colors,\n      le = i.defs,\n      oe = void 0 === le ? ae.defs : le,\n      de = i.fill,\n      ue = void 0 === de ? ae.fill : de,\n      ce = i.borderRadius,\n      se = void 0 === ce ? ae.borderRadius : ce,\n      he = i.borderWidth,\n      be = void 0 === he ? ae.borderWidth : he,\n      ge = i.borderColor,\n      ve = i.annotations,\n      fe = void 0 === ve ? ae.annotations : ve,\n      me = i.legendLabel,\n      pe = i.tooltipLabel,\n      xe = i.valueFormat,\n      ye = i.isInteractive,\n      ke = void 0 === ye ? ae.isInteractive : ye,\n      Le = i.tooltip,\n      we = void 0 === Le ? ae.tooltip : Le,\n      Ce = i.onClick,\n      Ve = i.onMouseEnter,\n      We = i.onMouseLeave,\n      Me = i.legends,\n      Be = i.role,\n      Ie = void 0 === Be ? ae.role : Be,\n      Te = i.ariaLabel,\n      Re = i.ariaLabelledBy,\n      He = i.ariaDescribedBy,\n      Pe = i.isFocusable,\n      Ee = void 0 === Pe ? ae.isFocusable : Pe,\n      Fe = i.barAriaLabel,\n      Xe = i.barAriaLabelledBy,\n      Ye = i.barAriaDescribedBy,\n      De = i.initialHiddenIds,\n      Oe = p(),\n      Ge = Oe.animate,\n      Ae = Oe.config,\n      je = x(o, u, l),\n      qe = je.outerWidth,\n      ze = je.outerHeight,\n      Ke = je.margin,\n      Ne = je.innerWidth,\n      Je = je.innerHeight,\n      Qe = Se({\n        indexBy: n,\n        label: N,\n        tooltipLabel: pe,\n        valueFormat: xe,\n        colors: re,\n        colorBy: ne,\n        borderColor: ge,\n        labelTextColor: ee,\n        groupMode: c,\n        layout: s,\n        reverse: h,\n        data: t,\n        keys: r,\n        minValue: b,\n        maxValue: g,\n        margin: Ke,\n        width: Ne,\n        height: Je,\n        padding: m,\n        innerPadding: L,\n        valueScale: v,\n        indexScale: f,\n        enableLabel: K,\n        labelSkipWidth: Z,\n        labelSkipHeight: _,\n        legends: Me,\n        legendLabel: me,\n        initialHiddenIds: De\n      }),\n      Ue = Qe.bars,\n      Ze = Qe.barsWithValue,\n      $e = Qe.xScale,\n      _e = Qe.yScale,\n      ea = Qe.getLabel,\n      aa = Qe.getTooltipLabel,\n      ia = Qe.getBorderColor,\n      ta = Qe.getLabelColor,\n      na = Qe.shouldRenderBarLabel,\n      ra = Qe.toggleSerie,\n      la = Qe.legendsWithData,\n      oa = F(Ze, {\n        keys: function (e) {\n          return e.key;\n        },\n        from: function (e) {\n          return z({\n            borderColor: ia(e),\n            color: e.color,\n            height: 0,\n            labelColor: ta(e),\n            labelOpacity: 0,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === s ? {} : {\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          });\n        },\n        enter: function (e) {\n          return {\n            borderColor: ia(e),\n            color: e.color,\n            height: e.height,\n            labelColor: ta(e),\n            labelOpacity: 1,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          };\n        },\n        update: function (e) {\n          return {\n            borderColor: ia(e),\n            color: e.color,\n            height: e.height,\n            labelColor: ta(e),\n            labelOpacity: 1,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          };\n        },\n        leave: function (e) {\n          return z({\n            borderColor: ia(e),\n            color: e.color,\n            height: 0,\n            labelColor: ta(e),\n            labelOpacity: 0,\n            labelX: e.width / 2,\n            labelY: 0,\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === s ? {} : {\n            labelX: 0,\n            labelY: e.height / 2,\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          });\n        },\n        config: Ae,\n        immediate: !Ge,\n        initial: Ge ? void 0 : null\n      }),\n      da = V(function () {\n        return {\n          borderRadius: se,\n          borderWidth: be,\n          enableLabel: K,\n          isInteractive: ke,\n          labelSkipWidth: Z,\n          labelSkipHeight: _,\n          onClick: Ce,\n          onMouseEnter: Ve,\n          onMouseLeave: We,\n          getTooltipLabel: aa,\n          tooltip: we,\n          isFocusable: Ee,\n          ariaLabel: Fe,\n          ariaLabelledBy: Xe,\n          ariaDescribedBy: Ye\n        };\n      }, [se, be, K, aa, ke, _, Z, Ce, Ve, We, we, Ee, Fe, Xe, Ye]),\n      ua = y(oe, Ue, ue, {\n        dataKey: \"data\",\n        targetKey: \"data.fill\"\n      }),\n      ca = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null\n      };\n    G.includes(\"annotations\") && (ca.annotations = d(J, {\n      bars: Ue,\n      annotations: fe\n    }, \"annotations\")), G.includes(\"axes\") && (ca.axes = d(e, {\n      xScale: $e,\n      yScale: _e,\n      width: Ne,\n      height: Je,\n      top: w,\n      right: C,\n      bottom: B,\n      left: R\n    }, \"axes\")), G.includes(\"bars\") && (ca.bars = d(I, {\n      children: oa(function (e, a) {\n        return W(j, z({}, da, {\n          bar: a,\n          style: e,\n          shouldRenderLabel: na(a),\n          label: ea(a.data)\n        }));\n      })\n    }, \"bars\")), G.includes(\"grid\") && (ca.grid = d(a, {\n      width: Ne,\n      height: Je,\n      xScale: P ? $e : null,\n      yScale: X ? _e : null,\n      xValues: Y,\n      yValues: D\n    }, \"grid\")), G.includes(\"legends\") && (ca.legends = d(Q, {\n      width: Ne,\n      height: Je,\n      legends: la,\n      toggleSerie: ra\n    }, \"legends\")), G.includes(\"markers\") && (ca.markers = d(S, {\n      markers: te,\n      width: Ne,\n      height: Je,\n      xScale: $e,\n      yScale: _e\n    }, \"markers\"));\n    var sa = V(function () {\n      return z({}, da, {\n        margin: Ke,\n        width: o,\n        height: u,\n        innerWidth: Ne,\n        innerHeight: Je,\n        bars: Ue,\n        legendData: la,\n        enableLabel: K,\n        xScale: $e,\n        yScale: _e,\n        tooltip: we,\n        getTooltipLabel: aa,\n        onClick: Ce,\n        onMouseEnter: Ve,\n        onMouseLeave: We\n      });\n    }, [da, Ke, o, u, Ne, Je, Ue, la, K, $e, _e, we, aa, Ce, Ve, We]);\n    return d(k, {\n      width: qe,\n      height: ze,\n      margin: Ke,\n      defs: ua,\n      role: Ie,\n      ariaLabel: Te,\n      ariaLabelledBy: Re,\n      ariaDescribedBy: He,\n      isFocusable: Ee,\n      children: G.map(function (e, a) {\n        var i;\n        return \"function\" == typeof e ? d(I, {\n          children: W(e, sa)\n        }, a) : null != (i = null == ca ? void 0 : ca[e]) ? i : null;\n      })\n    });\n  },\n  we = function (e) {\n    var a = e.isInteractive,\n      i = void 0 === a ? ae.isInteractive : a,\n      t = e.animate,\n      n = void 0 === t ? ae.animate : t,\n      r = e.motionConfig,\n      l = void 0 === r ? ae.motionConfig : r,\n      o = e.theme,\n      u = e.renderWrapper,\n      c = K(e, ke);\n    return d(m, {\n      animate: n,\n      isInteractive: i,\n      motionConfig: l,\n      renderWrapper: u,\n      theme: o,\n      children: d(Le, z({\n        isInteractive: i\n      }, c))\n    });\n  },\n  Ce = [\"isInteractive\", \"renderWrapper\", \"theme\"],\n  Ve = function (e, a, i, t) {\n    return e.find(function (e) {\n      return w(e.x + a.left, e.y + a.top, e.width, e.height, i, t);\n    });\n  },\n  We = function (e) {\n    var a = e.data,\n      r = e.indexBy,\n      u = e.keys,\n      c = e.margin,\n      s = e.width,\n      g = e.height,\n      v = e.groupMode,\n      f = e.layout,\n      m = e.reverse,\n      p = e.minValue,\n      y = e.maxValue,\n      S = e.valueScale,\n      k = e.indexScale,\n      w = e.padding,\n      C = e.innerPadding,\n      B = e.axisTop,\n      I = e.axisRight,\n      T = e.axisBottom,\n      P = void 0 === T ? ie.axisBottom : T,\n      E = e.axisLeft,\n      F = void 0 === E ? ie.axisLeft : E,\n      Y = e.enableGridX,\n      D = void 0 === Y ? ie.enableGridX : Y,\n      O = e.enableGridY,\n      G = void 0 === O ? ie.enableGridY : O,\n      A = e.gridXValues,\n      j = e.gridYValues,\n      q = e.layers,\n      K = void 0 === q ? ie.layers : q,\n      N = e.renderBar,\n      J = void 0 === N ? function (e, a) {\n        var i = a.bar,\n          t = i.color,\n          n = i.height,\n          r = i.width,\n          l = i.x,\n          o = i.y,\n          d = a.borderColor,\n          u = a.borderRadius,\n          c = a.borderWidth,\n          s = a.label,\n          h = a.labelColor,\n          b = a.shouldRenderLabel;\n        if (e.fillStyle = t, c > 0 && (e.strokeStyle = d, e.lineWidth = c), e.beginPath(), u > 0) {\n          var g = Math.min(u, n);\n          e.moveTo(l + g, o), e.lineTo(l + r - g, o), e.quadraticCurveTo(l + r, o, l + r, o + g), e.lineTo(l + r, o + n - g), e.quadraticCurveTo(l + r, o + n, l + r - g, o + n), e.lineTo(l + g, o + n), e.quadraticCurveTo(l, o + n, l, o + n - g), e.lineTo(l, o + g), e.quadraticCurveTo(l, o, l + g, o), e.closePath();\n        } else e.rect(l, o, r, n);\n        e.fill(), c > 0 && e.stroke(), b && (e.textBaseline = \"middle\", e.textAlign = \"center\", e.fillStyle = h, e.fillText(s, l + r / 2, o + n / 2));\n      } : N,\n      Q = e.enableLabel,\n      U = void 0 === Q ? ie.enableLabel : Q,\n      Z = e.label,\n      $ = e.labelSkipWidth,\n      _ = void 0 === $ ? ie.labelSkipWidth : $,\n      ee = e.labelSkipHeight,\n      ae = void 0 === ee ? ie.labelSkipHeight : ee,\n      te = e.labelTextColor,\n      ne = e.colorBy,\n      re = e.colors,\n      le = e.borderRadius,\n      oe = void 0 === le ? ie.borderRadius : le,\n      de = e.borderWidth,\n      ue = void 0 === de ? ie.borderWidth : de,\n      ce = e.borderColor,\n      se = e.annotations,\n      he = void 0 === se ? ie.annotations : se,\n      be = e.legendLabel,\n      ge = e.tooltipLabel,\n      ve = e.valueFormat,\n      fe = e.isInteractive,\n      me = void 0 === fe ? ie.isInteractive : fe,\n      pe = e.tooltip,\n      xe = void 0 === pe ? ie.tooltip : pe,\n      ye = e.onClick,\n      ke = e.onMouseEnter,\n      Le = e.onMouseLeave,\n      we = e.legends,\n      Ce = e.pixelRatio,\n      We = void 0 === Ce ? ie.pixelRatio : Ce,\n      Me = e.canvasRef,\n      Be = R(null),\n      Ie = b(),\n      Te = x(s, g, c),\n      Re = Te.margin,\n      He = Te.innerWidth,\n      Pe = Te.innerHeight,\n      Ee = Te.outerWidth,\n      Fe = Te.outerHeight,\n      Xe = Se({\n        indexBy: r,\n        label: Z,\n        tooltipLabel: ge,\n        valueFormat: ve,\n        colors: re,\n        colorBy: ne,\n        borderColor: ce,\n        labelTextColor: te,\n        groupMode: v,\n        layout: f,\n        reverse: m,\n        data: a,\n        keys: u,\n        minValue: p,\n        maxValue: y,\n        margin: Re,\n        width: He,\n        height: Pe,\n        padding: w,\n        innerPadding: C,\n        valueScale: S,\n        indexScale: k,\n        enableLabel: U,\n        labelSkipWidth: _,\n        labelSkipHeight: ae,\n        legends: we,\n        legendLabel: be\n      }),\n      Ye = Xe.bars,\n      De = Xe.barsWithValue,\n      Oe = Xe.xScale,\n      Ge = Xe.yScale,\n      Ae = Xe.getLabel,\n      je = Xe.getTooltipLabel,\n      qe = Xe.getBorderColor,\n      ze = Xe.getLabelColor,\n      Ke = Xe.shouldRenderBarLabel,\n      Ne = Xe.legendsWithData,\n      Je = X(),\n      Qe = Je.showTooltipFromEvent,\n      Ue = Je.hideTooltip,\n      Ze = l({\n        annotations: n({\n          data: Ye,\n          annotations: he,\n          getPosition: function (e) {\n            return {\n              x: e.x,\n              y: e.y\n            };\n          },\n          getDimensions: function (e) {\n            var a = e.width,\n              i = e.height;\n            return {\n              width: a,\n              height: i,\n              size: Math.max(a, i)\n            };\n          }\n        })\n      }),\n      $e = V(function () {\n        return {\n          borderRadius: oe,\n          borderWidth: ue,\n          isInteractive: me,\n          isFocusable: !1,\n          labelSkipWidth: _,\n          labelSkipHeight: ae,\n          margin: Re,\n          width: s,\n          height: g,\n          innerWidth: He,\n          innerHeight: Pe,\n          bars: Ye,\n          legendData: Ne,\n          enableLabel: U,\n          xScale: Oe,\n          yScale: Ge,\n          tooltip: xe,\n          getTooltipLabel: je,\n          onClick: ye,\n          onMouseEnter: ke,\n          onMouseLeave: Le\n        };\n      }, [oe, ue, me, _, ae, Re, s, g, He, Pe, Ye, Ne, U, Oe, Ge, xe, je, ye, ke, Le]);\n    H(function () {\n      var e,\n        a = null == (e = Be.current) ? void 0 : e.getContext(\"2d\");\n      Be.current && a && (Be.current.width = Ee * We, Be.current.height = Fe * We, a.scale(We, We), a.fillStyle = Ie.background, a.fillRect(0, 0, Ee, Fe), a.translate(Re.left, Re.top), K.forEach(function (e) {\n        \"grid\" === e ? \"number\" == typeof Ie.grid.line.strokeWidth && Ie.grid.line.strokeWidth > 0 && (a.lineWidth = Ie.grid.line.strokeWidth, a.strokeStyle = Ie.grid.line.stroke, D && i(a, {\n          width: s,\n          height: g,\n          scale: Oe,\n          axis: \"x\",\n          values: A\n        }), G && i(a, {\n          width: s,\n          height: g,\n          scale: Ge,\n          axis: \"y\",\n          values: j\n        })) : \"axes\" === e ? t(a, {\n          xScale: Oe,\n          yScale: Ge,\n          width: He,\n          height: Pe,\n          top: B,\n          right: I,\n          bottom: P,\n          left: F,\n          theme: Ie\n        }) : \"bars\" === e ? De.forEach(function (e) {\n          J(a, {\n            bar: e,\n            borderColor: qe(e),\n            borderRadius: oe,\n            borderWidth: ue,\n            label: Ae(e.data),\n            labelColor: ze(e),\n            shouldRenderLabel: Ke(e)\n          });\n        }) : \"legends\" === e ? Ne.forEach(function (e) {\n          var i = e[0],\n            t = e[1];\n          h(a, z({}, i, {\n            data: t,\n            containerWidth: He,\n            containerHeight: Pe,\n            theme: Ie\n          }));\n        }) : \"annotations\" === e ? o(a, {\n          annotations: Ze,\n          theme: Ie\n        }) : \"function\" == typeof e && e(a, $e);\n      }), a.save());\n    }, [P, F, I, B, De, oe, ue, Ze, D, G, qe, Ae, ze, A, j, v, g, Pe, He, $e, K, f, Ne, Re.left, Re.top, Fe, Ee, We, J, Oe, Ge, m, Ke, Ie, s]);\n    var _e = M(function (e) {\n        if (Ye && Be.current) {\n          var a = L(Be.current, e),\n            i = a[0],\n            t = a[1],\n            n = Ve(Ye, Re, i, t);\n          void 0 !== n ? (Qe(W(xe, z({}, n.data, {\n            color: n.color,\n            label: n.label,\n            value: Number(n.data.value)\n          })), e), \"mouseenter\" === e.type && (null == ke || ke(n.data, e))) : Ue();\n        }\n      }, [Ue, Re, ke, Ye, Qe, xe]),\n      ea = M(function (e) {\n        if (Ye && Be.current) {\n          Ue();\n          var a = L(Be.current, e),\n            i = a[0],\n            t = a[1],\n            n = Ve(Ye, Re, i, t);\n          n && (null == Le || Le(n.data, e));\n        }\n      }, [Ue, Re, Le, Ye]),\n      aa = M(function (e) {\n        if (Ye && Be.current) {\n          var a = L(Be.current, e),\n            i = a[0],\n            t = a[1],\n            n = Ve(Ye, Re, i, t);\n          void 0 !== n && (null == ye || ye(z({}, n.data, {\n            color: n.color\n          }), e));\n        }\n      }, [Re, ye, Ye]);\n    return d(\"canvas\", {\n      ref: function (e) {\n        Be.current = e, Me && \"current\" in Me && (Me.current = e);\n      },\n      width: Ee * We,\n      height: Fe * We,\n      style: {\n        width: Ee,\n        height: Fe,\n        cursor: me ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: me ? _e : void 0,\n      onMouseMove: me ? _e : void 0,\n      onMouseLeave: me ? ea : void 0,\n      onClick: me ? aa : void 0\n    });\n  },\n  Me = T(function (e, a) {\n    var i = e.isInteractive,\n      t = e.renderWrapper,\n      n = e.theme,\n      r = K(e, Ce);\n    return d(m, {\n      isInteractive: i,\n      renderWrapper: t,\n      theme: n,\n      animate: !1,\n      children: d(We, z({}, r, {\n        canvasRef: a\n      }))\n    });\n  }),\n  Be = function (e) {\n    return d(C, {\n      children: function (a) {\n        var i = a.width,\n          t = a.height;\n        return d(we, z({\n          width: i,\n          height: t\n        }, e));\n      }\n    });\n  },\n  Ie = T(function (e, a) {\n    return d(C, {\n      children: function (i) {\n        var t = i.width,\n          n = i.height;\n        return d(Me, z({\n          width: t,\n          height: n\n        }, e, {\n          ref: a\n        }));\n      }\n    });\n  });\nexport { we as Bar, Me as BarCanvas, Z as BarItem, _ as BarTooltip, Be as ResponsiveBar, Ie as ResponsiveBarCanvas, ie as canvasDefaultProps, ee as defaultProps, ae as svgDefaultProps };","map":{"version":3,"names":["N","J","BarAnnotations","e","a","bars","i","annotations","t","n","data","getPosition","x","width","y","height","getDimensions","size","Math","max","d","u","children","map","r","z","Q","BarLegends","legends","toggleSerie","l","o","s","containerWidth","containerHeight","dataFrom","U","Z","BarItem","bar","K","style","borderColor","color","labelColor","h","labelOpacity","g","labelX","v","labelY","f","transform","m","p","borderRadius","borderWidth","label","S","shouldRenderLabel","k","isInteractive","L","onClick","w","onMouseEnter","C","onMouseLeave","B","tooltip","I","isFocusable","T","ariaLabel","R","ariaLabelledBy","H","ariaDescribedBy","F","b","Y","X","D","showTooltipFromEvent","O","showTooltipAt","G","hideTooltip","A","V","W","j","M","q","absX","absY","c","P","rect","E","rx","ry","fill","strokeWidth","stroke","focusable","tabIndex","onMouseMove","onFocus","onBlur","text","textAnchor","dominantBaseline","fillOpacity","labels","pointerEvents","$","_","BarTooltip","id","value","formattedValue","enableChip","ee","indexBy","keys","groupMode","layout","reverse","minValue","maxValue","valueScale","type","indexScale","round","padding","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","from","theme","colorBy","colors","scheme","tooltipLabel","indexValue","initialHiddenIds","markers","ae","layers","barComponent","defs","animate","motionConfig","role","ie","pixelRatio","window","devicePixelRatio","te","getIndexScale","all","min","ne","normalizeData","reduce","re","filterNullValues","Object","le","coerceValue","Number","oe","de","gt","ue","lt","ce","range","Array","repeat","se","clampToZero","he","generateVerticalGroupedBars","formatValue","getColor","getIndex","getTooltipLabel","xScale","yScale","margin","forEach","domain","length","hidden","index","push","key","left","top","be","generateHorizontalGroupedBars","ge","generateGroupedBars","hiddenIds","filter","includes","concat","Boolean","apply","isFinite","bandwidth","ve","fe","some","isArray","me","generateVerticalStackedBars","stackedData","pe","generateHorizontalStackedBars","xe","generateStackedBars","offset","ye","getLegendData","direction","legendLabel","Se","useBar","valueFormat","indexOf","ke","Le","we","Ce","Ve","We","Me","find","Be","barsWithValue","getLabel","getBorderColor","getLabelColor","shouldRenderBarLabel","legendsWithData","InnerBar","axisTop","axisRight","gridXValues","gridYValues","Ie","Te","Re","He","Pe","Ee","Fe","barAriaLabel","Xe","barAriaLabelledBy","Ye","barAriaDescribedBy","De","Oe","Ge","Ae","config","je","qe","outerWidth","ze","outerHeight","Ke","Ne","innerWidth","Je","innerHeight","Qe","Ue","Ze","$e","_e","ea","aa","ia","ta","na","ra","la","oa","enter","update","leave","immediate","initial","da","ua","dataKey","targetKey","ca","axes","grid","right","bottom","xValues","yValues","sa","legendData","Bar","renderWrapper","findBarUnderCursor","InnerBarCanvas","renderBar","fillStyle","strokeStyle","lineWidth","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","textBaseline","textAlign","fillText","canvasRef","current","getContext","scale","background","fillRect","translate","line","axis","values","save","ref","cursor","ResponsiveBar","BarCanvas","ResponsiveBarCanvas","canvasDefaultProps","defaultProps","svgDefaultProps"],"sources":["C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\BarAnnotations.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\BarLegends.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\BarItem.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\BarTooltip.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\props.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\compute\\common.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\compute\\grouped.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\compute\\stacked.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\compute\\legends.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\hooks.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\Bar.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\BarCanvas.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\ResponsiveBar.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\bar\\src\\ResponsiveBarCanvas.tsx"],"sourcesContent":["import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'markers', 'legends', 'annotations'],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'legends', 'annotations'],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: readonly RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: readonly RawDatum[], keys: readonly string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: readonly RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport uniqBy from 'lodash/uniqBy'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useTheme, useValueFormatter, Margin } from '@nivo/core'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { defaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\n\nexport const useBar = <RawDatum extends BarDatum>({\n    indexBy = defaultProps.indexBy,\n    keys = defaultProps.keys,\n    label = defaultProps.label,\n    tooltipLabel = defaultProps.tooltipLabel,\n    valueFormat,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    borderColor = defaultProps.borderColor,\n    labelTextColor = defaultProps.labelTextColor,\n    groupMode = defaultProps.groupMode,\n    layout = defaultProps.layout,\n    reverse = defaultProps.reverse,\n    data,\n    minValue = defaultProps.minValue,\n    maxValue = defaultProps.maxValue,\n    margin,\n    width,\n    height,\n    padding = defaultProps.padding,\n    innerPadding = defaultProps.innerPadding,\n    valueScale = defaultProps.valueScale,\n    indexScale = defaultProps.indexScale,\n    initialHiddenIds = defaultProps.initialHiddenIds,\n    enableLabel = defaultProps.enableLabel,\n    labelSkipWidth = defaultProps.labelSkipWidth,\n    labelSkipHeight = defaultProps.labelSkipHeight,\n    legends = defaultProps.legends,\n    legendLabel,\n}: {\n    indexBy?: BarCommonProps<RawDatum>['indexBy']\n    label?: BarCommonProps<RawDatum>['label']\n    tooltipLabel?: BarCommonProps<RawDatum>['tooltipLabel']\n    valueFormat?: BarCommonProps<RawDatum>['valueFormat']\n    colors?: BarCommonProps<RawDatum>['colors']\n    colorBy?: BarCommonProps<RawDatum>['colorBy']\n    borderColor?: BarCommonProps<RawDatum>['borderColor']\n    labelTextColor?: BarCommonProps<RawDatum>['labelTextColor']\n    groupMode?: BarCommonProps<RawDatum>['groupMode']\n    layout?: BarCommonProps<RawDatum>['layout']\n    reverse?: BarCommonProps<RawDatum>['reverse']\n    data: DataProps<RawDatum>['data']\n    keys?: BarCommonProps<RawDatum>['keys']\n    minValue?: BarCommonProps<RawDatum>['minValue']\n    maxValue?: BarCommonProps<RawDatum>['maxValue']\n    margin: Margin\n    width: number\n    height: number\n    padding?: BarCommonProps<RawDatum>['padding']\n    innerPadding?: BarCommonProps<RawDatum>['innerPadding']\n    valueScale?: BarCommonProps<RawDatum>['valueScale']\n    indexScale?: BarCommonProps<RawDatum>['indexScale']\n    initialHiddenIds?: BarCommonProps<RawDatum>['initialHiddenIds']\n    enableLabel?: BarCommonProps<RawDatum>['enableLabel']\n    labelSkipWidth?: BarCommonProps<RawDatum>['labelSkipWidth']\n    labelSkipHeight?: BarCommonProps<RawDatum>['labelSkipHeight']\n    legends?: BarCommonProps<RawDatum>['legends']\n    legendLabel?: BarCommonProps<RawDatum>['legendLabel']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback((id: string | number) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        borderColor,\n        theme\n    )\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        labelTextColor,\n        theme\n    )\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter(\n                    (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n                )\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n    }\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport {\n    BarCustomLayerProps,\n    BarDatum,\n    BarLayer,\n    BarLayerId,\n    BarSvgProps,\n    ComputedBarDatumWithValue,\n} from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { svgDefaultProps } from './props'\nimport { useTransition } from '@react-spring/web'\nimport { useBar } from './hooks'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as readonly BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n        initial: animate ? undefined : null,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    const layerContext: BarCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import {\n    BarCanvasCustomLayerProps,\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarDatum,\n    ComputedBarDatum,\n} from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel = canvasDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: BarCanvasCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            isFocusable: false,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport type ResponsiveBarSvgProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'height' | 'width'\n>\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: ResponsiveBarSvgProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport type ResponsiveBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'height' | 'width'\n>\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: ResponsiveBarCanvasProps<RawDatum>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas\n                    width={width}\n                    height={height}\n                    {...(props as Omit<BarCanvasProps<BarDatum>, 'height' | 'width'>)}\n                    ref={ref}\n                />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}