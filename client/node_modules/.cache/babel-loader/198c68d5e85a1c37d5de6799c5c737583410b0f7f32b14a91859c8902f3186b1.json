{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport instances from '../../dom/instances';\nvar Default = {\n  htmlEntities: false,\n  contentType: 'input',\n  onCopy: function () {}\n};\nvar DefaultInstanceOptions = {\n  id: null,\n  override: true\n};\nvar CopyClipboard = /** @class */function () {\n  function CopyClipboard(triggerEl, targetEl, options, instanceOptions) {\n    if (triggerEl === void 0) {\n      triggerEl = null;\n    }\n    if (targetEl === void 0) {\n      targetEl = null;\n    }\n    if (options === void 0) {\n      options = Default;\n    }\n    if (instanceOptions === void 0) {\n      instanceOptions = DefaultInstanceOptions;\n    }\n    this._instanceId = instanceOptions.id ? instanceOptions.id : targetEl.id;\n    this._triggerEl = triggerEl;\n    this._targetEl = targetEl;\n    this._options = __assign(__assign({}, Default), options);\n    this._initialized = false;\n    this.init();\n    instances.addInstance('CopyClipboard', this, this._instanceId, instanceOptions.override);\n  }\n  CopyClipboard.prototype.init = function () {\n    var _this = this;\n    if (this._targetEl && this._triggerEl && !this._initialized) {\n      this._triggerElClickHandler = function () {\n        _this.copy();\n      };\n      // clicking on the trigger element should copy the value of the target element\n      if (this._triggerEl) {\n        this._triggerEl.addEventListener('click', this._triggerElClickHandler);\n      }\n      this._initialized = true;\n    }\n  };\n  CopyClipboard.prototype.destroy = function () {\n    if (this._triggerEl && this._targetEl && this._initialized) {\n      if (this._triggerEl) {\n        this._triggerEl.removeEventListener('click', this._triggerElClickHandler);\n      }\n      this._initialized = false;\n    }\n  };\n  CopyClipboard.prototype.removeInstance = function () {\n    instances.removeInstance('CopyClipboard', this._instanceId);\n  };\n  CopyClipboard.prototype.destroyAndRemoveInstance = function () {\n    this.destroy();\n    this.removeInstance();\n  };\n  CopyClipboard.prototype.getTargetValue = function () {\n    if (this._options.contentType === 'input') {\n      return this._targetEl.value;\n    }\n    if (this._options.contentType === 'innerHTML') {\n      return this._targetEl.innerHTML;\n    }\n    if (this._options.contentType === 'textContent') {\n      return this._targetEl.textContent.replace(/\\s+/g, ' ').trim();\n    }\n  };\n  CopyClipboard.prototype.copy = function () {\n    var textToCopy = this.getTargetValue();\n    // Check if HTMLEntities option is enabled\n    if (this._options.htmlEntities) {\n      // Encode the text using HTML entities\n      textToCopy = this.decodeHTML(textToCopy);\n    }\n    // Create a temporary textarea element\n    var tempTextArea = document.createElement('textarea');\n    tempTextArea.value = textToCopy;\n    document.body.appendChild(tempTextArea);\n    // Select the text inside the textarea and copy it to the clipboard\n    tempTextArea.select();\n    document.execCommand('copy');\n    // Remove the temporary textarea\n    document.body.removeChild(tempTextArea);\n    // Callback function\n    this._options.onCopy(this);\n    return textToCopy;\n  };\n  // Function to encode text into HTML entities\n  CopyClipboard.prototype.decodeHTML = function (html) {\n    var textarea = document.createElement('textarea');\n    textarea.innerHTML = html;\n    return textarea.textContent;\n  };\n  CopyClipboard.prototype.updateOnCopyCallback = function (callback) {\n    this._options.onCopy = callback;\n  };\n  return CopyClipboard;\n}();\nexport function initCopyClipboards() {\n  document.querySelectorAll('[data-copy-to-clipboard-target]').forEach(function ($triggerEl) {\n    var targetId = $triggerEl.getAttribute('data-copy-to-clipboard-target');\n    var $targetEl = document.getElementById(targetId);\n    var contentType = $triggerEl.getAttribute('data-copy-to-clipboard-content-type');\n    var htmlEntities = $triggerEl.getAttribute('data-copy-to-clipboard-html-entities');\n    // check if the target element exists\n    if ($targetEl) {\n      if (!instances.instanceExists('CopyClipboard', $targetEl.getAttribute('id'))) {\n        new CopyClipboard($triggerEl, $targetEl, {\n          htmlEntities: htmlEntities && htmlEntities === 'true' ? true : Default.htmlEntities,\n          contentType: contentType ? contentType : Default.contentType\n        });\n      }\n    } else {\n      console.error(\"The target element with id \\\"\".concat(targetId, \"\\\" does not exist. Please check the data-copy-to-clipboard-target attribute.\"));\n    }\n  });\n}\nif (typeof window !== 'undefined') {\n  window.CopyClipboard = CopyClipboard;\n  window.initClipboards = initCopyClipboards;\n}\nexport default CopyClipboard;","map":{"version":3,"names":["instances","Default","htmlEntities","contentType","onCopy","DefaultInstanceOptions","id","override","CopyClipboard","triggerEl","targetEl","options","instanceOptions","_instanceId","_triggerEl","_targetEl","_options","__assign","_initialized","init","addInstance","prototype","_this","_triggerElClickHandler","copy","addEventListener","destroy","removeEventListener","removeInstance","destroyAndRemoveInstance","getTargetValue","value","innerHTML","textContent","replace","trim","textToCopy","decodeHTML","tempTextArea","document","createElement","body","appendChild","select","execCommand","removeChild","html","textarea","updateOnCopyCallback","callback","initCopyClipboards","querySelectorAll","forEach","$triggerEl","targetId","getAttribute","$targetEl","getElementById","instanceExists","console","error","concat","window","initClipboards"],"sources":["../../../../src/components/clipboard/index.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;AAIA,OAAOA,SAAS,MAAM,qBAAqB;AAE3C,IAAMC,OAAO,GAAyB;EAClCC,YAAY,EAAE,KAAK;EACnBC,WAAW,EAAE,OAAO;EACpBC,MAAM,EAAE,SAAAA,CAAA,GAAO;CAClB;AAED,IAAMC,sBAAsB,GAAoB;EAC5CC,EAAE,EAAE,IAAI;EACRC,QAAQ,EAAE;CACb;AAED,IAAAC,aAAA;EASI,SAAAA,cACIC,SAAoC,EACpCC,QAAwC,EACxCC,OAAuC,EACvCC,eAAyD;IAHzD,IAAAH,SAAA;MAAAA,SAAA,OAAoC;IAAA;IACpC,IAAAC,QAAA;MAAAA,QAAA,OAAwC;IAAA;IACxC,IAAAC,OAAA;MAAAA,OAAA,GAAAV,OAAuC;IAAA;IACvC,IAAAW,eAAA;MAAAA,eAAA,GAAAP,sBAAyD;IAAA;IAEzD,IAAI,CAACQ,WAAW,GAAGD,eAAe,CAACN,EAAE,GAC/BM,eAAe,CAACN,EAAE,GAClBI,QAAQ,CAACJ,EAAE;IAEjB,IAAI,CAACQ,UAAU,GAAGL,SAAS;IAC3B,IAAI,CAACM,SAAS,GAAGL,QAAQ;IACzB,IAAI,CAACM,QAAQ,GAAAC,QAAA,CAAAA,QAAA,KAAQhB,OAAO,GAAKU,OAAO,CAAE;IAC1C,IAAI,CAACO,YAAY,GAAG,KAAK;IAEzB,IAAI,CAACC,IAAI,EAAE;IACXnB,SAAS,CAACoB,WAAW,CACjB,eAAe,EACf,IAAI,EACJ,IAAI,CAACP,WAAW,EAChBD,eAAe,CAACL,QAAQ,CAC3B;EACL;EAEAC,aAAA,CAAAa,SAAA,CAAAF,IAAI,GAAJ;IAAA,IAAAG,KAAA;IACI,IAAI,IAAI,CAACP,SAAS,IAAI,IAAI,CAACD,UAAU,IAAI,CAAC,IAAI,CAACI,YAAY,EAAE;MACzD,IAAI,CAACK,sBAAsB,GAAG;QAC1BD,KAAI,CAACE,IAAI,EAAE;MACf,CAAC;MAED;MACA,IAAI,IAAI,CAACV,UAAU,EAAE;QACjB,IAAI,CAACA,UAAU,CAACW,gBAAgB,CAC5B,OAAO,EACP,IAAI,CAACF,sBAAsB,CAC9B;;MAGL,IAAI,CAACL,YAAY,GAAG,IAAI;;EAEhC,CAAC;EAEDV,aAAA,CAAAa,SAAA,CAAAK,OAAO,GAAP;IACI,IAAI,IAAI,CAACZ,UAAU,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACG,YAAY,EAAE;MACxD,IAAI,IAAI,CAACJ,UAAU,EAAE;QACjB,IAAI,CAACA,UAAU,CAACa,mBAAmB,CAC/B,OAAO,EACP,IAAI,CAACJ,sBAAsB,CAC9B;;MAEL,IAAI,CAACL,YAAY,GAAG,KAAK;;EAEjC,CAAC;EAEDV,aAAA,CAAAa,SAAA,CAAAO,cAAc,GAAd;IACI5B,SAAS,CAAC4B,cAAc,CAAC,eAAe,EAAE,IAAI,CAACf,WAAW,CAAC;EAC/D,CAAC;EAEDL,aAAA,CAAAa,SAAA,CAAAQ,wBAAwB,GAAxB;IACI,IAAI,CAACH,OAAO,EAAE;IACd,IAAI,CAACE,cAAc,EAAE;EACzB,CAAC;EAEDpB,aAAA,CAAAa,SAAA,CAAAS,cAAc,GAAd;IACI,IAAI,IAAI,CAACd,QAAQ,CAACb,WAAW,KAAK,OAAO,EAAE;MACvC,OAAO,IAAI,CAACY,SAAS,CAACgB,KAAK;;IAG/B,IAAI,IAAI,CAACf,QAAQ,CAACb,WAAW,KAAK,WAAW,EAAE;MAC3C,OAAO,IAAI,CAACY,SAAS,CAACiB,SAAS;;IAGnC,IAAI,IAAI,CAAChB,QAAQ,CAACb,WAAW,KAAK,aAAa,EAAE;MAC7C,OAAO,IAAI,CAACY,SAAS,CAACkB,WAAW,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACC,IAAI,EAAE;;EAErE,CAAC;EAED3B,aAAA,CAAAa,SAAA,CAAAG,IAAI,GAAJ;IACI,IAAIY,UAAU,GAAG,IAAI,CAACN,cAAc,EAAE;IAEtC;IACA,IAAI,IAAI,CAACd,QAAQ,CAACd,YAAY,EAAE;MAC5B;MACAkC,UAAU,GAAG,IAAI,CAACC,UAAU,CAACD,UAAU,CAAC;;IAG5C;IACA,IAAME,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;IACvDF,YAAY,CAACP,KAAK,GAAGK,UAAU;IAC/BG,QAAQ,CAACE,IAAI,CAACC,WAAW,CAACJ,YAAY,CAAC;IAEvC;IACAA,YAAY,CAACK,MAAM,EAAE;IACrBJ,QAAQ,CAACK,WAAW,CAAC,MAAM,CAAC;IAE5B;IACAL,QAAQ,CAACE,IAAI,CAACI,WAAW,CAACP,YAAY,CAAC;IAEvC;IACA,IAAI,CAACtB,QAAQ,CAACZ,MAAM,CAAC,IAAI,CAAC;IAE1B,OAAOgC,UAAU;EACrB,CAAC;EAED;EACA5B,aAAA,CAAAa,SAAA,CAAAgB,UAAU,GAAV,UAAWS,IAAY;IACnB,IAAMC,QAAQ,GAAGR,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;IACnDO,QAAQ,CAACf,SAAS,GAAGc,IAAI;IACzB,OAAOC,QAAQ,CAACd,WAAW;EAC/B,CAAC;EAEDzB,aAAA,CAAAa,SAAA,CAAA2B,oBAAoB,GAApB,UAAqBC,QAAoB;IACrC,IAAI,CAACjC,QAAQ,CAACZ,MAAM,GAAG6C,QAAQ;EACnC,CAAC;EACL,OAAAzC,aAAC;AAAD,CAAC,CA3HD;AA6HA,OAAM,SAAU0C,kBAAkBA,CAAA;EAC9BX,QAAQ,CACHY,gBAAgB,CAAC,iCAAiC,CAAC,CACnDC,OAAO,CAAC,UAACC,UAAU;IAChB,IAAMC,QAAQ,GAAGD,UAAU,CAACE,YAAY,CACpC,+BAA+B,CAClC;IACD,IAAMC,SAAS,GAAGjB,QAAQ,CAACkB,cAAc,CAACH,QAAQ,CAAC;IACnD,IAAMnD,WAAW,GAAGkD,UAAU,CAACE,YAAY,CACvC,qCAAqC,CACxC;IACD,IAAMrD,YAAY,GAAGmD,UAAU,CAACE,YAAY,CACxC,sCAAsC,CACzC;IAED;IACA,IAAIC,SAAS,EAAE;MACX,IACI,CAACxD,SAAS,CAAC0D,cAAc,CACrB,eAAe,EACfF,SAAS,CAACD,YAAY,CAAC,IAAI,CAAC,CAC/B,EACH;QACE,IAAI/C,aAAa,CACb6C,UAAyB,EACzBG,SAA6B,EAC7B;UACItD,YAAY,EACRA,YAAY,IAAIA,YAAY,KAAK,MAAM,GACjC,IAAI,GACJD,OAAO,CAACC,YAAY;UAC9BC,WAAW,EAAEA,WAAW,GAClBA,WAAW,GACXF,OAAO,CAACE;SACO,CAC5B;;KAER,MAAM;MACHwD,OAAO,CAACC,KAAK,CACT,gCAAAC,MAAA,CAA+BP,QAAQ,iFAA6E,CACvH;;EAET,CAAC,CAAC;AACV;AAEA,IAAI,OAAOQ,MAAM,KAAK,WAAW,EAAE;EAC/BA,MAAM,CAACtD,aAAa,GAAGA,aAAa;EACpCsD,MAAM,CAACC,cAAc,GAAGb,kBAAkB;;AAG9C,eAAe1C,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}