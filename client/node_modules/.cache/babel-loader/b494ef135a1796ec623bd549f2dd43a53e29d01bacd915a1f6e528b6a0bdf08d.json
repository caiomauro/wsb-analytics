{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caio\\\\Documents\\\\GeauxFrontend\\\\wsb-analytics\\\\client\\\\src\\\\Pages\\\\AnalyticsPage.tsx\",\n  _s = $RefreshSig$();\nimport { ResponsiveBar } from '@nivo/bar';\nimport 'flowbite';\nimport { useEffect, useRef, useState } from 'react';\nimport BottomHeader from \"../Components/BottomHeader\";\nimport Navbar from \"../Components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnalyticsPage() {\n  _s();\n  const [data, setData] = useState([]);\n  const [rangeData, setRangeData] = useState([]);\n  const [isTooLarge, setIsTooLarge] = useState(false);\n  const [stock, setStock] = useState(\"\");\n  const [allStocks, setAllStocks] = useState([]);\n  useEffect(() => {\n    function handleResize() {\n      setIsTooLarge(window.innerWidth > 1337);\n    }\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  const visualization = (data, entries) => {\n    const stock = {};\n    const stock_sentiment_count = {};\n    const final_data = [];\n    for (let i = 0; i < data.length; i++) {\n      const key = data[i][0];\n      const value = data[i][1];\n      if (!stock[key]) {\n        stock[key] = []; // Create an empty array if the key doesn't exist\n      }\n      stock[key].push(value);\n    }\n    Object.entries(stock).forEach(([key, value]) => {\n      stock_sentiment_count[key] = [0, 0, 0];\n      for (let i = 0; i < value.length; i++) {\n        if (value[i] == 'positive') {\n          stock_sentiment_count[key][0] = stock_sentiment_count[key][0] + 1;\n        } else if (value[i] == 'negative') {\n          stock_sentiment_count[key][1] = stock_sentiment_count[key][1] + 1;\n        } else {\n          stock_sentiment_count[key][2] = stock_sentiment_count[key][2] + 1;\n        }\n      }\n    });\n    console.log(stock);\n    console.log(stock_sentiment_count);\n    Object.entries(stock_sentiment_count).forEach(([key, value]) => {\n      const stock_data = [{\n        stock: key,\n        positive: value[0],\n        positiveColor: \"hsl(288, 70%, 50%)\",\n        negative: value[1],\n        negativeColor: \"hsl(2, 70%, 50%))\",\n        mixed: value[2],\n        mixedColor: \"hsl(323, 70%, 50%)\"\n      }];\n      final_data.push(stock_data[0]);\n    });\n    final_data.sort((a, b) => {\n      // Calculate the sum of positive, negative, and mixed values for each object\n      const sumA = a.positive + a.negative + a.mixed;\n      const sumB = b.positive + b.negative + b.mixed;\n\n      // Sort in decreasing order based on the sum\n      return sumB - sumA;\n    });\n    console.log(final_data);\n    return final_data.slice(0, entries);\n  };\n  function groupDataBySegments(data, days) {\n    const segments = {};\n    const currentDate = new Date();\n    const currentTimestamp = currentDate.getTime();\n    const segmentDuration = 24 * 60 * 60 * 1000;\n    data.forEach(([sentiment, timestamp]) => {\n      const timestampNum = parseInt(timestamp);\n      const daysAgo = Math.floor((currentTimestamp - timestampNum) / (segmentDuration * days));\n      const segmentStart = currentTimestamp - daysAgo * segmentDuration * days;\n      const segmentKey = new Date(segmentStart).toISOString().slice(0, 10);\n      if (!segments[segmentKey]) {\n        segments[segmentKey] = [0, 0, 0];\n      }\n      if (sentiment == 'positive') {\n        segments[segmentKey][0] = segments[segmentKey][0] + 1;\n      } else if (sentiment == 'negative') {\n        segments[segmentKey][1] = segments[segmentKey][1] + 1;\n      } else {\n        segments[segmentKey][2] = segments[segmentKey][2] + 1;\n      }\n\n      // Add data point to the segment\n      //segments[segmentKey].push([sentiment, timestamp]);\n    });\n    return segments;\n  }\n  const visualizationTimeline = (stock, data, days) => {\n    const stock_date_sentiment = {};\n    const printHolder = {};\n    const final_data = [];\n    console.log(\"This is the data\", data);\n    for (let i = 0; i < data.length; i++) {\n      const stock = data[i][0];\n      const sentiment = data[i][1];\n      const dateObject = new Date(data[i][2]);\n      const unixTimestamp = dateObject.getTime();\n      if (!stock_date_sentiment[stock]) {\n        stock_date_sentiment[stock] = [];\n      }\n      stock_date_sentiment[stock].push([sentiment, unixTimestamp.toString()]);\n    }\n    ;\n    Object.entries(stock_date_sentiment).forEach(([stock, data]) => {\n      printHolder[stock] = groupDataBySegments(data, days);\n    });\n    Object.entries(printHolder[stock]).forEach(([date, sentiments]) => {\n      const stock_data = [{\n        day: date,\n        positive: sentiments[0],\n        positiveColor: \"hsl(288, 70%, 50%)\",\n        negative: sentiments[1],\n        negativeColor: \"hsl(2, 70%, 50%))\",\n        mixed: sentiments[2],\n        mixedColor: \"hsl(323, 70%, 50%)\"\n      }];\n      final_data.push(stock_data[0]);\n    });\n    console.log(printHolder);\n    console.log(\"Printing the parsed data for chart\");\n    console.log(final_data);\n    return final_data;\n  };\n  const fetchData = (count, entries) => {\n    fetch(`http://127.0.0.1:8000/api/stock-sentiments/?count=${count}`) // Use backticks for template literals\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Data to pull stock list\" + data.stock_sentiments);\n      setData(visualization(data.stock_sentiments, entries));\n    }).catch(error => {\n      console.error('There was a problem fetching the data:', error);\n    });\n  };\n  const fetchDataRange = (stock, range, days) => {\n    fetch(`http://127.0.0.1:8000/api/stock-sentiments/range/?starting_date=${range}`) // Use backticks for template literals\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setRangeData(visualizationTimeline(stock, data.stock_sentiments, days));\n      console.log(rangeData);\n    }).catch(error => {\n      console.error('There was a problem fetching the data:', error);\n    });\n  };\n  const theme = {\n    labels: {\n      text: {\n        fontSize: 15,\n        fill: \"black\"\n      }\n    },\n    axis: {\n      ticks: {\n        text: {\n          fontSize: 15,\n          fill: \"white\"\n        },\n        line: {\n          strokeWidth: 0\n        }\n      },\n      legend: {\n        text: {\n          fontSize: 15,\n          fill: \"white\"\n        }\n      },\n      domain: {\n        line: {\n          strokeWidth: 2,\n          stroke: 'white'\n        }\n      }\n    },\n    legends: {\n      text: {\n        fontSize: 15,\n        fill: \"white\"\n      }\n    },\n    grid: {\n      line: {\n        strokeWidth: 0\n      }\n    }\n  };\n  const MyResponsiveBar = ({\n    data\n  }) => /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n    data: data,\n    keys: ['positive', 'negative', 'mixed'],\n    indexBy: \"stock\",\n    margin: {\n      top: 50,\n      right: 60,\n      bottom: 50,\n      left: 60\n    },\n    padding: 0.3,\n    valueScale: {\n      type: 'linear'\n    },\n    indexScale: {\n      type: 'band',\n      round: true\n    },\n    colors: ['#22ff00', '#ff0000', '#ffcc00'],\n    colorBy: \"id\",\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisLeft: null,\n    layout: \"vertical\",\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      truncateTickAt: 5,\n      format: value => `${value}` // format x-axis tick labels\n    },\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    borderWidth: 1,\n    theme: theme,\n    role: \"application\",\n    tooltip: data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row bg-white p-1 px-2 rounded-md text-black\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold italic\",\n            children: data.indexValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 28\n          }, this), \": +\", data.formattedValue, \"  \", data.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }, this);\n    },\n    ariaLabel: \"Nivo bar chart demo\",\n    barAriaLabel: e => e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 9\n  }, this);\n  const MyResponsiveBarMobile = ({\n    data\n  }) => /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n    data: data,\n    keys: ['positive', 'negative', 'mixed'],\n    indexBy: \"stock\",\n    margin: {\n      top: 50,\n      right: 130,\n      bottom: 50,\n      left: 60\n    },\n    padding: 0.3,\n    valueScale: {\n      type: 'linear'\n    },\n    indexScale: {\n      type: 'band',\n      round: true\n    },\n    colors: ['#22ff00', '#ff0000', '#ffcc00'],\n    colorBy: \"id\",\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickValues: 9\n    },\n    layout: \"horizontal\",\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    borderWidth: 1,\n    theme: theme,\n    role: \"application\",\n    tooltip: data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row bg-white p-1 px-2 rounded-md text-black\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold italic\",\n            children: data.indexValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 28\n          }, this), \": +\", data.formattedValue, \"  \", data.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }, this);\n    },\n    ariaLabel: \"Nivo bar chart demo\",\n    barAriaLabel: e => e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 9\n  }, this);\n  const MyResponsiveTimelineBar = ({\n    data\n  }) => /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n    data: data,\n    keys: ['positive', 'negative', 'mixed'],\n    indexBy: \"day\",\n    margin: {\n      top: 50,\n      right: 130,\n      bottom: 50,\n      left: 60\n    },\n    padding: 0.3,\n    valueScale: {\n      type: 'linear'\n    },\n    indexScale: {\n      type: 'band',\n      round: true\n    },\n    colors: ['#22ff00', '#ff0000', '#ffcc00'],\n    colorBy: \"id\",\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickValues: 9\n    },\n    layout: \"vertical\",\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    borderWidth: 1,\n    theme: theme,\n    role: \"application\",\n    tooltip: data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row bg-white p-1 px-2 rounded-md text-black\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold italic\",\n            children: data.indexValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 28\n          }, this), \": +\", data.formattedValue, \"  \", data.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }, this);\n    },\n    ariaLabel: \"Nivo bar chart demo\",\n    barAriaLabel: e => e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 9\n  }, this);\n  const container = useRef(null);\n  let runScript = true;\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-symbol-overview.js\";\n    script.type = \"text/javascript\";\n    script.async = true;\n    script.innerHTML = `\n                {\n                    \"symbols\": [\n                        [\n                            \"Apple\",\n                            \"AAPL|1D\"\n                        ],\n                        [\n                            \"Google\",\n                            \"GOOGL|1D\"\n                        ],\n                        [\n                            \"Microsoft\",\n                            \"MSFT|1D\"\n                        ],\n                        [\n                            \"NASDAQ:NVDA|1D\"\n                        ],\n                        [\n                            \"NYSE:TSM|1D\"\n                        ],\n                        [\n                            \"AMEX:SPY|1D\"\n                        ],\n                        [\n                            \"NASDAQ:TSLA|1D\"\n                        ],\n                        [\n                            \"NASDAQ:AMD|1D\"\n                        ],\n                        [\n                            \"BCBA:TSMC|1D\"\n                        ],\n                        [\n                            \"NASDAQ:INTC|1D\"\n                        ],\n                        [\n                            \"NYSE:VRT|1D\"\n                        ]\n                    ],\n                    \"chartOnly\": false,\n                    \"width\": 800,\n                    \"height\": 400,\n                    \"locale\": \"en\",\n                    \"colorTheme\": \"dark\",\n                    \"autosize\": false,\n                    \"showVolume\": false,\n                    \"showMA\": false,\n                    \"hideDateRanges\": false,\n                    \"hideMarketStatus\": false,\n                    \"hideSymbolLogo\": false,\n                    \"scalePosition\": \"right\",\n                    \"scaleMode\": \"Normal\",\n                    \"fontFamily\": \"-apple-system, BlinkMacSystemFont, Trebuchet MS, Roboto, Ubuntu, sans-serif\",\n                    \"fontSize\": \"10\",\n                    \"noTimeScale\": false,\n                    \"valuesTracking\": \"1\",\n                    \"changeMode\": \"price-and-percent\",\n                    \"chartType\": \"area\",\n                    \"maLineColor\": \"#2962FF\",\n                    \"maLineWidth\": 1,\n                    \"maLength\": 9,\n                    \"backgroundColor\": \"rgba(19, 23, 34, 0)\",\n                    \"lineWidth\": 2,\n                    \"lineType\": 0,\n                    \"dateRanges\": [\n                        \"1d|1\",\n                        \"1m|30\",\n                        \"3m|60\",\n                        \"12m|1D\",\n                        \"60m|1W\",\n                        \"all|1M\"\n                    ],\n                    \"dateFormat\": \"yyyy-MM-dd\"\n                }`;\n    if (runScript) {\n      var _container$current;\n      fetchData(1000, 10);\n      fetchDataRange(\"NVDA\", \"2024-03-01\", 1);\n      // Append the script to the DOM element\n      (_container$current = container.current) === null || _container$current === void 0 ? void 0 : _container$current.appendChild(script);\n    }\n\n    // Cleanup function\n    return () => {\n      runScript = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full h-full custom-background-img-mobile sm:custom-background-img-desktop\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"analytics-container\",\n      className: \"flex flex-col h-max w-full items-center overflow-y-auto gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white p-2\",\n        onClick: () => {\n          fetchDataRange(\"NVDA\", \"2024-03-01\", 1);\n        },\n        children: \"Range test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"count-button-container\",\n        className: \"flex flex-row w-full sm:w-2/4 justify-around item-center pt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-white bg-white/10 hover:ring-2 hover:ring-amber-300 focus:ring-2 focus:outline-none focus:ring-amber-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center\",\n          onClick: () => {\n            fetchData(1000, 10);\n          },\n          children: \"Top 10 Stocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-white bg-white/10 hover:ring-2 hover:ring-amber-300 focus:ring-2 focus:outline-none focus:ring-amber-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center\",\n          onClick: () => {\n            fetchData(1000, 15);\n          },\n          children: \"Top 15 Stocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-white bg-white/10 hover:ring-2 hover:ring-amber-300 focus:ring-2 focus:outline-none focus:ring-amber-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center\",\n          onClick: () => {\n            fetchData(1000, 20);\n          },\n          children: \"Top 20 Stocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"count-container\",\n        className: \"flex flex-col h-128 w-full sm:h-128 sm:w-4/6 sm:mx-auto\",\n        children: isTooLarge ? data.length > 0 && /*#__PURE__*/_jsxDEV(MyResponsiveBar, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 48\n        }, this) : data.length > 0 && /*#__PURE__*/_jsxDEV(MyResponsiveBarMobile, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col h-screen w-max sm:h-max sm:w-4/6 sm:mx-auto items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tradingview-widget-container\",\n          ref: container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tradingview-widget-container__widget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tradingview-widget-copyright\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://www.tradingview.com/\",\n              rel: \"noopener nofollow\",\n              target: \"_blank\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"blue-text\",\n                children: \"Track all markets on TradingView\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 154\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"count-container\",\n        className: \"flex flex-col h-128 w-full sm:h-128 sm:w-4/6 sm:mx-auto\",\n        children: rangeData.length > 0 && /*#__PURE__*/_jsxDEV(MyResponsiveTimelineBar, {\n          data: rangeData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(BottomHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 9\n  }, this);\n}\n_s(AnalyticsPage, \"2N0z0bjD9icXPShOKWnnn9LY5CY=\");\n_c = AnalyticsPage;\nexport default AnalyticsPage;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsPage\");","map":{"version":3,"names":["ResponsiveBar","useEffect","useRef","useState","BottomHeader","Navbar","jsxDEV","_jsxDEV","AnalyticsPage","_s","data","setData","rangeData","setRangeData","isTooLarge","setIsTooLarge","stock","setStock","allStocks","setAllStocks","handleResize","window","innerWidth","addEventListener","removeEventListener","visualization","entries","stock_sentiment_count","final_data","i","length","key","value","push","Object","forEach","console","log","stock_data","positive","positiveColor","negative","negativeColor","mixed","mixedColor","sort","a","b","sumA","sumB","slice","groupDataBySegments","days","segments","currentDate","Date","currentTimestamp","getTime","segmentDuration","sentiment","timestamp","timestampNum","parseInt","daysAgo","Math","floor","segmentStart","segmentKey","toISOString","visualizationTimeline","stock_date_sentiment","printHolder","dateObject","unixTimestamp","toString","date","sentiments","day","fetchData","count","fetch","then","response","ok","Error","json","stock_sentiments","catch","error","fetchDataRange","range","theme","labels","text","fontSize","fill","axis","ticks","line","strokeWidth","legend","domain","stroke","legends","grid","MyResponsiveBar","keys","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","colors","colorBy","borderColor","from","modifiers","axisTop","axisRight","axisLeft","layout","axisBottom","tickSize","tickPadding","tickRotation","truncateTickAt","format","labelSkipWidth","labelSkipHeight","borderWidth","role","tooltip","className","children","indexValue","fileName","_jsxFileName","lineNumber","columnNumber","formattedValue","id","ariaLabel","barAriaLabel","e","MyResponsiveBarMobile","tickValues","MyResponsiveTimelineBar","container","runScript","script","document","createElement","src","async","innerHTML","_container$current","current","appendChild","onClick","ref","href","rel","target","_c","$RefreshReg$"],"sources":["C:/Users/Caio/Documents/GeauxFrontend/wsb-analytics/client/src/Pages/AnalyticsPage.tsx"],"sourcesContent":["import { ResponsiveBar } from '@nivo/bar';\r\nimport 'flowbite';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport BottomHeader from \"../Components/BottomHeader\";\r\nimport Navbar from \"../Components/Navbar\";\r\n\r\nfunction AnalyticsPage(){\r\n\r\n    const [data, setData] = useState<graph_data[]>([]);\r\n    const [rangeData, setRangeData] = useState<timeline_data[]>([]);\r\n    const [isTooLarge, setIsTooLarge] = useState(false);\r\n    const [stock, setStock ] = useState(\"\");\r\n    const [ allStocks, setAllStocks ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        function handleResize(){\r\n            setIsTooLarge(window.innerWidth > 1337);\r\n        }\r\n        \r\n        handleResize();\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        }\r\n    }, []);\r\n\r\n    type graph_data = {\r\n        stock: string;\r\n        positive: number;\r\n        positiveColor: string;\r\n        negative: number;\r\n        negativeColor: string;\r\n        mixed: number;\r\n        mixedColor: string;\r\n    }\r\n\r\n    type timeline_data = {\r\n        day: string;\r\n        positive: number;\r\n        positiveColor: string;\r\n        negative: number;\r\n        negativeColor: string;\r\n        mixed: number\r\n        mixedColor: string;\r\n    }\r\n    interface MyResponsiveBarProps {\r\n        data: graph_data[];\r\n    }\r\n\r\n    interface MyResponsiveTimelineBarProps {\r\n        data: timeline_data[];\r\n    }\r\n\r\n    const visualization = (data: Array<Array<string>>, entries: number) => {\r\n        const stock: {[key:string]:Array<string>} = {}\r\n        const stock_sentiment_count: {[key:string]: Array<number>} ={}\r\n        const final_data: any[] = []\r\n\r\n        for (let i=0; i < data.length; i++){\r\n            const key = data[i][0];\r\n            const value = data[i][1];\r\n            \r\n            if (!stock[key]) {\r\n                stock[key] = []; // Create an empty array if the key doesn't exist\r\n            }\r\n            stock[key].push(value);\r\n        }\r\n\r\n        Object.entries(stock).forEach(([key, value]) => {\r\n            stock_sentiment_count[key] = [0,0,0]\r\n            for (let i=0; i < value.length; i++) {\r\n                if (value[i] == 'positive')\r\n                {\r\n                    stock_sentiment_count[key][0] = stock_sentiment_count[key][0] + 1\r\n                }\r\n                else if (value[i] == 'negative')\r\n                {\r\n                    stock_sentiment_count[key][1] = stock_sentiment_count[key][1] + 1\r\n                }\r\n                else \r\n                {\r\n                    stock_sentiment_count[key][2] = stock_sentiment_count[key][2] + 1\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log(stock)\r\n        console.log(stock_sentiment_count)\r\n\r\n        Object.entries(stock_sentiment_count).forEach(([key, value]) => {\r\n\r\n            const stock_data: graph_data[] = [\r\n                {\r\n                    stock: key,\r\n                    positive: value[0],\r\n                    positiveColor: \"hsl(288, 70%, 50%)\",\r\n                    negative: value[1],\r\n                    negativeColor: \"hsl(2, 70%, 50%))\",\r\n                    mixed: value[2],\r\n                    mixedColor: \"hsl(323, 70%, 50%)\",\r\n                }\r\n            ];\r\n            \r\n\r\n            final_data.push(stock_data[0])\r\n        });\r\n\r\n        final_data.sort((a: graph_data, b: graph_data) => {\r\n            // Calculate the sum of positive, negative, and mixed values for each object\r\n            const sumA = a.positive + a.negative + a.mixed;\r\n            const sumB = b.positive + b.negative + b.mixed;\r\n        \r\n            // Sort in decreasing order based on the sum\r\n            return sumB - sumA;\r\n        });\r\n\r\n        console.log(final_data)\r\n        return(final_data.slice(0,entries));\r\n    }\r\n\r\n    function groupDataBySegments(data: any[], days: number){\r\n        const segments: {[key: string]: any[]} = {}\r\n\r\n        const currentDate = new Date();\r\n        const currentTimestamp = currentDate.getTime();\r\n\r\n        const segmentDuration = 24 * 60 * 60 * 1000;\r\n\r\n        data.forEach(([sentiment, timestamp]) => {\r\n            const timestampNum = parseInt(timestamp);\r\n\r\n            const daysAgo = Math.floor((currentTimestamp - timestampNum) / (segmentDuration * days))\r\n            const segmentStart = currentTimestamp - (daysAgo * segmentDuration * days);\r\n            const segmentKey = new Date(segmentStart).toISOString().slice(0, 10);\r\n\r\n            if (!segments[segmentKey]) {\r\n                segments[segmentKey] = [0,0,0];\r\n            }\r\n\r\n            if (sentiment == 'positive')\r\n                {\r\n                    segments[segmentKey][0] = segments[segmentKey][0] + 1\r\n                }\r\n                else if (sentiment == 'negative')\r\n                {\r\n                    segments[segmentKey][1] = segments[segmentKey][1] + 1\r\n                }\r\n                else \r\n                {\r\n                    segments[segmentKey][2] = segments[segmentKey][2] + 1\r\n                }\r\n            \r\n            // Add data point to the segment\r\n            //segments[segmentKey].push([sentiment, timestamp]);\r\n        })\r\n        return segments;\r\n    }\r\n\r\n    const visualizationTimeline = (stock: string, data: Array<Array<string>>, days: number) => {\r\n        const stock_date_sentiment: {[key:string]:Array<Array<string>>} = {}\r\n        const printHolder: {[key: string]: {[date: string]: Array<number>}} = {};\r\n        const final_data: any[] = [] \r\n\r\n        console.log(\"This is the data\", data)\r\n        for (let i=0; i < data.length; i++) {\r\n            const stock = data[i][0]\r\n            const sentiment = data[i][1]\r\n            const dateObject: Date = new Date(data[i][2]);\r\n            const unixTimestamp: number = dateObject.getTime();\r\n\r\n            if(!stock_date_sentiment[stock]) {\r\n                stock_date_sentiment[stock] = []\r\n            }\r\n            stock_date_sentiment[stock].push([sentiment, unixTimestamp.toString()])\r\n        };\r\n        \r\n        Object.entries(stock_date_sentiment).forEach(([stock, data]) => {\r\n            printHolder[stock] = groupDataBySegments(data, days);\r\n        });\r\n\r\n        Object.entries(printHolder[stock]).forEach(([date, sentiments]) => {\r\n\r\n            const stock_data: timeline_data[] = [\r\n                {\r\n                    day: date,\r\n                    positive: sentiments[0],\r\n                    positiveColor: \"hsl(288, 70%, 50%)\",\r\n                    negative: sentiments[1],\r\n                    negativeColor: \"hsl(2, 70%, 50%))\",\r\n                    mixed: sentiments[2],\r\n                    mixedColor: \"hsl(323, 70%, 50%)\",\r\n                }\r\n            ];\r\n\r\n            final_data.push(stock_data[0]);\r\n        });\r\n\r\n        console.log(printHolder);\r\n        console.log(\"Printing the parsed data for chart\")\r\n        console.log(final_data);\r\n        return final_data;\r\n    }\r\n\r\n    const fetchData = (count: number, entries: number) => {\r\n        fetch(`http://127.0.0.1:8000/api/stock-sentiments/?count=${count}`)  // Use backticks for template literals\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log(\"Data to pull stock list\" + data.stock_sentiments)\r\n                setData(visualization(data.stock_sentiments, entries));\r\n            })\r\n            .catch(error => {\r\n                console.error('There was a problem fetching the data:', error);\r\n            });\r\n    };\r\n\r\n    const fetchDataRange = (stock: string, range: string, days: number) => {\r\n        fetch(`http://127.0.0.1:8000/api/stock-sentiments/range/?starting_date=${range}`)  // Use backticks for template literals\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                setRangeData(visualizationTimeline(stock,data.stock_sentiments,days));\r\n                console.log(rangeData);\r\n            })\r\n            .catch(error => {\r\n                console.error('There was a problem fetching the data:', error);\r\n            });\r\n    }\r\n\r\n    const theme = {\r\n        labels: { text: { fontSize: 15, fill: \"black\" } },\r\n        axis: {\r\n          ticks: { text: { fontSize: 15, fill: \"white\" }, line: { strokeWidth: 0} },\r\n          legend: { text: { fontSize: 15, fill: \"white\"} },\r\n          domain: { line: { strokeWidth: 2, stroke: 'white'}},\r\n        },\r\n        legends: {\r\n            text: { fontSize: 15, fill: \"white\" },\r\n        },\r\n        grid: {\r\n            line: { strokeWidth: 0}\r\n        }\r\n      };\r\n\r\n    const MyResponsiveBar: React.FC<MyResponsiveBarProps> = ({ data }) => (\r\n        <ResponsiveBar\r\n            data={data}\r\n            keys={['positive', 'negative', 'mixed']}\r\n            indexBy=\"stock\"\r\n            margin={{ top: 50, right: 60, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            valueScale={{ type: 'linear' }}\r\n            indexScale={{ type: 'band', round: true }}\r\n            colors={['#22ff00', '#ff0000','#ffcc00']}\r\n            colorBy=\"id\"\r\n            borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisLeft={null}\r\n            layout='vertical'\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                truncateTickAt: 5,\r\n                format: value => `${value}` // format x-axis tick labels\r\n            }}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            borderWidth={1}\r\n            theme={theme}\r\n            role=\"application\"\r\n            tooltip={data => {\r\n                return(\r\n                    <div className=\"flex flex-row bg-white p-1 px-2 rounded-md text-black\">\r\n                        <p><span className=\"font-bold italic\">{data.indexValue}</span>: +{data.formattedValue}  {data.id}</p>\r\n                    </div>\r\n                )\r\n              }}\r\n            ariaLabel=\"Nivo bar chart demo\"\r\n            barAriaLabel={e=>e.id+\": \"+e.formattedValue+\" in country: \"+e.indexValue}\r\n        />\r\n    );\r\n\r\n    const MyResponsiveBarMobile: React.FC<MyResponsiveBarProps> = ({ data }) => (\r\n        <ResponsiveBar\r\n            data={data}\r\n            keys={['positive', 'negative', 'mixed']}\r\n            indexBy=\"stock\"\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            valueScale={{ type: 'linear' }}\r\n            indexScale={{ type: 'band', round: true }}\r\n            colors={['#22ff00', '#ff0000','#ffcc00']}\r\n            colorBy=\"id\"\r\n            borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{tickValues: 9}}\r\n            layout='horizontal'\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            borderWidth={1}\r\n            theme={theme}\r\n            role=\"application\"\r\n            tooltip={data => {\r\n                return(\r\n                    <div className=\"flex flex-row bg-white p-1 px-2 rounded-md text-black\">\r\n                        <p><span className=\"font-bold italic\">{data.indexValue}</span>: +{data.formattedValue}  {data.id}</p>\r\n                    </div>\r\n                )\r\n              }}\r\n            ariaLabel=\"Nivo bar chart demo\"\r\n            barAriaLabel={e=>e.id+\": \"+e.formattedValue+\" in country: \"+e.indexValue}\r\n        />\r\n    );\r\n\r\n    const MyResponsiveTimelineBar: React.FC<MyResponsiveTimelineBarProps> = ({ data }) => (\r\n        <ResponsiveBar\r\n            data={data}\r\n            keys={['positive', 'negative', 'mixed']}\r\n            indexBy=\"day\"\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            valueScale={{ type: 'linear' }}\r\n            indexScale={{ type: 'band', round: true }}\r\n            colors={['#22ff00', '#ff0000','#ffcc00']}\r\n            colorBy=\"id\"\r\n            borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{tickValues: 9}}\r\n            layout='vertical'\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            borderWidth={1}\r\n            theme={theme}\r\n            role=\"application\"\r\n            tooltip={data => {\r\n                return(\r\n                    <div className=\"flex flex-row bg-white p-1 px-2 rounded-md text-black\">\r\n                        <p><span className=\"font-bold italic\">{data.indexValue}</span>: +{data.formattedValue}  {data.id}</p>\r\n                    </div>\r\n                )\r\n              }}\r\n            ariaLabel=\"Nivo bar chart demo\"\r\n            barAriaLabel={e=>e.id+\": \"+e.formattedValue+\" in country: \"+e.indexValue}\r\n        />\r\n    );\r\n\r\n\r\n        const container = useRef<HTMLDivElement>(null);\r\n        let runScript = true;\r\n      \r\n        useEffect(() => {\r\n            const script = document.createElement(\"script\");\r\n            script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-symbol-overview.js\";\r\n            script.type = \"text/javascript\";\r\n            script.async = true;\r\n            script.innerHTML = `\r\n                {\r\n                    \"symbols\": [\r\n                        [\r\n                            \"Apple\",\r\n                            \"AAPL|1D\"\r\n                        ],\r\n                        [\r\n                            \"Google\",\r\n                            \"GOOGL|1D\"\r\n                        ],\r\n                        [\r\n                            \"Microsoft\",\r\n                            \"MSFT|1D\"\r\n                        ],\r\n                        [\r\n                            \"NASDAQ:NVDA|1D\"\r\n                        ],\r\n                        [\r\n                            \"NYSE:TSM|1D\"\r\n                        ],\r\n                        [\r\n                            \"AMEX:SPY|1D\"\r\n                        ],\r\n                        [\r\n                            \"NASDAQ:TSLA|1D\"\r\n                        ],\r\n                        [\r\n                            \"NASDAQ:AMD|1D\"\r\n                        ],\r\n                        [\r\n                            \"BCBA:TSMC|1D\"\r\n                        ],\r\n                        [\r\n                            \"NASDAQ:INTC|1D\"\r\n                        ],\r\n                        [\r\n                            \"NYSE:VRT|1D\"\r\n                        ]\r\n                    ],\r\n                    \"chartOnly\": false,\r\n                    \"width\": 800,\r\n                    \"height\": 400,\r\n                    \"locale\": \"en\",\r\n                    \"colorTheme\": \"dark\",\r\n                    \"autosize\": false,\r\n                    \"showVolume\": false,\r\n                    \"showMA\": false,\r\n                    \"hideDateRanges\": false,\r\n                    \"hideMarketStatus\": false,\r\n                    \"hideSymbolLogo\": false,\r\n                    \"scalePosition\": \"right\",\r\n                    \"scaleMode\": \"Normal\",\r\n                    \"fontFamily\": \"-apple-system, BlinkMacSystemFont, Trebuchet MS, Roboto, Ubuntu, sans-serif\",\r\n                    \"fontSize\": \"10\",\r\n                    \"noTimeScale\": false,\r\n                    \"valuesTracking\": \"1\",\r\n                    \"changeMode\": \"price-and-percent\",\r\n                    \"chartType\": \"area\",\r\n                    \"maLineColor\": \"#2962FF\",\r\n                    \"maLineWidth\": 1,\r\n                    \"maLength\": 9,\r\n                    \"backgroundColor\": \"rgba(19, 23, 34, 0)\",\r\n                    \"lineWidth\": 2,\r\n                    \"lineType\": 0,\r\n                    \"dateRanges\": [\r\n                        \"1d|1\",\r\n                        \"1m|30\",\r\n                        \"3m|60\",\r\n                        \"12m|1D\",\r\n                        \"60m|1W\",\r\n                        \"all|1M\"\r\n                    ],\r\n                    \"dateFormat\": \"yyyy-MM-dd\"\r\n                }`;\r\n        \r\n            if (runScript) {\r\n                fetchData(1000,10)\r\n                fetchDataRange(\"NVDA\",\"2024-03-01\",1)\r\n                // Append the script to the DOM element\r\n                container.current?.appendChild(script);\r\n            }\r\n        \r\n            // Cleanup function\r\n            return () => {\r\n                runScript = false;\r\n            };\r\n        }, []);\r\n        \r\n\r\n    return(\r\n        <div className=\"flex flex-col w-full h-full custom-background-img-mobile sm:custom-background-img-desktop\">\r\n            <Navbar />\r\n                <div id=\"analytics-container\" className=\"flex flex-col h-max w-full items-center overflow-y-auto gap-2\">\r\n                    <button className=\"bg-blue-500 text-white p-2\" onClick={()=>{fetchDataRange(\"NVDA\",\"2024-03-01\",1);}}>Range test</button>\r\n                    <div id=\"count-button-container\" className=\"flex flex-row w-full sm:w-2/4 justify-around item-center pt-2\">\r\n                        <button className=\"text-white bg-white/10 hover:ring-2 hover:ring-amber-300 focus:ring-2 focus:outline-none focus:ring-amber-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center\" onClick={() => {fetchData(1000,10)}}>Top 10 Stocks</button>\r\n                        <button className=\"text-white bg-white/10 hover:ring-2 hover:ring-amber-300 focus:ring-2 focus:outline-none focus:ring-amber-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center\" onClick={() => {fetchData(1000,15)}}>Top 15 Stocks</button>\r\n                        <button className=\"text-white bg-white/10 hover:ring-2 hover:ring-amber-300 focus:ring-2 focus:outline-none focus:ring-amber-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center\" onClick={() => {fetchData(1000,20)}}>Top 20 Stocks</button>\r\n                    </div>\r\n                    <div id=\"count-container\" className=\"flex flex-col h-128 w-full sm:h-128 sm:w-4/6 sm:mx-auto\">\r\n                        {isTooLarge ? (\r\n                            data.length > 0 && <MyResponsiveBar data={data} />\r\n                        ) : (\r\n                            data.length > 0 && <MyResponsiveBarMobile data={data} />\r\n                        )}\r\n                    </div>\r\n                    <div className=\"flex flex-col h-screen w-max sm:h-max sm:w-4/6 sm:mx-auto items-center\">\r\n                        <div className=\"tradingview-widget-container\" ref={container}>\r\n                            <div className=\"tradingview-widget-container__widget\"></div>\r\n                            <div className=\"tradingview-widget-copyright\"><a href=\"https://www.tradingview.com/\" rel=\"noopener nofollow\" target=\"_blank\"><span className=\"blue-text\">Track all markets on TradingView</span></a></div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"count-container\" className=\"flex flex-col h-128 w-full sm:h-128 sm:w-4/6 sm:mx-auto\">\r\n                        {rangeData.length > 0 && <MyResponsiveTimelineBar data={rangeData} />}\r\n                    </div>\r\n                </div>\r\n            <BottomHeader />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnalyticsPage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}