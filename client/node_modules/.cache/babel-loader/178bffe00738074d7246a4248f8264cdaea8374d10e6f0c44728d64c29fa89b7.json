{"ast":null,"code":"var _jsxFileName = \"/Users/rutemauro/Documents/GitHub/wsb-analytics/client/src/Context/NavbarContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavbarContext = /*#__PURE__*/createContext(undefined);\nexport const NavbarProvider = ({\n  children\n}) => {\n  _s();\n  const [activePage, setActivePage] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(NavbarContext.Provider, {\n    value: {\n      activePage,\n      setActivePage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(NavbarProvider, \"OHF7ejdGvzniOXHgVO5HgZad2MA=\");\n_c = NavbarProvider;\nexport const useNavbar = () => {\n  _s2();\n  const context = useContext(NavbarContext);\n  if (!context) {\n    throw new Error('useNavbar must be used within a NavbarProvider');\n  }\n  return context;\n};\n_s2(useNavbar, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"NavbarProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","NavbarContext","undefined","NavbarProvider","children","_s","activePage","setActivePage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNavbar","_s2","context","Error","$RefreshReg$"],"sources":["/Users/rutemauro/Documents/GitHub/wsb-analytics/client/src/Context/NavbarContext.tsx"],"sourcesContent":["import React, { ReactNode, createContext, useContext, useState } from 'react';\n\ninterface NavbarContextType {\n    activePage: string;\n    setActivePage: (page: string) => void;\n}\n\nconst NavbarContext = createContext<NavbarContextType | undefined>(undefined);\n\nexport const NavbarProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [activePage, setActivePage] = useState(\"\");\n\n    return (\n        <NavbarContext.Provider value={{ activePage, setActivePage }}>\n            {children}\n        </NavbarContext.Provider>\n    );\n};\n\nexport const useNavbar = () => {\n    const context = useContext(NavbarContext);\n    if (!context) {\n        throw new Error('useNavbar must be used within a NavbarProvider');\n    }\n    return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAeC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9E,MAAMC,aAAa,gBAAGL,aAAa,CAAgCM,SAAS,CAAC;AAE7E,OAAO,MAAMC,cAAiD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,oBACIE,OAAA,CAACC,aAAa,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEH,UAAU;MAAEC;IAAc,CAAE;IAAAH,QAAA,EACxDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAACR,EAAA,CARWF,cAAiD;AAAAW,EAAA,GAAjDX,cAAiD;AAU9D,OAAO,MAAMY,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGpB,UAAU,CAACI,aAAa,CAAC;EACzC,IAAI,CAACgB,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACrE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}