{"ast":null,"code":"import { EditorView } from '@codemirror/view';\nimport { HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nexport var createTheme = _ref => {\n  var {\n    theme,\n    settings = {},\n    styles = []\n  } = _ref;\n  var themeOptions = {\n    '.cm-gutters': {}\n  };\n  var baseStyle = {};\n  if (settings.background) {\n    baseStyle.backgroundColor = settings.background;\n  }\n  if (settings.backgroundImage) {\n    baseStyle.backgroundImage = settings.backgroundImage;\n  }\n  if (settings.foreground) {\n    baseStyle.color = settings.foreground;\n  }\n  if (settings.background || settings.foreground) {\n    themeOptions['&'] = baseStyle;\n  }\n  if (settings.fontFamily) {\n    themeOptions['&.cm-editor .cm-scroller'] = {\n      fontFamily: settings.fontFamily\n    };\n  }\n  if (settings.gutterBackground) {\n    themeOptions['.cm-gutters'].backgroundColor = settings.gutterBackground;\n  }\n  if (settings.gutterForeground) {\n    themeOptions['.cm-gutters'].color = settings.gutterForeground;\n  }\n  if (settings.gutterBorder) {\n    themeOptions['.cm-gutters'].borderRightColor = settings.gutterBorder;\n  }\n  if (settings.caret) {\n    themeOptions['.cm-content'] = {\n      caretColor: settings.caret\n    };\n    themeOptions['.cm-cursor, .cm-dropCursor'] = {\n      borderLeftColor: settings.caret\n    };\n  }\n  var activeLineGutterStyle = {};\n  if (settings.gutterActiveForeground) {\n    activeLineGutterStyle.color = settings.gutterActiveForeground;\n  }\n  if (settings.lineHighlight) {\n    themeOptions['.cm-activeLine'] = {\n      backgroundColor: settings.lineHighlight\n    };\n    activeLineGutterStyle.backgroundColor = settings.lineHighlight;\n  }\n  themeOptions['.cm-activeLineGutter'] = activeLineGutterStyle;\n  if (settings.selection) {\n    themeOptions['&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection'] = {\n      background: settings.selection + ' !important'\n    };\n  }\n  if (settings.selectionMatch) {\n    themeOptions['& .cm-selectionMatch'] = {\n      backgroundColor: settings.selectionMatch\n    };\n  }\n  var themeExtension = EditorView.theme(themeOptions, {\n    dark: theme === 'dark'\n  });\n  var highlightStyle = HighlightStyle.define(styles);\n  var extension = [themeExtension, syntaxHighlighting(highlightStyle)];\n  return extension;\n};\nexport default createTheme;","map":{"version":3,"names":["EditorView","HighlightStyle","syntaxHighlighting","createTheme","_ref","theme","settings","styles","themeOptions","baseStyle","background","backgroundColor","backgroundImage","foreground","color","fontFamily","gutterBackground","gutterForeground","gutterBorder","borderRightColor","caret","caretColor","borderLeftColor","activeLineGutterStyle","gutterActiveForeground","lineHighlight","selection","selectionMatch","themeExtension","dark","highlightStyle","define","extension"],"sources":["C:/Users/Caio/Documents/GeauxFrontend/wsb-analytics/client/node_modules/@uiw/codemirror-themes/esm/index.js"],"sourcesContent":["import { EditorView } from '@codemirror/view';\nimport { HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nexport var createTheme = _ref => {\n  var {\n    theme,\n    settings = {},\n    styles = []\n  } = _ref;\n  var themeOptions = {\n    '.cm-gutters': {}\n  };\n  var baseStyle = {};\n  if (settings.background) {\n    baseStyle.backgroundColor = settings.background;\n  }\n  if (settings.backgroundImage) {\n    baseStyle.backgroundImage = settings.backgroundImage;\n  }\n  if (settings.foreground) {\n    baseStyle.color = settings.foreground;\n  }\n  if (settings.background || settings.foreground) {\n    themeOptions['&'] = baseStyle;\n  }\n  if (settings.fontFamily) {\n    themeOptions['&.cm-editor .cm-scroller'] = {\n      fontFamily: settings.fontFamily\n    };\n  }\n  if (settings.gutterBackground) {\n    themeOptions['.cm-gutters'].backgroundColor = settings.gutterBackground;\n  }\n  if (settings.gutterForeground) {\n    themeOptions['.cm-gutters'].color = settings.gutterForeground;\n  }\n  if (settings.gutterBorder) {\n    themeOptions['.cm-gutters'].borderRightColor = settings.gutterBorder;\n  }\n  if (settings.caret) {\n    themeOptions['.cm-content'] = {\n      caretColor: settings.caret\n    };\n    themeOptions['.cm-cursor, .cm-dropCursor'] = {\n      borderLeftColor: settings.caret\n    };\n  }\n  var activeLineGutterStyle = {};\n  if (settings.gutterActiveForeground) {\n    activeLineGutterStyle.color = settings.gutterActiveForeground;\n  }\n  if (settings.lineHighlight) {\n    themeOptions['.cm-activeLine'] = {\n      backgroundColor: settings.lineHighlight\n    };\n    activeLineGutterStyle.backgroundColor = settings.lineHighlight;\n  }\n  themeOptions['.cm-activeLineGutter'] = activeLineGutterStyle;\n  if (settings.selection) {\n    themeOptions['&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection'] = {\n      background: settings.selection + ' !important'\n    };\n  }\n  if (settings.selectionMatch) {\n    themeOptions['& .cm-selectionMatch'] = {\n      backgroundColor: settings.selectionMatch\n    };\n  }\n  var themeExtension = EditorView.theme(themeOptions, {\n    dark: theme === 'dark'\n  });\n  var highlightStyle = HighlightStyle.define(styles);\n  var extension = [themeExtension, syntaxHighlighting(highlightStyle)];\n  return extension;\n};\nexport default createTheme;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}