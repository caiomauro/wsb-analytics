{"ast":null,"code":"const visualization = (data, entries) => {\n  const stock = {};\n  const stock_sentiment_count = {};\n  const final_data = [];\n  for (let i = 0; i < data.length; i++) {\n    const key = data[i][0];\n    const value = data[i][1];\n    if (!stock[key]) {\n      stock[key] = []; // Create an empty array if the key doesn't exist\n    }\n    stock[key].push(value);\n  }\n  Object.entries(stock).forEach(([key, value]) => {\n    stock_sentiment_count[key] = [0, 0, 0];\n    for (let i = 0; i < value.length; i++) {\n      if (value[i] == \"positive\") {\n        stock_sentiment_count[key][0] = stock_sentiment_count[key][0] + 1;\n      } else if (value[i] == \"negative\") {\n        stock_sentiment_count[key][1] = stock_sentiment_count[key][1] + 1;\n      } else {\n        stock_sentiment_count[key][2] = stock_sentiment_count[key][2] + 1;\n      }\n    }\n  });\n  Object.entries(stock_sentiment_count).forEach(([key, value]) => {\n    if (key === \"N/A\" || key === \"Tesla\" || key === \"bonds\") {\n      return; // Skip this iteration\n    }\n    const stock_data = [{\n      stock: key,\n      positive: value[0],\n      positiveColor: \"hsl(288, 70%, 50%)\",\n      negative: value[1],\n      negativeColor: \"hsl(2, 70%, 50%))\",\n      mixed: value[2],\n      mixedColor: \"hsl(323, 70%, 50%)\"\n    }];\n    final_data.push(stock_data[0]);\n  });\n  final_data.sort((a, b) => {\n    // Calculate the sum of positive, negative, and mixed values for each object\n    const sumA = a.positive + a.negative + a.mixed;\n    const sumB = b.positive + b.negative + b.mixed;\n\n    // Sort in decreasing order based on the sum\n    return sumB - sumA;\n  });\n  return final_data.slice(0, entries);\n};\nexport default visualization;","map":{"version":3,"names":["visualization","data","entries","stock","stock_sentiment_count","final_data","i","length","key","value","push","Object","forEach","stock_data","positive","positiveColor","negative","negativeColor","mixed","mixedColor","sort","a","b","sumA","sumB","slice"],"sources":["/Users/rutemauro/Documents/GitHub/wsb-analytics/client/src/Utils/VisualizationUtil.tsx"],"sourcesContent":["type graph_data = {\n    stock: string;\n    positive: number;\n    positiveColor: string;\n    negative: number;\n    negativeColor: string;\n    mixed: number;\n    mixedColor: string;\n  };\n\nconst visualization = (data: Array<Array<string>>, entries: number) => {\n    const stock: { [key: string]: Array<string> } = {};\n    const stock_sentiment_count: { [key: string]: Array<number> } = {};\n    const final_data: any[] = [];\n\n    for (let i = 0; i < data.length; i++) {\n      const key = data[i][0];\n      const value = data[i][1];\n\n      if (!stock[key]) {\n        stock[key] = []; // Create an empty array if the key doesn't exist\n      }\n      stock[key].push(value);\n    }\n\n    Object.entries(stock).forEach(([key, value]) => {\n      stock_sentiment_count[key] = [0, 0, 0];\n      for (let i = 0; i < value.length; i++) {\n        if (value[i] == \"positive\") {\n          stock_sentiment_count[key][0] = stock_sentiment_count[key][0] + 1;\n        } else if (value[i] == \"negative\") {\n          stock_sentiment_count[key][1] = stock_sentiment_count[key][1] + 1;\n        } else {\n          stock_sentiment_count[key][2] = stock_sentiment_count[key][2] + 1;\n        }\n      }\n    });\n\n    Object.entries(stock_sentiment_count).forEach(([key, value]) => {\n      if (key === \"N/A\" || key === \"Tesla\" || key === \"bonds\") {\n        return; // Skip this iteration\n      }\n\n      const stock_data: graph_data[] = [\n        {\n          stock: key,\n          positive: value[0],\n          positiveColor: \"hsl(288, 70%, 50%)\",\n          negative: value[1],\n          negativeColor: \"hsl(2, 70%, 50%))\",\n          mixed: value[2],\n          mixedColor: \"hsl(323, 70%, 50%)\",\n        },\n      ];\n\n      final_data.push(stock_data[0]);\n    });\n\n    final_data.sort((a: graph_data, b: graph_data) => {\n      // Calculate the sum of positive, negative, and mixed values for each object\n      const sumA = a.positive + a.negative + a.mixed;\n      const sumB = b.positive + b.negative + b.mixed;\n\n      // Sort in decreasing order based on the sum\n      return sumB - sumA;\n    });\n\n    return final_data.slice(0, entries);\n  };\n\nexport default visualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}