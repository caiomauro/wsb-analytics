{"ast":null,"code":"import { useMemo as e, useRef as t, useEffect as i, useState as n, useCallback as a, createElement as r, Fragment as o } from \"react\";\nimport { usePropertyAccessor as d, useValueFormatter as l, degreesToRadians as s, radiansToDegrees as c, Container as u, useDimensions as v, bindDefs as f, SvgWrapper as g, ResponsiveWrapper as L, useTheme as h, getRelativeCursor as b } from \"@nivo/core\";\nimport { useArcGenerator as A, computeArcBoundingBox as p, ArcsLayer as k, ArcLinkLabelsLayer as I, ArcLabelsLayer as R, useArcLabels as m, useArcLinkLabels as O, drawCanvasArcLinkLabels as C, drawCanvasArcLabels as x, findArcUnderCursor as w } from \"@nivo/arcs\";\nimport { BoxLegendSvg as M, renderLegendToCanvas as y } from \"@nivo/legends\";\nimport { jsx as W, Fragment as S } from \"react/jsx-runtime\";\nimport { pie as T } from \"d3-shape\";\nimport { useOrdinalColorScale as D, useInheritedColor as V } from \"@nivo/colors\";\nimport { BasicTooltip as B, useTooltip as G } from \"@nivo/tooltip\";\nfunction E() {\n  return E = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var i = arguments[t];\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n]);\n    }\n    return e;\n  }, E.apply(this, arguments);\n}\nfunction F(e, t) {\n  if (null == e) return {};\n  var i,\n    n,\n    a = {},\n    r = Object.keys(e);\n  for (n = 0; n < r.length; n++) i = r[n], t.indexOf(i) >= 0 || (a[i] = e[i]);\n  return a;\n}\nvar H,\n  X = function (e) {\n    var t = e.width,\n      i = e.height,\n      n = e.legends,\n      a = e.data,\n      r = e.toggleSerie;\n    return W(S, {\n      children: n.map(function (e, n) {\n        var o;\n        return W(M, E({}, e, {\n          containerWidth: t,\n          containerHeight: i,\n          data: null != (o = e.data) ? o : a,\n          toggleSerie: e.toggleSerie ? r : void 0\n        }), n);\n      })\n    });\n  },\n  Y = {\n    id: \"id\",\n    value: \"value\",\n    sortByValue: !1,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n    layers: [\"arcs\", \"arcLinkLabels\", \"arcLabels\", \"legends\"],\n    startAngle: 0,\n    endAngle: 360,\n    fit: !0,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n    borderWidth: 0,\n    borderColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1]]\n    },\n    enableArcLabels: !0,\n    arcLabel: \"formattedValue\",\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: .5,\n    arcLabelsTextColor: {\n      theme: \"labels.text.fill\"\n    },\n    enableArcLinkLabels: !0,\n    arcLinkLabel: \"id\",\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: {\n      theme: \"labels.text.fill\"\n    },\n    arcLinkLabelsColor: {\n      theme: \"axis.ticks.line.stroke\"\n    },\n    colors: {\n      scheme: \"nivo\"\n    },\n    defs: [],\n    fill: [],\n    isInteractive: !0,\n    animate: !0,\n    motionConfig: \"gentle\",\n    transitionMode: \"innerRadius\",\n    tooltip: function (e) {\n      var t = e.datum;\n      return W(B, {\n        id: t.id,\n        value: t.formattedValue,\n        enableChip: !0,\n        color: t.color\n      });\n    },\n    legends: [],\n    role: \"img\",\n    pixelRatio: \"undefined\" != typeof window && null != (H = window.devicePixelRatio) ? H : 1\n  },\n  j = [\"points\"],\n  P = function (t) {\n    var i = t.data,\n      n = t.id,\n      a = void 0 === n ? Y.id : n,\n      r = t.value,\n      o = void 0 === r ? Y.value : r,\n      s = t.valueFormat,\n      c = t.colors,\n      u = void 0 === c ? Y.colors : c,\n      v = d(a),\n      f = d(o),\n      g = l(s),\n      L = D(u, \"id\");\n    return e(function () {\n      return i.map(function (e) {\n        var t,\n          i = v(e),\n          n = f(e),\n          a = {\n            id: i,\n            label: null != (t = e.label) ? t : i,\n            hidden: !1,\n            value: n,\n            formattedValue: g(n),\n            data: e\n          };\n        return E({}, a, {\n          color: L(a)\n        });\n      });\n    }, [i, v, f, g, L]);\n  },\n  q = function (n) {\n    var a = n.data,\n      r = n.startAngle,\n      o = n.endAngle,\n      d = n.innerRadius,\n      l = n.outerRadius,\n      u = n.padAngle,\n      v = n.sortByValue,\n      f = n.activeId,\n      g = n.activeInnerRadiusOffset,\n      L = n.activeOuterRadiusOffset,\n      h = n.hiddenIds,\n      b = n.forwardLegendData,\n      A = e(function () {\n        var e = T().value(function (e) {\n          return e.value;\n        }).startAngle(s(r)).endAngle(s(o)).padAngle(s(u));\n        return v || e.sortValues(null), e;\n      }, [r, o, u, v]),\n      p = e(function () {\n        var e = a.filter(function (e) {\n          return !h.includes(e.id);\n        });\n        return {\n          dataWithArc: A(e).map(function (e) {\n            var t = Math.abs(e.endAngle - e.startAngle);\n            return E({}, e.data, {\n              arc: {\n                index: e.index,\n                startAngle: e.startAngle,\n                endAngle: e.endAngle,\n                innerRadius: f === e.data.id ? d - g : d,\n                outerRadius: f === e.data.id ? l + L : l,\n                thickness: l - d,\n                padAngle: e.padAngle,\n                angle: t,\n                angleDeg: c(t)\n              }\n            });\n          }),\n          legendData: a.map(function (e) {\n            return {\n              id: e.id,\n              label: e.label,\n              color: e.color,\n              hidden: h.includes(e.id),\n              data: e\n            };\n          })\n        };\n      }, [A, a, h, f, d, g, l, L]),\n      k = p.legendData,\n      I = t(b);\n    return i(function () {\n      \"function\" == typeof I.current && I.current(k);\n    }, [I, k]), p;\n  },\n  z = function (e) {\n    var t = e.activeId,\n      i = e.onActiveIdChange,\n      r = e.defaultActiveId,\n      o = void 0 !== t,\n      d = n(o ? null : void 0 === r ? null : r),\n      l = d[0],\n      s = d[1];\n    return {\n      activeId: o ? t : l,\n      setActiveId: a(function (e) {\n        i && i(e), o || s(e);\n      }, [o, i, s])\n    };\n  },\n  J = function (e) {\n    var t = e.data,\n      i = e.radius,\n      r = e.innerRadius,\n      o = e.startAngle,\n      d = void 0 === o ? Y.startAngle : o,\n      l = e.endAngle,\n      c = void 0 === l ? Y.endAngle : l,\n      u = e.padAngle,\n      v = void 0 === u ? Y.padAngle : u,\n      f = e.sortByValue,\n      g = void 0 === f ? Y.sortByValue : f,\n      L = e.cornerRadius,\n      h = void 0 === L ? Y.cornerRadius : L,\n      b = e.activeInnerRadiusOffset,\n      p = void 0 === b ? Y.activeInnerRadiusOffset : b,\n      k = e.activeOuterRadiusOffset,\n      I = void 0 === k ? Y.activeOuterRadiusOffset : k,\n      R = e.activeId,\n      m = e.onActiveIdChange,\n      O = e.defaultActiveId,\n      C = e.forwardLegendData,\n      x = z({\n        activeId: R,\n        onActiveIdChange: m,\n        defaultActiveId: O\n      }),\n      w = x.activeId,\n      M = x.setActiveId,\n      y = n([]),\n      W = y[0],\n      S = y[1],\n      T = q({\n        data: t,\n        startAngle: d,\n        endAngle: c,\n        innerRadius: r,\n        outerRadius: i,\n        padAngle: v,\n        sortByValue: g,\n        activeId: w,\n        activeInnerRadiusOffset: p,\n        activeOuterRadiusOffset: I,\n        hiddenIds: W,\n        forwardLegendData: C\n      }),\n      D = a(function (e) {\n        S(function (t) {\n          return t.indexOf(e) > -1 ? t.filter(function (t) {\n            return t !== e;\n          }) : [].concat(t, [e]);\n        });\n      }, []);\n    return E({}, T, {\n      arcGenerator: A({\n        cornerRadius: h,\n        padAngle: s(v)\n      }),\n      setActiveId: M,\n      toggleSerie: D\n    });\n  },\n  K = function (t) {\n    var i = t.data,\n      r = t.width,\n      o = t.height,\n      d = t.innerRadius,\n      l = void 0 === d ? Y.innerRadius : d,\n      c = t.startAngle,\n      u = void 0 === c ? Y.startAngle : c,\n      v = t.endAngle,\n      f = void 0 === v ? Y.endAngle : v,\n      g = t.padAngle,\n      L = void 0 === g ? Y.padAngle : g,\n      h = t.sortByValue,\n      b = void 0 === h ? Y.sortByValue : h,\n      k = t.cornerRadius,\n      I = void 0 === k ? Y.cornerRadius : k,\n      R = t.fit,\n      m = void 0 === R ? Y.fit : R,\n      O = t.activeInnerRadiusOffset,\n      C = void 0 === O ? Y.activeInnerRadiusOffset : O,\n      x = t.activeOuterRadiusOffset,\n      w = void 0 === x ? Y.activeOuterRadiusOffset : x,\n      M = t.activeId,\n      y = t.onActiveIdChange,\n      W = t.defaultActiveId,\n      S = t.forwardLegendData,\n      T = z({\n        activeId: M,\n        onActiveIdChange: y,\n        defaultActiveId: W\n      }),\n      D = T.activeId,\n      V = T.setActiveId,\n      B = n([]),\n      G = B[0],\n      H = B[1],\n      X = e(function () {\n        var e,\n          t = Math.min(r, o) / 2,\n          i = t * Math.min(l, 1),\n          n = r / 2,\n          a = o / 2;\n        if (m) {\n          var d = p(n, a, t, u - 90, f - 90),\n            s = d.points,\n            c = F(d, j),\n            v = Math.min(r / c.width, o / c.height),\n            g = {\n              width: c.width * v,\n              height: c.height * v\n            };\n          g.x = (r - g.width) / 2, g.y = (o - g.height) / 2, n = (n - c.x) / c.width * c.width * v + g.x, a = (a - c.y) / c.height * c.height * v + g.y, e = {\n            box: c,\n            ratio: v,\n            points: s\n          }, t *= v, i *= v;\n        }\n        return {\n          centerX: n,\n          centerY: a,\n          radius: t,\n          innerRadius: i,\n          debug: e\n        };\n      }, [r, o, l, u, f, m]),\n      P = q({\n        data: i,\n        startAngle: u,\n        endAngle: f,\n        innerRadius: X.innerRadius,\n        outerRadius: X.radius,\n        padAngle: L,\n        sortByValue: b,\n        activeId: D,\n        activeInnerRadiusOffset: C,\n        activeOuterRadiusOffset: w,\n        hiddenIds: G,\n        forwardLegendData: S\n      }),\n      J = a(function (e) {\n        H(function (t) {\n          return t.indexOf(e) > -1 ? t.filter(function (t) {\n            return t !== e;\n          }) : [].concat(t, [e]);\n        });\n      }, []);\n    return E({\n      arcGenerator: A({\n        cornerRadius: I,\n        padAngle: s(L)\n      }),\n      activeId: D,\n      setActiveId: V,\n      toggleSerie: J\n    }, P, X);\n  },\n  N = function (t) {\n    var i = t.dataWithArc,\n      n = t.arcGenerator,\n      a = t.centerX,\n      r = t.centerY,\n      o = t.radius,\n      d = t.innerRadius;\n    return e(function () {\n      return {\n        dataWithArc: i,\n        arcGenerator: n,\n        centerX: a,\n        centerY: r,\n        radius: o,\n        innerRadius: d\n      };\n    }, [i, n, a, r, o, d]);\n  },\n  Q = function (t) {\n    var i = t.center,\n      n = t.data,\n      a = t.arcGenerator,\n      o = t.borderWidth,\n      d = t.borderColor,\n      l = t.isInteractive,\n      s = t.onClick,\n      c = t.onMouseEnter,\n      u = t.onMouseMove,\n      v = t.onMouseLeave,\n      f = t.setActiveId,\n      g = t.tooltip,\n      L = t.transitionMode,\n      h = G(),\n      b = h.showTooltipFromEvent,\n      A = h.hideTooltip,\n      p = e(function () {\n        if (l) return function (e, t) {\n          null == s || s(e, t);\n        };\n      }, [l, s]),\n      I = e(function () {\n        if (l) return function (e, t) {\n          b(r(g, {\n            datum: e\n          }), t), f(e.id), null == c || c(e, t);\n        };\n      }, [l, b, f, c, g]),\n      R = e(function () {\n        if (l) return function (e, t) {\n          b(r(g, {\n            datum: e\n          }), t), null == u || u(e, t);\n        };\n      }, [l, b, u, g]),\n      m = e(function () {\n        if (l) return function (e, t) {\n          A(), f(null), null == v || v(e, t);\n        };\n      }, [l, A, f, v]);\n    return W(k, {\n      center: i,\n      data: n,\n      arcGenerator: a,\n      borderWidth: o,\n      borderColor: d,\n      transitionMode: L,\n      onClick: p,\n      onMouseEnter: I,\n      onMouseMove: R,\n      onMouseLeave: m\n    });\n  },\n  U = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  Z = function (e) {\n    var t = e.data,\n      i = e.id,\n      n = void 0 === i ? Y.id : i,\n      a = e.value,\n      d = void 0 === a ? Y.value : a,\n      l = e.valueFormat,\n      s = e.sortByValue,\n      c = void 0 === s ? Y.sortByValue : s,\n      u = e.layers,\n      L = void 0 === u ? Y.layers : u,\n      h = e.startAngle,\n      b = void 0 === h ? Y.startAngle : h,\n      A = e.endAngle,\n      p = void 0 === A ? Y.endAngle : A,\n      k = e.padAngle,\n      m = void 0 === k ? Y.padAngle : k,\n      O = e.fit,\n      C = void 0 === O ? Y.fit : O,\n      x = e.innerRadius,\n      w = void 0 === x ? Y.innerRadius : x,\n      M = e.cornerRadius,\n      y = void 0 === M ? Y.cornerRadius : M,\n      S = e.activeInnerRadiusOffset,\n      T = void 0 === S ? Y.activeInnerRadiusOffset : S,\n      D = e.activeOuterRadiusOffset,\n      V = void 0 === D ? Y.activeOuterRadiusOffset : D,\n      B = e.width,\n      G = e.height,\n      E = e.margin,\n      F = e.colors,\n      H = void 0 === F ? Y.colors : F,\n      j = e.borderWidth,\n      q = void 0 === j ? Y.borderWidth : j,\n      z = e.borderColor,\n      J = void 0 === z ? Y.borderColor : z,\n      U = e.enableArcLabels,\n      Z = void 0 === U ? Y.enableArcLabels : U,\n      $ = e.arcLabel,\n      _ = void 0 === $ ? Y.arcLabel : $,\n      ee = e.arcLabelsSkipAngle,\n      te = void 0 === ee ? Y.arcLabelsSkipAngle : ee,\n      ie = e.arcLabelsTextColor,\n      ne = void 0 === ie ? Y.arcLabelsTextColor : ie,\n      ae = e.arcLabelsRadiusOffset,\n      re = void 0 === ae ? Y.arcLabelsRadiusOffset : ae,\n      oe = e.arcLabelsComponent,\n      de = e.enableArcLinkLabels,\n      le = void 0 === de ? Y.enableArcLinkLabels : de,\n      se = e.arcLinkLabel,\n      ce = void 0 === se ? Y.arcLinkLabel : se,\n      ue = e.arcLinkLabelsSkipAngle,\n      ve = void 0 === ue ? Y.arcLinkLabelsSkipAngle : ue,\n      fe = e.arcLinkLabelsOffset,\n      ge = void 0 === fe ? Y.arcLinkLabelsOffset : fe,\n      Le = e.arcLinkLabelsDiagonalLength,\n      he = void 0 === Le ? Y.arcLinkLabelsDiagonalLength : Le,\n      be = e.arcLinkLabelsStraightLength,\n      Ae = void 0 === be ? Y.arcLinkLabelsStraightLength : be,\n      pe = e.arcLinkLabelsThickness,\n      ke = void 0 === pe ? Y.arcLinkLabelsThickness : pe,\n      Ie = e.arcLinkLabelsTextOffset,\n      Re = void 0 === Ie ? Y.arcLinkLabelsTextOffset : Ie,\n      me = e.arcLinkLabelsTextColor,\n      Oe = void 0 === me ? Y.arcLinkLabelsTextColor : me,\n      Ce = e.arcLinkLabelsColor,\n      xe = void 0 === Ce ? Y.arcLinkLabelsColor : Ce,\n      we = e.arcLinkLabelComponent,\n      Me = e.defs,\n      ye = void 0 === Me ? Y.defs : Me,\n      We = e.fill,\n      Se = void 0 === We ? Y.fill : We,\n      Te = e.isInteractive,\n      De = void 0 === Te ? Y.isInteractive : Te,\n      Ve = e.onClick,\n      Be = e.onMouseEnter,\n      Ge = e.onMouseMove,\n      Ee = e.onMouseLeave,\n      Fe = e.tooltip,\n      He = void 0 === Fe ? Y.tooltip : Fe,\n      Xe = e.activeId,\n      Ye = e.onActiveIdChange,\n      je = e.defaultActiveId,\n      Pe = e.transitionMode,\n      qe = void 0 === Pe ? Y.transitionMode : Pe,\n      ze = e.legends,\n      Je = void 0 === ze ? Y.legends : ze,\n      Ke = e.forwardLegendData,\n      Ne = e.role,\n      Qe = void 0 === Ne ? Y.role : Ne,\n      Ue = v(B, G, E),\n      Ze = Ue.outerWidth,\n      $e = Ue.outerHeight,\n      _e = Ue.margin,\n      et = Ue.innerWidth,\n      tt = Ue.innerHeight,\n      it = P({\n        data: t,\n        id: n,\n        value: d,\n        valueFormat: l,\n        colors: H\n      }),\n      nt = K({\n        data: it,\n        width: et,\n        height: tt,\n        fit: C,\n        innerRadius: w,\n        startAngle: b,\n        endAngle: p,\n        padAngle: m,\n        sortByValue: c,\n        cornerRadius: y,\n        activeInnerRadiusOffset: T,\n        activeOuterRadiusOffset: V,\n        activeId: Xe,\n        onActiveIdChange: Ye,\n        defaultActiveId: je,\n        forwardLegendData: Ke\n      }),\n      at = nt.dataWithArc,\n      rt = nt.legendData,\n      ot = nt.arcGenerator,\n      dt = nt.centerX,\n      lt = nt.centerY,\n      st = nt.radius,\n      ct = nt.innerRadius,\n      ut = nt.setActiveId,\n      vt = nt.toggleSerie,\n      ft = f(ye, at, Se),\n      gt = {\n        arcs: null,\n        arcLinkLabels: null,\n        arcLabels: null,\n        legends: null\n      };\n    L.includes(\"arcs\") && (gt.arcs = W(Q, {\n      center: [dt, lt],\n      data: at,\n      arcGenerator: ot,\n      borderWidth: q,\n      borderColor: J,\n      isInteractive: De,\n      onClick: Ve,\n      onMouseEnter: Be,\n      onMouseMove: Ge,\n      onMouseLeave: Ee,\n      setActiveId: ut,\n      tooltip: He,\n      transitionMode: qe\n    }, \"arcs\")), le && L.includes(\"arcLinkLabels\") && (gt.arcLinkLabels = W(I, {\n      center: [dt, lt],\n      data: at,\n      label: ce,\n      skipAngle: ve,\n      offset: ge,\n      diagonalLength: he,\n      straightLength: Ae,\n      strokeWidth: ke,\n      textOffset: Re,\n      textColor: Oe,\n      linkColor: xe,\n      component: we\n    }, \"arcLinkLabels\")), Z && L.includes(\"arcLabels\") && (gt.arcLabels = W(R, {\n      center: [dt, lt],\n      data: at,\n      label: _,\n      radiusOffset: re,\n      skipAngle: te,\n      textColor: ne,\n      transitionMode: qe,\n      component: oe\n    }, \"arcLabels\")), Je.length > 0 && L.includes(\"legends\") && (gt.legends = W(X, {\n      width: et,\n      height: tt,\n      data: rt,\n      legends: Je,\n      toggleSerie: vt\n    }, \"legends\"));\n    var Lt = N({\n      dataWithArc: at,\n      arcGenerator: ot,\n      centerX: dt,\n      centerY: lt,\n      radius: st,\n      innerRadius: ct\n    });\n    return W(g, {\n      width: Ze,\n      height: $e,\n      margin: _e,\n      defs: ft,\n      role: Qe,\n      children: L.map(function (e, t) {\n        return void 0 !== gt[e] ? gt[e] : \"function\" == typeof e ? W(o, {\n          children: r(e, Lt)\n        }, t) : null;\n      })\n    });\n  },\n  $ = function (e) {\n    var t = e.isInteractive,\n      i = void 0 === t ? Y.isInteractive : t,\n      n = e.animate,\n      a = void 0 === n ? Y.animate : n,\n      r = e.motionConfig,\n      o = void 0 === r ? Y.motionConfig : r,\n      d = e.theme,\n      l = e.renderWrapper,\n      s = F(e, U);\n    return W(u, {\n      animate: a,\n      isInteractive: i,\n      motionConfig: o,\n      renderWrapper: l,\n      theme: d,\n      children: W(Z, E({\n        isInteractive: i\n      }, s))\n    });\n  },\n  _ = function (e) {\n    return W(L, {\n      children: function (t) {\n        var i = t.width,\n          n = t.height;\n        return W($, E({\n          width: i,\n          height: n\n        }, e));\n      }\n    });\n  },\n  ee = [\"isInteractive\", \"theme\", \"renderWrapper\"],\n  te = function (n) {\n    var a = n.data,\n      o = n.id,\n      d = void 0 === o ? Y.id : o,\n      l = n.value,\n      s = void 0 === l ? Y.value : l,\n      c = n.valueFormat,\n      u = n.sortByValue,\n      f = void 0 === u ? Y.sortByValue : u,\n      g = n.startAngle,\n      L = void 0 === g ? Y.startAngle : g,\n      A = n.endAngle,\n      p = void 0 === A ? Y.endAngle : A,\n      k = n.padAngle,\n      I = void 0 === k ? Y.padAngle : k,\n      R = n.fit,\n      M = void 0 === R ? Y.fit : R,\n      S = n.innerRadius,\n      T = void 0 === S ? Y.innerRadius : S,\n      D = n.cornerRadius,\n      B = void 0 === D ? Y.cornerRadius : D,\n      F = n.activeInnerRadiusOffset,\n      H = void 0 === F ? Y.activeInnerRadiusOffset : F,\n      X = n.activeOuterRadiusOffset,\n      j = void 0 === X ? Y.activeOuterRadiusOffset : X,\n      q = n.width,\n      z = n.height,\n      J = n.margin,\n      N = n.pixelRatio,\n      Q = void 0 === N ? Y.pixelRatio : N,\n      U = n.colors,\n      Z = void 0 === U ? Y.colors : U,\n      $ = n.borderWidth,\n      _ = void 0 === $ ? Y.borderWidth : $,\n      ee = n.borderColor,\n      te = void 0 === ee ? Y.borderColor : ee,\n      ie = n.enableArcLabels,\n      ne = void 0 === ie ? Y.enableArcLabels : ie,\n      ae = n.arcLabel,\n      re = void 0 === ae ? Y.arcLabel : ae,\n      oe = n.arcLabelsSkipAngle,\n      de = void 0 === oe ? Y.arcLabelsSkipAngle : oe,\n      le = n.arcLabelsTextColor,\n      se = void 0 === le ? Y.arcLabelsTextColor : le,\n      ce = n.arcLabelsRadiusOffset,\n      ue = void 0 === ce ? Y.arcLabelsRadiusOffset : ce,\n      ve = n.enableArcLinkLabels,\n      fe = void 0 === ve ? Y.enableArcLinkLabels : ve,\n      ge = n.arcLinkLabel,\n      Le = void 0 === ge ? Y.arcLinkLabel : ge,\n      he = n.arcLinkLabelsSkipAngle,\n      be = void 0 === he ? Y.arcLinkLabelsSkipAngle : he,\n      Ae = n.arcLinkLabelsOffset,\n      pe = void 0 === Ae ? Y.arcLinkLabelsOffset : Ae,\n      ke = n.arcLinkLabelsDiagonalLength,\n      Ie = void 0 === ke ? Y.arcLinkLabelsDiagonalLength : ke,\n      Re = n.arcLinkLabelsStraightLength,\n      me = void 0 === Re ? Y.arcLinkLabelsStraightLength : Re,\n      Oe = n.arcLinkLabelsThickness,\n      Ce = void 0 === Oe ? Y.arcLinkLabelsThickness : Oe,\n      xe = n.arcLinkLabelsTextOffset,\n      we = void 0 === xe ? Y.arcLinkLabelsTextOffset : xe,\n      Me = n.arcLinkLabelsTextColor,\n      ye = void 0 === Me ? Y.arcLinkLabelsTextColor : Me,\n      We = n.arcLinkLabelsColor,\n      Se = void 0 === We ? Y.arcLinkLabelsColor : We,\n      Te = n.isInteractive,\n      De = void 0 === Te ? Y.isInteractive : Te,\n      Ve = n.onClick,\n      Be = n.onMouseMove,\n      Ge = n.tooltip,\n      Ee = void 0 === Ge ? Y.tooltip : Ge,\n      Fe = n.activeId,\n      He = n.onActiveIdChange,\n      Xe = n.defaultActiveId,\n      Ye = n.legends,\n      je = void 0 === Ye ? Y.legends : Ye,\n      Pe = n.forwardLegendData,\n      qe = t(null),\n      ze = h(),\n      Je = v(q, z, J),\n      Ke = Je.margin,\n      Ne = Je.innerWidth,\n      Qe = Je.innerHeight,\n      Ue = Je.outerWidth,\n      Ze = Je.outerHeight,\n      $e = P({\n        data: a,\n        id: d,\n        value: s,\n        valueFormat: c,\n        colors: Z\n      }),\n      _e = K({\n        data: $e,\n        width: Ne,\n        height: Qe,\n        fit: M,\n        innerRadius: T,\n        startAngle: L,\n        endAngle: p,\n        padAngle: I,\n        sortByValue: f,\n        cornerRadius: B,\n        activeInnerRadiusOffset: H,\n        activeOuterRadiusOffset: j,\n        activeId: Fe,\n        onActiveIdChange: He,\n        defaultActiveId: Xe,\n        forwardLegendData: Pe\n      }),\n      et = _e.dataWithArc,\n      tt = _e.arcGenerator,\n      it = _e.centerX,\n      nt = _e.centerY,\n      at = _e.radius,\n      rt = _e.innerRadius,\n      ot = _e.setActiveId,\n      dt = V(te, ze),\n      lt = m({\n        data: et,\n        label: re,\n        skipAngle: de,\n        offset: ue,\n        textColor: se\n      }),\n      st = O({\n        data: et,\n        skipAngle: be,\n        offset: pe,\n        diagonalLength: Ie,\n        straightLength: me,\n        label: Le,\n        linkColor: Se,\n        textOffset: we,\n        textColor: ye\n      });\n    i(function () {\n      if (qe.current) {\n        qe.current.width = Ue * Q, qe.current.height = Ze * Q;\n        var e = qe.current.getContext(\"2d\");\n        e.scale(Q, Q), e.fillStyle = ze.background, e.fillRect(0, 0, Ue, Ze), e.save(), e.translate(Ke.left, Ke.top), tt.context(e), e.save(), e.translate(it, nt), et.forEach(function (t) {\n          e.beginPath(), e.fillStyle = t.color, e.strokeStyle = dt(t), e.lineWidth = _, tt(t.arc), e.fill(), _ > 0 && e.stroke();\n        }), !0 === fe && C(e, st, ze, Ce), !0 === ne && x(e, lt, ze), e.restore(), je.forEach(function (t) {\n          y(e, E({}, t, {\n            data: et,\n            containerWidth: Ne,\n            containerHeight: Qe,\n            theme: ze\n          }));\n        });\n      }\n    }, [qe, Ne, Qe, Ue, Ze, Ke.top, Ke.left, Q, it, nt, tt, et, _, dt, ne, lt, fe, st, Ce, je, ze]);\n    var ct = e(function () {\n        return et.map(function (e) {\n          return E({\n            id: e.id\n          }, e.arc);\n        });\n      }, [et]),\n      ut = function (e) {\n        if (!qe.current) return null;\n        var t = b(qe.current, e),\n          i = t[0],\n          n = t[1],\n          a = w(Ke.left + it, Ke.top + nt, at, rt, ct, i, n);\n        return a ? et.find(function (e) {\n          return e.id === a.id;\n        }) : null;\n      },\n      vt = G(),\n      ft = vt.showTooltipFromEvent,\n      gt = vt.hideTooltip,\n      Lt = function (e) {\n        var t = ut(e);\n        t ? (null == Be || Be(t, e), ot(t.id), ft(r(Ee, {\n          datum: t\n        }), e)) : (ot(null), gt());\n      };\n    return W(\"canvas\", {\n      ref: qe,\n      width: Ue * Q,\n      height: Ze * Q,\n      style: {\n        width: Ue,\n        height: Ze,\n        cursor: De ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: De ? Lt : void 0,\n      onMouseMove: De ? Lt : void 0,\n      onMouseLeave: De ? function () {\n        gt();\n      } : void 0,\n      onClick: De ? function (e) {\n        if (Ve) {\n          var t = ut(e);\n          t && Ve(t, e);\n        }\n      } : void 0\n    });\n  },\n  ie = function (e) {\n    var t = e.isInteractive,\n      i = void 0 === t ? Y.isInteractive : t,\n      n = e.theme,\n      a = e.renderWrapper,\n      r = F(e, ee);\n    return W(u, {\n      isInteractive: i,\n      renderWrapper: a,\n      theme: n,\n      children: W(te, E({\n        isInteractive: i\n      }, r))\n    });\n  },\n  ne = function (e) {\n    return W(L, {\n      children: function (t) {\n        var i = t.width,\n          n = t.height;\n        return W(ie, E({\n          width: i,\n          height: n\n        }, e));\n      }\n    });\n  };\nexport { $ as Pie, ie as PieCanvas, _ as ResponsivePie, ne as ResponsivePieCanvas, Y as defaultProps, P as useNormalizedData, J as usePie, q as usePieArcs, K as usePieFromBox, N as usePieLayerContext };","map":{"version":3,"names":["H","X","PieLegends","e","t","width","i","height","n","legends","a","data","r","toggleSerie","W","S","children","map","o","M","E","containerWidth","containerHeight","Y","id","value","sortByValue","innerRadius","padAngle","cornerRadius","layers","startAngle","endAngle","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsRadiusOffset","arcLabelsTextColor","theme","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","fill","isInteractive","animate","motionConfig","transitionMode","tooltip","datum","B","formattedValue","enableChip","color","role","pixelRatio","window","devicePixelRatio","j","P","useNormalizedData","s","valueFormat","c","u","v","d","f","g","l","L","D","label","hidden","q","usePieArcs","outerRadius","activeId","h","hiddenIds","b","forwardLegendData","A","T","sortValues","p","filter","includes","dataWithArc","Math","abs","arc","index","thickness","angle","angleDeg","legendData","k","I","current","z","useActiveId","onActiveIdChange","defaultActiveId","setActiveId","J","usePie","radius","R","m","O","C","x","w","y","indexOf","concat","arcGenerator","K","usePieFromBox","V","G","min","points","F","box","ratio","centerX","centerY","debug","N","usePieLayerContext","Q","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","showTooltipFromEvent","hideTooltip","U","Z","InnerPie","margin","$","_","ee","te","ie","ne","ae","re","oe","arcLabelsComponent","de","le","se","ce","ue","ve","fe","ge","Le","he","be","Ae","pe","ke","Ie","Re","me","Oe","Ce","xe","we","arcLinkLabelComponent","Me","ye","We","Se","Te","De","Ve","Be","Ge","Ee","Fe","He","Xe","Ye","je","Pe","qe","ze","Je","Ke","Ne","Qe","Ue","Ze","outerWidth","$e","outerHeight","_e","et","innerWidth","tt","innerHeight","it","nt","at","rt","ot","dt","lt","st","ct","ut","vt","ft","gt","arcs","arcLinkLabels","arcLabels","skipAngle","offset","diagonalLength","straightLength","strokeWidth","textOffset","textColor","linkColor","component","radiusOffset","length","Lt","Pie","renderWrapper","ResponsivePie","InnerPieCanvas","getContext","scale","fillStyle","background","fillRect","save","translate","left","top","context","forEach","beginPath","strokeStyle","lineWidth","stroke","restore","getArcFromMouse","find","handleMouseHover","ref","style","cursor","PieCanvas","ResponsivePieCanvas","defaultProps"],"sources":["C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\pie\\src\\PieLegends.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\pie\\src\\props.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\pie\\src\\PieTooltip.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\pie\\src\\hooks.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\pie\\src\\Arcs.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\pie\\src\\Pie.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\pie\\src\\ResponsivePie.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\pie\\src\\PieCanvas.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\pie\\src\\ResponsivePieCanvas.tsx"],"sourcesContent":["import { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, DatumId, LegendDatum } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    data: LegendDatum<RawDatum>[]\n    toggleSerie: (id: DatumId) => void\n}\n\nexport const PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i: number) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n                />\n            ))}\n        </>\n    )\n}\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcs', 'arcLinkLabels', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport {\n    MayHaveLabel,\n    CompletePieSvgProps,\n    ComputedDatum,\n    DatumId,\n    PieArc,\n    PieCustomLayerProps,\n    LegendDatum,\n    CommonPieProps,\n} from './types'\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: readonly RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    hidden: false,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n    hiddenIds,\n    forwardLegendData,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n    hiddenIds: DatumId[]\n    forwardLegendData?: CommonPieProps<RawDatum>['forwardLegendData']\n}): {\n    dataWithArc: Omit<ComputedDatum<RawDatum>, 'fill'>[]\n    legendData: LegendDatum<RawDatum>[]\n} => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    const result = useMemo(() => {\n        const hiddenData = data.filter(item => !hiddenIds.includes(item.id))\n        const dataWithArc = pie(hiddenData).map(\n            (\n                arc: Omit<\n                    PieArc,\n                    'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                > & {\n                    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                }\n            ) => {\n                const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                return {\n                    ...arc.data,\n                    arc: {\n                        index: arc.index,\n                        startAngle: arc.startAngle,\n                        endAngle: arc.endAngle,\n                        innerRadius:\n                            activeId === arc.data.id\n                                ? innerRadius - activeInnerRadiusOffset\n                                : innerRadius,\n                        outerRadius:\n                            activeId === arc.data.id\n                                ? outerRadius + activeOuterRadiusOffset\n                                : outerRadius,\n                        thickness: outerRadius - innerRadius,\n                        padAngle: arc.padAngle,\n                        angle,\n                        angleDeg: radiansToDegrees(angle),\n                    },\n                }\n            }\n        )\n        const legendData: LegendDatum<RawDatum>[] = data.map(item => ({\n            id: item.id,\n            label: item.label,\n            color: item.color,\n            hidden: hiddenIds.includes(item.id),\n            data: item,\n        }))\n\n        return { dataWithArc, legendData }\n    }, [\n        pie,\n        data,\n        hiddenIds,\n        activeId,\n        innerRadius,\n        activeInnerRadiusOffset,\n        outerRadius,\n        activeOuterRadiusOffset,\n    ])\n\n    // Forward the legends data if `forwardLegendData` is defined.\n    const legendData = result.legendData\n    const forwardLegendDataRef = useRef(forwardLegendData)\n    useEffect(() => {\n        if (typeof forwardLegendDataRef.current !== 'function') return\n        forwardLegendDataRef.current(legendData)\n    }, [forwardLegendDataRef, legendData])\n\n    return result\n}\n\n/**\n * Encapsulate the logic for defining/reading the active arc ID,\n * which can be either controlled (handled externally), or uncontrolled\n * (handled internally), we can optionally define a default value when\n * it's uncontrolled.\n */\nconst useActiveId = ({\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId = null,\n}: {\n    activeId?: DatumId | null\n    onActiveIdChange?: (id: DatumId | null) => void\n    defaultActiveId?: DatumId | null\n}) => {\n    const isControlled = typeof activeIdFromProps != 'undefined'\n\n    const [internalActiveId, setInternalActiveId] = useState<DatumId | null>(\n        !isControlled ? defaultActiveId : null\n    )\n\n    const activeId = isControlled ? activeIdFromProps : internalActiveId\n\n    const setActiveId = useCallback(\n        (id: DatumId | null) => {\n            if (onActiveIdChange) {\n                onActiveIdChange(id)\n            }\n\n            if (!isControlled) {\n                setInternalActiveId(id)\n            }\n        },\n        [isControlled, onActiveIdChange, setInternalActiveId]\n    )\n\n    return { activeId, setActiveId }\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    forwardLegendData,\n}: Pick<\n    Partial<CompletePieSvgProps<RawDatum>>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n    | 'activeId'\n    | 'onActiveIdChange'\n    | 'defaultActiveId'\n    | 'forwardLegendData'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const { activeId, setActiveId } = useActiveId({\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n    })\n\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n        forwardLegendData,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { ...pieArcs, arcGenerator, setActiveId, toggleSerie }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    forwardLegendData,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> &\n    Pick<\n        Partial<CompletePieSvgProps<RawDatum>>,\n        'activeId' | 'onActiveIdChange' | 'defaultActiveId' | 'forwardLegendData'\n    > & {\n        data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    }) => {\n    const { activeId, setActiveId } = useActiveId({\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n    })\n\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit])\n\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n        forwardLegendData,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        arcGenerator,\n        activeId,\n        setActiveId,\n        toggleSerie,\n        ...pieArcs,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: PieCustomLayerProps<RawDatum>): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter, tooltip])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove, tooltip])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport { PieLegends } from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId, MayHaveLabel } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    forwardLegendData,\n\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        legendData,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n        toggleSerie,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n        forwardLegendData,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcs: null,\n        arcLinkLabels: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={legendData}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum extends MayHaveLabel>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps, MayHaveLabel } from './types'\n\nexport const ResponsivePie = <RawDatum extends MayHaveLabel>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { createElement, useEffect, useMemo, useRef } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor, useDimensions, useTheme, Container } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps, MayHaveLabel } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = defaultProps.pixelRatio,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n\n    legends = defaultProps.legends,\n    forwardLegendData,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius, setActiveId } =\n        usePieFromBox<RawDatum>({\n            data: normalizedData,\n            width: innerWidth,\n            height: innerHeight,\n            fit,\n            innerRadius: innerRadiusRatio,\n            startAngle,\n            endAngle,\n            padAngle,\n            sortByValue,\n            cornerRadius,\n            activeInnerRadiusOffset,\n            activeOuterRadiusOffset,\n            activeId: activeIdFromProps,\n            onActiveIdChange,\n            defaultActiveId,\n            forwardLegendData,\n        })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        borderWidth,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const PieCanvas = <RawDatum extends MayHaveLabel>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieCanvasProps<RawDatum>) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerPieCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps, MayHaveLabel } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum extends MayHaveLabel>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}