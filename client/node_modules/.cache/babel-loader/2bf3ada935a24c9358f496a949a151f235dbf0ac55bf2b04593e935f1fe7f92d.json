{"ast":null,"code":"import React, { useRef, useEffect, memo, useState } from 'react';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nvar createId = function (length) {\n  var result = \"\";\n  var characters = \"abcdef0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nvar Copyright = function (_a) {\n  var href = _a.href,\n    spanText = _a.spanText,\n    _b = _a.text,\n    text = _b === void 0 ? \"By TradingView\" : _b,\n    copyrightStyles = _a.copyrightStyles;\n  var defaultStyles = {\n    parent: {\n      fontSize: \"13px\",\n      lineHeight: \"32px\",\n      textAlign: \"center\",\n      verticalAlign: \"center\",\n      fontFamily: \"Trebuchet MS, Arial, sans-serif\",\n      color: \"#9db2bd\"\n    },\n    link: {\n      textDecoration: \"none\",\n      color: \"#9db2bd\"\n    },\n    span: {\n      color: \"#2962FF\"\n    }\n  };\n  return React.createElement(\"div\", {\n    style: Object.assign({}, defaultStyles.parent, copyrightStyles === null || copyrightStyles === void 0 ? void 0 : copyrightStyles.parent),\n    className: \"tradingview-widget-copyright\"\n  }, React.createElement(\"a\", {\n    style: Object.assign({}, defaultStyles.link, copyrightStyles === null || copyrightStyles === void 0 ? void 0 : copyrightStyles.link),\n    href: href,\n    target: \"_blank\"\n  }, React.createElement(\"span\", {\n    style: Object.assign({}, defaultStyles.span, copyrightStyles === null || copyrightStyles === void 0 ? void 0 : copyrightStyles.span)\n  }, spanText, \" \")), text);\n};\nvar Widget = function (_a) {\n  var scriptHTML = _a.scriptHTML,\n    scriptSRC = _a.scriptSRC,\n    containerId = _a.containerId,\n    type = _a.type,\n    copyrightProps = _a.copyrightProps;\n  var ref = useRef(null);\n  useEffect(function () {\n    var refValue;\n    var initWidget = function () {\n      if (ref.current) {\n        var script_1 = document.createElement(\"script\");\n        script_1.setAttribute(\"data-nscript\", \"afterInteractive\");\n        script_1.src = scriptSRC;\n        script_1.async = true;\n        script_1.type = \"text/javascript\";\n        if (type === \"Widget\" || type === \"MediumWidget\") {\n          script_1.onload = function () {\n            if (typeof TradingView !== undefined) {\n              script_1.innerHTML = JSON.stringify(type === \"Widget\" ? new TradingView.widget(scriptHTML) : type === \"MediumWidget\" ? new TradingView.MediumWidget(scriptHTML) : undefined);\n            }\n          };\n        } else {\n          script_1.innerHTML = JSON.stringify(scriptHTML);\n        }\n        if (!ref.current.querySelector('script[src=\"' + scriptSRC + '\"]')) {\n          ref.current.appendChild(script_1);\n        }\n        refValue = ref.current;\n      }\n    };\n    requestAnimationFrame(initWidget);\n    return function () {\n      if (refValue) {\n        while (refValue.firstChild) {\n          refValue.removeChild(refValue.firstChild);\n        }\n      }\n    };\n  }, [ref, scriptHTML, type, scriptSRC]);\n  var containerKey = containerId || \"tradingview_\" + scriptHTML;\n  return React.createElement(\"div\", {\n    style: {\n      display: \"contents\"\n    }\n  }, type === \"Widget\" || type === \"MediumWidget\" ? React.createElement(\"div\", {\n    id: containerId,\n    key: containerKey\n  }, React.createElement(\"div\", {\n    ref: ref,\n    style: {\n      display: \"contents\"\n    }\n  })) : React.createElement(\"div\", {\n    ref: ref,\n    style: {\n      display: \"contents\"\n    },\n    key: containerKey\n  }), React.createElement(Copyright, {\n    href: copyrightProps.href,\n    spanText: copyrightProps.spanText,\n    text: copyrightProps.text,\n    copyrightStyles: copyrightProps.copyrightStyles\n  }));\n};\nvar AdvancedRealTimeChart = function (_a) {\n  var _b = _a.width,\n    width = _b === void 0 ? 980 : _b,\n    _c = _a.height,\n    height = _c === void 0 ? 610 : _c,\n    _d = _a.autosize,\n    autosize = _d === void 0 ? false : _d,\n    _e = _a.symbol,\n    symbol = _e === void 0 ? \"NASDAQ:AAPL\" : _e,\n    _f = _a.interval,\n    interval = _f === void 0 ? \"1\" : _f,\n    _g = _a.range,\n    range = _g === void 0 ? undefined : _g,\n    _h = _a.timezone,\n    timezone = _h === void 0 ? \"UTC\" : _h,\n    _j = _a.theme,\n    theme = _j === void 0 ? \"light\" : _j,\n    _k = _a.style,\n    style = _k === void 0 ? \"1\" : _k,\n    _l = _a.locale,\n    locale = _l === void 0 ? \"en\" : _l,\n    _m = _a.toolbar_bg,\n    toolbar_bg = _m === void 0 ? \"#f1f3f6\" : _m,\n    _o = _a.enable_publishing,\n    enable_publishing = _o === void 0 ? false : _o,\n    _p = _a.hide_top_toolbar,\n    hide_top_toolbar = _p === void 0 ? false : _p,\n    _q = _a.hide_legend,\n    hide_legend = _q === void 0 ? false : _q,\n    _r = _a.withdateranges,\n    withdateranges = _r === void 0 ? true : _r,\n    _s = _a.hide_side_toolbar,\n    hide_side_toolbar = _s === void 0 ? false : _s,\n    _t = _a.allow_symbol_change,\n    allow_symbol_change = _t === void 0 ? true : _t,\n    _u = _a.save_image,\n    save_image = _u === void 0 ? true : _u,\n    _v = _a.details,\n    details = _v === void 0 ? false : _v,\n    _w = _a.hotlist,\n    hotlist = _w === void 0 ? false : _w,\n    _x = _a.calendar,\n    calendar = _x === void 0 ? false : _x,\n    _y = _a.show_popup_button,\n    show_popup_button = _y === void 0 ? false : _y,\n    _z = _a.popup_width,\n    popup_width = _z === void 0 ? \"600\" : _z,\n    _0 = _a.popup_height,\n    popup_height = _0 === void 0 ? \"400\" : _0,\n    _1 = _a.watchlist,\n    watchlist = _1 === void 0 ? undefined : _1,\n    _2 = _a.studies,\n    studies = _2 === void 0 ? undefined : _2,\n    _3 = _a.disabled_features,\n    disabled_features = _3 === void 0 ? undefined : _3,\n    _4 = _a.enabled_features,\n    enabled_features = _4 === void 0 ? undefined : _4,\n    _5 = _a.container_id,\n    container_id = _5 === void 0 ? \"tradingview_\".concat(createId(5)) : _5,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"width\", \"height\", \"autosize\", \"symbol\", \"interval\", \"range\", \"timezone\", \"theme\", \"style\", \"locale\", \"toolbar_bg\", \"enable_publishing\", \"hide_top_toolbar\", \"hide_legend\", \"withdateranges\", \"hide_side_toolbar\", \"allow_symbol_change\", \"save_image\", \"details\", \"hotlist\", \"calendar\", \"show_popup_button\", \"popup_width\", \"popup_height\", \"watchlist\", \"studies\", \"disabled_features\", \"enabled_features\", \"container_id\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      autosize: autosize,\n      symbol: symbol\n    }), !range ? {\n      interval: interval\n    } : {\n      range: range\n    }), {\n      timezone: timezone,\n      theme: theme,\n      style: style,\n      locale: locale,\n      toolbar_bg: toolbar_bg,\n      enable_publishing: enable_publishing,\n      hide_top_toolbar: hide_top_toolbar,\n      hide_legend: hide_legend,\n      withdateranges: withdateranges,\n      hide_side_toolbar: hide_side_toolbar,\n      allow_symbol_change: allow_symbol_change,\n      save_image: save_image,\n      details: details,\n      hotlist: hotlist,\n      calendar: calendar\n    }), show_popup_button && {\n      show_popup_button: show_popup_button,\n      popup_width: popup_width,\n      popup_height: popup_height\n    }), {\n      watchlist: watchlist,\n      studies: studies,\n      disabled_features: disabled_features,\n      enabled_features: enabled_features,\n      container_id: container_id\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/tv.js\",\n    containerId: container_id,\n    type: \"Widget\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/symbols/\".concat(symbol),\n      spanText: \"\".concat(symbol, \" Chart\")\n    }\n  });\n};\nvar AdvancedRealTimeChart$1 = memo(AdvancedRealTimeChart);\nvar CompanyProfile = function (_a) {\n  var _b = _a.symbol,\n    symbol = _b === void 0 ? \"NASDAQ:AAPL\" : _b,\n    _c = _a.width,\n    width = _c === void 0 ? 480 : _c,\n    _d = _a.height,\n    height = _d === void 0 ? 650 : _d,\n    _e = _a.autosize,\n    autosize = _e === void 0 ? false : _e,\n    _f = _a.colorTheme,\n    colorTheme = _f === void 0 ? \"light\" : _f,\n    _g = _a.isTransparent,\n    isTransparent = _g === void 0 ? false : _g,\n    _h = _a.locale,\n    locale = _h === void 0 ? \"en\" : _h,\n    _j = _a.largeChartUrl,\n    largeChartUrl = _j === void 0 ? undefined : _j,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"symbol\", \"width\", \"height\", \"autosize\", \"colorTheme\", \"isTransparent\", \"locale\", \"largeChartUrl\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign({}, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      symbol: symbol,\n      colorTheme: colorTheme,\n      isTransparent: isTransparent,\n      locale: locale,\n      largeChartUrl: largeChartUrl\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-symbol-profile.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/symbols/\".concat(symbol, \"/\"),\n      spanText: \"\".concat(symbol, \" Profile\")\n    }\n  });\n};\nvar CompanyProfile$1 = memo(CompanyProfile);\nvar CryptoCurrencyMarket = function (_a) {\n  var _b = _a.width,\n    width = _b === void 0 ? 1000 : _b,\n    _c = _a.height,\n    height = _c === void 0 ? 490 : _c,\n    _d = _a.autosize,\n    autosize = _d === void 0 ? false : _d,\n    _e = _a.defaultColumn,\n    defaultColumn = _e === void 0 ? \"overview\" : _e,\n    _f = _a.screener_type,\n    screener_type = _f === void 0 ? \"crypto_mkt\" : _f,\n    _g = _a.displayCurrency,\n    displayCurrency = _g === void 0 ? \"USD\" : _g,\n    _h = _a.colorTheme,\n    colorTheme = _h === void 0 ? \"light\" : _h,\n    _j = _a.locale,\n    locale = _j === void 0 ? \"en\" : _j,\n    _k = _a.isTransparent,\n    isTransparent = _k === void 0 ? false : _k,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"width\", \"height\", \"autosize\", \"defaultColumn\", \"screener_type\", \"displayCurrency\", \"colorTheme\", \"locale\", \"isTransparent\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign({}, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      defaultColumn: defaultColumn,\n      screener_type: screener_type,\n      displayCurrency: displayCurrency,\n      colorTheme: colorTheme,\n      locale: locale,\n      isTransparent: isTransparent\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-screener.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/markets/cryptocurrencies/prices-all/\",\n      spanText: \"Cryptocurrency Markets\"\n    }\n  });\n};\nvar CryptoCurrencyMarket$1 = memo(CryptoCurrencyMarket);\nvar EconomicCalendar = function (_a) {\n  var _b = _a.colorTheme,\n    colorTheme = _b === void 0 ? \"light\" : _b,\n    _c = _a.isTransparent,\n    isTransparent = _c === void 0 ? false : _c,\n    _d = _a.width,\n    width = _d === void 0 ? 510 : _d,\n    _e = _a.height,\n    height = _e === void 0 ? 600 : _e,\n    _f = _a.autosize,\n    autosize = _f === void 0 ? false : _f,\n    _g = _a.locale,\n    locale = _g === void 0 ? \"en\" : _g,\n    _h = _a.importanceFilter,\n    importanceFilter = _h === void 0 ? \"-1,0,1\" : _h,\n    _j = _a.countryFilter,\n    countryFilter = _j === void 0 ? undefined : _j,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"colorTheme\", \"isTransparent\", \"width\", \"height\", \"autosize\", \"locale\", \"importanceFilter\", \"countryFilter\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign({\n      colorTheme: colorTheme,\n      isTransparent: isTransparent\n    }, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      locale: locale,\n      importanceFilter: importanceFilter,\n      countryFilter: countryFilter\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-events.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/markets/currencies/economic-calendar/\",\n      spanText: \"Economic Calendar\"\n    }\n  });\n};\nvar EconomicCalendar$1 = memo(EconomicCalendar);\nvar defaultCurrencies$1 = [\"EUR\", \"USD\", \"JPY\", \"GBP\", \"CHF\", \"AUD\", \"CAD\", \"NZD\", \"CNY\"];\nvar ForexCrossRates = function (_a) {\n  var _b = _a.width,\n    width = _b === void 0 ? 770 : _b,\n    _c = _a.height,\n    height = _c === void 0 ? 400 : _c,\n    _d = _a.autosize,\n    autosize = _d === void 0 ? false : _d,\n    _e = _a.currencies,\n    currencies = _e === void 0 ? defaultCurrencies$1 : _e,\n    _f = _a.isTransparent,\n    isTransparent = _f === void 0 ? false : _f,\n    _g = _a.colorTheme,\n    colorTheme = _g === void 0 ? \"light\" : _g,\n    _h = _a.locale,\n    locale = _h === void 0 ? \"en\" : _h,\n    _j = _a.largeChartUrl,\n    largeChartUrl = _j === void 0 ? undefined : _j,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"width\", \"height\", \"autosize\", \"currencies\", \"isTransparent\", \"colorTheme\", \"locale\", \"largeChartUrl\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign({}, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      currencies: currencies,\n      isTransparent: isTransparent,\n      colorTheme: colorTheme,\n      locale: locale,\n      largeChartUrl: largeChartUrl\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-forex-cross-rates.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/markets/currencies/forex-cross-rates/\",\n      spanText: \"Exchange Rates\"\n    }\n  });\n};\nvar ForexCrossRates$1 = memo(ForexCrossRates);\nvar defaultCurrencies = [\"EUR\", \"USD\", \"JPY\", \"GBP\", \"CHF\", \"AUD\", \"CAD\", \"NZD\", \"CNY\"];\nvar ForexHeatMap = function (_a) {\n  var _b = _a.width,\n    width = _b === void 0 ? 700 : _b,\n    _c = _a.height,\n    height = _c === void 0 ? 400 : _c,\n    _d = _a.autosize,\n    autosize = _d === void 0 ? false : _d,\n    _e = _a.currencies,\n    currencies = _e === void 0 ? defaultCurrencies : _e,\n    _f = _a.isTransparent,\n    isTransparent = _f === void 0 ? false : _f,\n    _g = _a.colorTheme,\n    colorTheme = _g === void 0 ? \"light\" : _g,\n    _h = _a.locale,\n    locale = _h === void 0 ? \"en\" : _h,\n    _j = _a.largeChartUrl,\n    largeChartUrl = _j === void 0 ? undefined : _j,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"width\", \"height\", \"autosize\", \"currencies\", \"isTransparent\", \"colorTheme\", \"locale\", \"largeChartUrl\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign({}, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      currencies: currencies,\n      isTransparent: isTransparent,\n      colorTheme: colorTheme,\n      locale: locale,\n      largeChartUrl: largeChartUrl\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-forex-heat-map.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/markets/currencies/forex-heat-map/\",\n      spanText: \"Forex Heat Map\"\n    }\n  });\n};\nvar ForexHeatMap$1 = memo(ForexHeatMap);\nvar FundamentalData = function (_a) {\n  var _b = _a.symbol,\n    symbol = _b === void 0 ? \"NASDAQ:AAPL\" : _b,\n    _c = _a.colorTheme,\n    colorTheme = _c === void 0 ? \"light\" : _c,\n    _d = _a.isTransparent,\n    isTransparent = _d === void 0 ? false : _d,\n    _e = _a.largeChartUrl,\n    largeChartUrl = _e === void 0 ? undefined : _e,\n    _f = _a.displayMode,\n    displayMode = _f === void 0 ? \"regular\" : _f,\n    _g = _a.width,\n    width = _g === void 0 ? 480 : _g,\n    _h = _a.height,\n    height = _h === void 0 ? 830 : _h,\n    _j = _a.autosize,\n    autosize = _j === void 0 ? false : _j,\n    _k = _a.locale,\n    locale = _k === void 0 ? \"en\" : _k,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"symbol\", \"colorTheme\", \"isTransparent\", \"largeChartUrl\", \"displayMode\", \"width\", \"height\", \"autosize\", \"locale\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign({}, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      symbol: symbol,\n      colorTheme: colorTheme,\n      isTransparent: isTransparent,\n      largeChartUrl: largeChartUrl,\n      displayMode: displayMode,\n      locale: locale\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-financials.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/symbols/\".concat(symbol.replace(\":\", \"-\"), \"/financials-overview/\"),\n      spanText: \"\".concat(symbol, \" Fundamental Data\")\n    }\n  });\n};\nvar FundamentalData$1 = memo(FundamentalData);\nvar defaultSymbolGroup = [{\n  name: \"Indices\",\n  originalName: \"Indices\",\n  symbols: [{\n    name: \"FOREXCOM:SPXUSD\",\n    displayName: \"S&P 500\"\n  }, {\n    name: \"FOREXCOM:NSXUSD\",\n    displayName: \"Nasdaq 100\"\n  }, {\n    name: \"FOREXCOM:DJI\",\n    displayName: \"Dow 30\"\n  }, {\n    name: \"INDEX:NKY\",\n    displayName: \"Nikkei 225\"\n  }, {\n    name: \"INDEX:DEU30\",\n    displayName: \"DAX Index\"\n  }, {\n    name: \"FOREXCOM:UKXGBP\",\n    displayName: \"UK 100\"\n  }]\n}, {\n  name: \"Commodities\",\n  originalName: \"Commodities\",\n  symbols: [{\n    name: \"CME_MINI:ES1!\",\n    displayName: \"S&P 500\"\n  }, {\n    name: \"CME:6E1!\",\n    displayName: \"Euro\"\n  }, {\n    name: \"COMEX:GC1!\",\n    displayName: \"Gold\"\n  }, {\n    name: \"NYMEX:CL1!\",\n    displayName: \"Crude Oil\"\n  }, {\n    name: \"NYMEX:NG1!\",\n    displayName: \"Natural Gas\"\n  }, {\n    name: \"CBOT:ZC1!\",\n    displayName: \"Corn\"\n  }]\n}, {\n  name: \"Bonds\",\n  originalName: \"Bonds\",\n  symbols: [{\n    name: \"CME:GE1!\",\n    displayName: \"Eurodollar\"\n  }, {\n    name: \"CBOT:ZB1!\",\n    displayName: \"T-Bond\"\n  }, {\n    name: \"CBOT:UB1!\",\n    displayName: \"Ultra T-Bond\"\n  }, {\n    name: \"EUREX:FGBL1!\",\n    displayName: \"Euro Bund\"\n  }, {\n    name: \"EUREX:FBTP1!\",\n    displayName: \"Euro BTP\"\n  }, {\n    name: \"EUREX:FGBM1!\",\n    displayName: \"Euro BOBL\"\n  }]\n}, {\n  name: \"Forex\",\n  originalName: \"Forex\",\n  symbols: [{\n    name: \"FX:EURUSD\"\n  }, {\n    name: \"FX:GBPUSD\"\n  }, {\n    name: \"FX:USDJPY\"\n  }, {\n    name: \"FX:USDCHF\"\n  }, {\n    name: \"FX:AUDUSD\"\n  }, {\n    name: \"FX:USDCAD\"\n  }]\n}];\nvar MarketData = function (_a) {\n  var _b = _a.width,\n    width = _b === void 0 ? 770 : _b,\n    _c = _a.height,\n    height = _c === void 0 ? 450 : _c,\n    _d = _a.autosize,\n    autosize = _d === void 0 ? false : _d,\n    _e = _a.symbolsGroups,\n    symbolsGroups = _e === void 0 ? defaultSymbolGroup : _e,\n    _f = _a.showSymbolLogo,\n    showSymbolLogo = _f === void 0 ? true : _f,\n    _g = _a.colorTheme,\n    colorTheme = _g === void 0 ? \"light\" : _g,\n    _h = _a.isTransparent,\n    isTransparent = _h === void 0 ? false : _h,\n    _j = _a.locale,\n    locale = _j === void 0 ? \"en\" : _j,\n    _k = _a.largeChartUrl,\n    largeChartUrl = _k === void 0 ? undefined : _k,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"width\", \"height\", \"autosize\", \"symbolsGroups\", \"showSymbolLogo\", \"colorTheme\", \"isTransparent\", \"locale\", \"largeChartUrl\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign({}, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      symbolsGroups: symbolsGroups,\n      showSymbolLogo: showSymbolLogo,\n      colorTheme: colorTheme,\n      isTransparent: isTransparent,\n      locale: locale,\n      largeChartUrl: largeChartUrl\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-market-quotes.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      spanText: \"Financial Markets\",\n      href: \"https://www.tradingview.com/markets/\"\n    }\n  });\n};\nvar MarketData$1 = memo(MarketData);\nvar defaultTabs = [{\n  title: \"Indices\",\n  symbols: [{\n    s: \"FOREXCOM:SPXUSD\",\n    d: \"S&P 500\"\n  }, {\n    s: \"FOREXCOM:NSXUSD\",\n    d: \"Nasdaq 100\"\n  }, {\n    s: \"FOREXCOM:DJI\",\n    d: \"Dow 30\"\n  }, {\n    s: \"INDEX:NKY\",\n    d: \"Nikkei 225\"\n  }, {\n    s: \"INDEX:DEU30\",\n    d: \"DAX Index\"\n  }, {\n    s: \"FOREXCOM:UKXGBP\",\n    d: \"UK 100\"\n  }],\n  originalTitle: \"Indices\"\n}, {\n  title: \"Commodities\",\n  symbols: [{\n    s: \"CME_MINI:ES1!\",\n    d: \"S&P 500\"\n  }, {\n    s: \"CME:6E1!\",\n    d: \"Euro\"\n  }, {\n    s: \"COMEX:GC1!\",\n    d: \"Gold\"\n  }, {\n    s: \"NYMEX:CL1!\",\n    d: \"Crude Oil\"\n  }, {\n    s: \"NYMEX:NG1!\",\n    d: \"Natural Gas\"\n  }, {\n    s: \"CBOT:ZC1!\",\n    d: \"Corn\"\n  }],\n  originalTitle: \"Commodities\"\n}, {\n  title: \"Bonds\",\n  symbols: [{\n    s: \"CME:GE1!\",\n    d: \"Eurodollar\"\n  }, {\n    s: \"CBOT:ZB1!\",\n    d: \"T-Bond\"\n  }, {\n    s: \"CBOT:UB1!\",\n    d: \"Ultra T-Bond\"\n  }, {\n    s: \"EUREX:FGBL1!\",\n    d: \"Euro Bund\"\n  }, {\n    s: \"EUREX:FBTP1!\",\n    d: \"Euro BTP\"\n  }, {\n    s: \"EUREX:FGBM1!\",\n    d: \"Euro BOBL\"\n  }],\n  originalTitle: \"Bonds\"\n}, {\n  title: \"Forex\",\n  symbols: [{\n    s: \"FX:EURUSD\"\n  }, {\n    s: \"FX:GBPUSD\"\n  }, {\n    s: \"FX:USDJPY\"\n  }, {\n    s: \"FX:USDCHF\"\n  }, {\n    s: \"FX:AUDUSD\"\n  }, {\n    s: \"FX:USDCAD\"\n  }],\n  originalTitle: \"Forex\"\n}];\nvar MarketOverview = function (_a) {\n  var _b = _a.colorTheme,\n    colorTheme = _b === void 0 ? \"light\" : _b,\n    _c = _a.dateRange,\n    dateRange = _c === void 0 ? \"12M\" : _c,\n    _d = _a.showChart,\n    showChart = _d === void 0 ? true : _d,\n    _e = _a.locale,\n    locale = _e === void 0 ? \"en\" : _e,\n    _f = _a.largeChartUrl,\n    largeChartUrl = _f === void 0 ? undefined : _f,\n    _g = _a.isTransparent,\n    isTransparent = _g === void 0 ? false : _g,\n    _h = _a.showSymbolLogo,\n    showSymbolLogo = _h === void 0 ? true : _h,\n    _j = _a.showFloatingTooltip,\n    showFloatingTooltip = _j === void 0 ? false : _j,\n    _k = _a.width,\n    width = _k === void 0 ? 400 : _k,\n    _l = _a.height,\n    height = _l === void 0 ? 660 : _l,\n    _m = _a.autosize,\n    autosize = _m === void 0 ? false : _m,\n    _o = _a.plotLineColorGrowing,\n    plotLineColorGrowing = _o === void 0 ? \"rgba(33, 150, 243, 1)\" : _o,\n    _p = _a.plotLineColorFalling,\n    plotLineColorFalling = _p === void 0 ? \"rgba(33, 150, 243, 1)\" : _p,\n    _q = _a.gridLineColor,\n    gridLineColor = _q === void 0 ? \"rgba(240, 243, 250, 1)\" : _q,\n    _r = _a.scaleFontColor,\n    scaleFontColor = _r === void 0 ? \"rgba(120, 123, 134, 1)\" : _r,\n    _s = _a.belowLineFillColorGrowing,\n    belowLineFillColorGrowing = _s === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _s,\n    _t = _a.belowLineFillColorFalling,\n    belowLineFillColorFalling = _t === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _t,\n    _u = _a.belowLineFillColorGrowingBottom,\n    belowLineFillColorGrowingBottom = _u === void 0 ? \"rgba(41, 98, 255, 0)\" : _u,\n    _v = _a.belowLineFillColorFallingBottom,\n    belowLineFillColorFallingBottom = _v === void 0 ? \"rgba(41, 98, 255, 0)\" : _v,\n    _w = _a.symbolActiveColor,\n    symbolActiveColor = _w === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _w,\n    _x = _a.tabs,\n    tabs = _x === void 0 ? defaultTabs : _x,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"colorTheme\", \"dateRange\", \"showChart\", \"locale\", \"largeChartUrl\", \"isTransparent\", \"showSymbolLogo\", \"showFloatingTooltip\", \"width\", \"height\", \"autosize\", \"plotLineColorGrowing\", \"plotLineColorFalling\", \"gridLineColor\", \"scaleFontColor\", \"belowLineFillColorGrowing\", \"belowLineFillColorFalling\", \"belowLineFillColorGrowingBottom\", \"belowLineFillColorFallingBottom\", \"symbolActiveColor\", \"tabs\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign(__assign({\n      colorTheme: colorTheme,\n      dateRange: dateRange,\n      showChart: showChart,\n      locale: locale,\n      largeChartUrl: largeChartUrl,\n      isTransparent: isTransparent,\n      showSymbolLogo: showSymbolLogo,\n      showFloatingTooltip: showFloatingTooltip\n    }, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), showChart && {\n      plotLineColorGrowing: plotLineColorGrowing,\n      plotLineColorFalling: plotLineColorFalling,\n      gridLineColor: gridLineColor,\n      scaleFontColor: scaleFontColor,\n      belowLineFillColorGrowing: belowLineFillColorGrowing,\n      belowLineFillColorFalling: belowLineFillColorFalling,\n      belowLineFillColorGrowingBottom: belowLineFillColorGrowingBottom,\n      belowLineFillColorFallingBottom: belowLineFillColorFallingBottom,\n      symbolActiveColor: symbolActiveColor\n    }), {\n      tabs: tabs\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      spanText: \"Financial Markets\",\n      href: \"https://www.tradingview.com/markets/\"\n    }\n  });\n};\nvar MarketOverview$1 = memo(MarketOverview);\nvar MiniChart = function (_a) {\n  var _b = _a.symbol,\n    symbol = _b === void 0 ? \"FX:EURUSD\" : _b,\n    _c = _a.width,\n    width = _c === void 0 ? 350 : _c,\n    _d = _a.height,\n    height = _d === void 0 ? 220 : _d,\n    _e = _a.locale,\n    locale = _e === void 0 ? \"en\" : _e,\n    _f = _a.dateRange,\n    dateRange = _f === void 0 ? \"12M\" : _f,\n    _g = _a.colorTheme,\n    colorTheme = _g === void 0 ? \"light\" : _g,\n    _h = _a.trendLineColor,\n    trendLineColor = _h === void 0 ? \"rgba(41, 98, 255, 1)\" : _h,\n    _j = _a.underLineColor,\n    underLineColor = _j === void 0 ? \"rgba(41, 98, 255, 0.3)\" : _j,\n    _k = _a.underLineBottomColor,\n    underLineBottomColor = _k === void 0 ? \"rgba(41, 98, 255, 0)\" : _k,\n    _l = _a.isTransparent,\n    isTransparent = _l === void 0 ? false : _l,\n    _m = _a.autosize,\n    autosize = _m === void 0 ? false : _m,\n    _o = _a.largeChartUrl,\n    largeChartUrl = _o === void 0 ? undefined : _o,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"symbol\", \"width\", \"height\", \"locale\", \"dateRange\", \"colorTheme\", \"trendLineColor\", \"underLineColor\", \"underLineBottomColor\", \"isTransparent\", \"autosize\", \"largeChartUrl\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign({\n      symbol: symbol\n    }, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      locale: locale,\n      dateRange: dateRange,\n      colorTheme: colorTheme,\n      trendLineColor: trendLineColor,\n      underLineColor: underLineColor,\n      underLineBottomColor: underLineBottomColor,\n      isTransparent: isTransparent,\n      autosize: autosize,\n      largeChartUrl: largeChartUrl\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-mini-symbol-overview.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/symbols/\".concat(symbol, \"/\"),\n      spanText: \"\".concat(symbol, \" Rates\")\n    }\n  });\n};\nvar MiniChart$1 = memo(MiniChart);\nvar Screener = function (_a) {\n  var _b = _a.width,\n    width = _b === void 0 ? 1100 : _b,\n    _c = _a.height,\n    height = _c === void 0 ? 512 : _c,\n    _d = _a.autosize,\n    autosize = _d === void 0 ? false : _d,\n    _e = _a.defaultColumn,\n    defaultColumn = _e === void 0 ? \"overview\" : _e,\n    _f = _a.defaultScreen,\n    defaultScreen = _f === void 0 ? \"general\" : _f,\n    _g = _a.market,\n    market = _g === void 0 ? \"forex\" : _g,\n    _h = _a.showToolbar,\n    showToolbar = _h === void 0 ? true : _h,\n    _j = _a.colorTheme,\n    colorTheme = _j === void 0 ? \"light\" : _j,\n    _k = _a.locale,\n    locale = _k === void 0 ? \"en\" : _k,\n    _l = _a.isTransparent,\n    isTransparent = _l === void 0 ? false : _l,\n    _m = _a.largeChartUrl,\n    largeChartUrl = _m === void 0 ? undefined : _m,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"width\", \"height\", \"autosize\", \"defaultColumn\", \"defaultScreen\", \"market\", \"showToolbar\", \"colorTheme\", \"locale\", \"isTransparent\", \"largeChartUrl\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign({}, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      defaultColumn: defaultColumn,\n      defaultScreen: defaultScreen,\n      market: market,\n      showToolbar: showToolbar,\n      colorTheme: colorTheme,\n      locale: locale,\n      isTransparent: isTransparent,\n      largeChartUrl: largeChartUrl\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-screener.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/forex-screener/\",\n      spanText: \"Forex Screener\"\n    }\n  });\n};\nvar Screener$1 = memo(Screener);\nvar SingleTicker = function (_a) {\n  var _b = _a.symbol,\n    symbol = _b === void 0 ? \"FX:EURUSD\" : _b,\n    _c = _a.width,\n    width = _c === void 0 ? 350 : _c,\n    _d = _a.autosize,\n    autosize = _d === void 0 ? false : _d,\n    _e = _a.colorTheme,\n    colorTheme = _e === void 0 ? \"light\" : _e,\n    _f = _a.isTransparent,\n    isTransparent = _f === void 0 ? false : _f,\n    _g = _a.locale,\n    locale = _g === void 0 ? \"en\" : _g,\n    _h = _a.largeChartUrl,\n    largeChartUrl = _h === void 0 ? undefined : _h,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"symbol\", \"width\", \"autosize\", \"colorTheme\", \"isTransparent\", \"locale\", \"largeChartUrl\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign({\n      symbol: symbol\n    }, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), {\n      colorTheme: colorTheme,\n      isTransparent: isTransparent,\n      locale: locale,\n      largeChartUrl: largeChartUrl\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-single-quote.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/symbols/\".concat(symbol, \"/\"),\n      spanText: \"\".concat(symbol, \" Rates\")\n    }\n  });\n};\nvar SingleTicker$1 = memo(SingleTicker);\nvar StockMarket = function (_a) {\n  var _b = _a.colorTheme,\n    colorTheme = _b === void 0 ? \"light\" : _b,\n    _c = _a.dateRange,\n    dateRange = _c === void 0 ? \"12M\" : _c,\n    _d = _a.exchange,\n    exchange = _d === void 0 ? \"US\" : _d,\n    _e = _a.showChart,\n    showChart = _e === void 0 ? true : _e,\n    _f = _a.locale,\n    locale = _f === void 0 ? \"en\" : _f,\n    _g = _a.largeChartUrl,\n    largeChartUrl = _g === void 0 ? undefined : _g,\n    _h = _a.isTransparent,\n    isTransparent = _h === void 0 ? false : _h,\n    _j = _a.showSymbolLogo,\n    showSymbolLogo = _j === void 0 ? true : _j;\n  _a.showFloatingTooltip;\n  var _l = _a.width,\n    width = _l === void 0 ? 400 : _l,\n    _m = _a.height,\n    height = _m === void 0 ? 600 : _m,\n    _o = _a.autosize,\n    autosize = _o === void 0 ? false : _o,\n    _p = _a.plotLineColorGrowing,\n    plotLineColorGrowing = _p === void 0 ? \"rgba(33, 150, 243, 1)\" : _p,\n    _q = _a.plotLineColorFalling,\n    plotLineColorFalling = _q === void 0 ? \"rgba(33, 150, 243, 1)\" : _q,\n    _r = _a.gridLineColor,\n    gridLineColor = _r === void 0 ? \"rgba(240, 243, 250, 1)\" : _r,\n    _s = _a.scaleFontColor,\n    scaleFontColor = _s === void 0 ? \"rgba(120, 123, 134, 1)\" : _s,\n    _t = _a.belowLineFillColorGrowing,\n    belowLineFillColorGrowing = _t === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _t,\n    _u = _a.belowLineFillColorFalling,\n    belowLineFillColorFalling = _u === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _u,\n    _v = _a.belowLineFillColorGrowingBottom,\n    belowLineFillColorGrowingBottom = _v === void 0 ? \"rgba(41, 98, 255, 0)\" : _v,\n    _w = _a.belowLineFillColorFallingBottom,\n    belowLineFillColorFallingBottom = _w === void 0 ? \"rgba(41, 98, 255, 0)\" : _w,\n    _x = _a.symbolActiveColor,\n    symbolActiveColor = _x === void 0 ? \"rgba(33, 150, 243, 0.12)\" : _x,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"colorTheme\", \"dateRange\", \"exchange\", \"showChart\", \"locale\", \"largeChartUrl\", \"isTransparent\", \"showSymbolLogo\", \"showFloatingTooltip\", \"width\", \"height\", \"autosize\", \"plotLineColorGrowing\", \"plotLineColorFalling\", \"gridLineColor\", \"scaleFontColor\", \"belowLineFillColorGrowing\", \"belowLineFillColorFalling\", \"belowLineFillColorGrowingBottom\", \"belowLineFillColorFallingBottom\", \"symbolActiveColor\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign({\n      colorTheme: colorTheme,\n      dateRange: dateRange,\n      exchange: exchange,\n      showChart: showChart,\n      locale: locale,\n      largeChartUrl: largeChartUrl,\n      isTransparent: isTransparent,\n      showSymbolLogo: showSymbolLogo\n    }, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), showChart && {\n      plotLineColorGrowing: plotLineColorGrowing,\n      plotLineColorFalling: plotLineColorFalling,\n      gridLineColor: gridLineColor,\n      scaleFontColor: scaleFontColor,\n      belowLineFillColorGrowing: belowLineFillColorGrowing,\n      belowLineFillColorFalling: belowLineFillColorFalling,\n      belowLineFillColorGrowingBottom: belowLineFillColorGrowingBottom,\n      belowLineFillColorFallingBottom: belowLineFillColorFallingBottom,\n      symbolActiveColor: symbolActiveColor\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-hotlists.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/markets/stocks-usa/\",\n      spanText: \"Stock market Today\"\n    }\n  });\n};\nvar StockMarket$1 = memo(StockMarket);\nvar SymbolInfo = function (_a) {\n  var _b = _a.symbol,\n    symbol = _b === void 0 ? \"NASDAQ:AAPL\" : _b,\n    _c = _a.width,\n    width = _c === void 0 ? 1000 : _c,\n    _d = _a.autosize,\n    autosize = _d === void 0 ? false : _d,\n    _e = _a.locale,\n    locale = _e === void 0 ? \"en\" : _e,\n    _f = _a.colorTheme,\n    colorTheme = _f === void 0 ? \"light\" : _f,\n    _g = _a.isTransparent,\n    isTransparent = _g === void 0 ? false : _g,\n    _h = _a.largeChartUrl,\n    largeChartUrl = _h === void 0 ? undefined : _h,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"symbol\", \"width\", \"autosize\", \"locale\", \"colorTheme\", \"isTransparent\", \"largeChartUrl\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign({\n      symbol: symbol\n    }, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), {\n      locale: locale,\n      colorTheme: colorTheme,\n      isTransparent: isTransparent,\n      largeChartUrl: largeChartUrl\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-symbol-info.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/symbols/\".concat(symbol, \"/\"),\n      spanText: \"\".concat(symbol, \" Profile\")\n    }\n  });\n};\nvar SymbolInfo$1 = memo(SymbolInfo);\nvar defaultSymbols$2 = [[\"Apple\", \"AAPL\"], [\"Google\", \"GOOGL\"], [\"Microsoft\", \"MSFT\"]];\nvar SymbolOverview = function (_a) {\n  var _b = _a.symbols,\n    symbols = _b === void 0 ? defaultSymbols$2 : _b,\n    _c = _a.chartOnly,\n    chartOnly = _c === void 0 ? false : _c,\n    _d = _a.width,\n    width = _d === void 0 ? 1000 : _d,\n    _e = _a.height,\n    height = _e === void 0 ? 400 : _e,\n    _f = _a.locale,\n    locale = _f === void 0 ? \"en\" : _f,\n    _g = _a.colorTheme,\n    colorTheme = _g === void 0 ? \"light\" : _g,\n    _h = _a.fontColor,\n    fontColor = _h === void 0 ? \"#787B86\" : _h,\n    _j = _a.fontSize,\n    fontSize = _j === void 0 ? \"10\" : _j,\n    _k = _a.isTransparent,\n    isTransparent = _k === void 0 ? false : _k,\n    _l = _a.showFloatingTooltip,\n    showFloatingTooltip = _l === void 0 ? true : _l,\n    _m = _a.scalePosition,\n    scalePosition = _m === void 0 ? \"no\" : _m,\n    _o = _a.scaleMode,\n    scaleMode = _o === void 0 ? \"Normal\" : _o,\n    _p = _a.fontFamily,\n    fontFamily = _p === void 0 ? \"Trebuchet MS, sans-serif\" : _p,\n    _q = _a.noTimeScale,\n    noTimeScale = _q === void 0 ? false : _q,\n    _r = _a.valuesTracking,\n    valuesTracking = _r === void 0 ? \"1\" : _r,\n    _s = _a.lineWidth,\n    lineWidth = _s === void 0 ? 3 : _s,\n    _t = _a.showVolume,\n    showVolume = _t === void 0 ? false : _t,\n    _u = _a.volumeUpColor,\n    volumeUpColor = _u === void 0 ? \"rgba(34, 171, 148, 0.5)\" : _u,\n    _v = _a.volumeDownColor,\n    volumeDownColor = _v === void 0 ? \"rgba(247, 82, 95, 0.5)\" : _v,\n    _w = _a.dateFormat,\n    dateFormat = _w === void 0 ? \"dd MMM 'yy\" : _w,\n    _x = _a.timeHoursFormat,\n    timeHoursFormat = _x === void 0 ? \"24-hours\" : _x,\n    _y = _a.hideMarketStatus,\n    hideMarketStatus = _y === void 0 ? false : _y,\n    _z = _a.hideDateRanges,\n    hideDateRanges = _z === void 0 ? false : _z,\n    _0 = _a.chartType,\n    chartType = _0 === void 0 ? \"area\" : _0,\n    //area\n    _1 = _a.lineColor,\n    //area\n    lineColor = _1 === void 0 ? \"#2962FF\" : _1,\n    _2 = _a.bottomColor,\n    bottomColor = _2 === void 0 ? \"rgba(41, 98, 255, 0)\" : _2,\n    _3 = _a.topColor,\n    topColor = _3 === void 0 ? \"rgba(41, 98, 255, 0.3)\" : _3,\n    //bars & candles\n    _4 = _a.upColor,\n    //bars & candles\n    upColor = _4 === void 0 ? \"#26a69a\" : _4,\n    _5 = _a.downColor,\n    downColor = _5 === void 0 ? \"#ef5350\" : _5,\n    //candles\n    _6 = _a.borderUpColor,\n    //candles\n    borderUpColor = _6 === void 0 ? \"#26a69a\" : _6,\n    _7 = _a.borderDownColor,\n    borderDownColor = _7 === void 0 ? \"#ef5350\" : _7,\n    _8 = _a.wickUpColor,\n    wickUpColor = _8 === void 0 ? \"#26a69a\" : _8,\n    _9 = _a.wickDownColor,\n    wickDownColor = _9 === void 0 ? \"#ef5350\" : _9,\n    _10 = _a.backGroundColor,\n    backGroundColor = _10 === void 0 ? \"rgba(19, 23, 34, 0)\" : _10,\n    _11 = _a.gridLineColor,\n    gridLineColor = _11 === void 0 ? \"rgba(42, 46, 57, 0)\" : _11,\n    _12 = _a.widgetFontColor,\n    widgetFontColor = _12 === void 0 ? \"rgba(216, 216, 216, 1)\" : _12,\n    _13 = _a.autosize,\n    autosize = _13 === void 0 ? false : _13,\n    _14 = _a.container_id,\n    container_id = _14 === void 0 ? \"tradingview_\".concat(createId(5)) : _14;\n  _a.copyrightStyles;\n  var props = __rest(_a, [\"symbols\", \"chartOnly\", \"width\", \"height\", \"locale\", \"colorTheme\", \"fontColor\", \"fontSize\", \"isTransparent\", \"showFloatingTooltip\", \"scalePosition\", \"scaleMode\", \"fontFamily\", \"noTimeScale\", \"valuesTracking\", \"lineWidth\", \"showVolume\", \"volumeUpColor\", \"volumeDownColor\", \"dateFormat\", \"timeHoursFormat\", \"hideMarketStatus\", \"hideDateRanges\", \"chartType\", \"lineColor\", \"bottomColor\", \"topColor\", \"upColor\", \"downColor\", \"borderUpColor\", \"borderDownColor\", \"wickUpColor\", \"wickDownColor\", \"backGroundColor\", \"gridLineColor\", \"widgetFontColor\", \"autosize\", \"container_id\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n      symbols: symbols,\n      chartOnly: chartOnly\n    }, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      locale: locale,\n      colorTheme: colorTheme,\n      fontColor: fontColor,\n      fontSize: fontSize,\n      isTransparent: isTransparent,\n      showFloatingTooltip: showFloatingTooltip,\n      scalePosition: scalePosition,\n      scaleMode: scaleMode,\n      fontFamily: fontFamily,\n      noTimeScale: noTimeScale,\n      hideDateRanges: hideDateRanges,\n      hideMarketStatus: hideMarketStatus,\n      valuesTracking: valuesTracking,\n      lineWidth: lineWidth,\n      showVolume: showVolume\n    }), showVolume && {\n      volumeUpColor: volumeUpColor,\n      volumeDownColor: volumeDownColor\n    }), {\n      dateFormat: dateFormat,\n      timeHoursFormat: timeHoursFormat,\n      chartType: chartType\n    }), chartType === \"line\" && {\n      lineColor: lineColor\n    }), chartType === \"area\" && {\n      lineColor: lineColor,\n      bottomColor: bottomColor,\n      topColor: topColor\n    }), (chartType === \"bars\" || chartType === \"candlesticks\") && {\n      upColor: upColor,\n      downColor: downColor\n    }), chartType === \"candlesticks\" && {\n      upColor: upColor,\n      downColor: downColor,\n      borderUpColor: borderUpColor,\n      borderDownColor: borderDownColor,\n      wickUpColor: wickUpColor,\n      wickDownColor: wickDownColor\n    }), {\n      backGroundColor: backGroundColor,\n      widgetFontColor: widgetFontColor,\n      gridLineColor: gridLineColor,\n      autosize: autosize,\n      container_id: container_id\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/tv.js\",\n    containerId: container_id,\n    type: \"MediumWidget\",\n    copyrightProps: {\n      href: \"https://www.tradingview.com/symbols/\".concat(symbols[0][1]),\n      spanText: \"\".concat(symbols[0][1])\n    }\n  });\n};\nvar SymbolOverview$1 = memo(SymbolOverview);\nvar TechnicalAnalysis = function (_a) {\n  var _b = _a.interval,\n    interval = _b === void 0 ? \"1m\" : _b,\n    _c = _a.width,\n    width = _c === void 0 ? 425 : _c,\n    _d = _a.height,\n    height = _d === void 0 ? 450 : _d,\n    _e = _a.autosize,\n    autosize = _e === void 0 ? false : _e,\n    _f = _a.isTransparent,\n    isTransparent = _f === void 0 ? false : _f,\n    _g = _a.symbol,\n    symbol = _g === void 0 ? \"NASDAQ:AAPL\" : _g,\n    _h = _a.showIntervalTabs,\n    showIntervalTabs = _h === void 0 ? true : _h,\n    _j = _a.locale,\n    locale = _j === void 0 ? \"en\" : _j,\n    _k = _a.colorTheme,\n    colorTheme = _k === void 0 ? \"light\" : _k,\n    _l = _a.largeChartUrl,\n    largeChartUrl = _l === void 0 ? undefined : _l,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"interval\", \"width\", \"height\", \"autosize\", \"isTransparent\", \"symbol\", \"showIntervalTabs\", \"locale\", \"colorTheme\", \"largeChartUrl\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign({\n      interval: interval\n    }, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      isTransparent: isTransparent,\n      symbol: symbol,\n      showIntervalTabs: showIntervalTabs,\n      locale: locale,\n      colorTheme: colorTheme,\n      largeChartUrl: largeChartUrl\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-technical-analysis.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/symbols/\".concat(symbol.replace(\":\", \"-\"), \"/technicals/\"),\n      spanText: \"Technical Analysis for \".concat(symbol)\n    }\n  });\n};\nvar TechnicalAnalysis$1 = memo(TechnicalAnalysis);\nvar defaultSymbols$1 = [{\n  proName: \"FOREXCOM:SPXUSD\",\n  title: \"S&P 500\"\n}, {\n  proName: \"FOREXCOM:NSXUSD\",\n  title: \"Nasdaq 100\"\n}, {\n  proName: \"FX_IDC:EURUSD\",\n  title: \"EUR/USD\"\n}, {\n  proName: \"BITSTAMP:BTCUSD\",\n  title: \"BTC/USD\"\n}, {\n  proName: \"BITSTAMP:ETHUSD\",\n  title: \"ETH/USD\"\n}];\nvar Ticker = function (_a) {\n  var _b = _a.colorTheme,\n    colorTheme = _b === void 0 ? \"light\" : _b,\n    _c = _a.isTransparent,\n    isTransparent = _c === void 0 ? false : _c,\n    _d = _a.showSymbolLogo,\n    showSymbolLogo = _d === void 0 ? true : _d,\n    _e = _a.locale,\n    locale = _e === void 0 ? \"en\" : _e,\n    _f = _a.symbols,\n    symbols = _f === void 0 ? defaultSymbols$1 : _f,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"colorTheme\", \"isTransparent\", \"showSymbolLogo\", \"locale\", \"symbols\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign({\n      colorTheme: colorTheme,\n      isTransparent: isTransparent,\n      showSymbolLogo: showSymbolLogo,\n      locale: locale,\n      symbols: symbols\n    }, props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-tickers.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/\",\n      spanText: \"Quotes\"\n    }\n  });\n};\nvar Ticker$1 = memo(Ticker);\nvar defaultSymbols = [{\n  proName: \"FOREXCOM:SPXUSD\",\n  title: \"S&P 500\"\n}, {\n  proName: \"FOREXCOM:NSXUSD\",\n  title: \"Nasdaq 100\"\n}, {\n  proName: \"FX_IDC:EURUSD\",\n  title: \"EUR/USD\"\n}, {\n  proName: \"BITSTAMP:BTCUSD\",\n  title: \"BTC/USD\"\n}, {\n  proName: \"BITSTAMP:ETHUSD\",\n  title: \"ETH/USD\"\n}];\nvar TickerTape = function (_a) {\n  var _b = _a.symbols,\n    symbols = _b === void 0 ? defaultSymbols : _b,\n    _c = _a.showSymbolLogo,\n    showSymbolLogo = _c === void 0 ? true : _c,\n    _d = _a.colorTheme,\n    colorTheme = _d === void 0 ? \"light\" : _d,\n    _e = _a.isTransparent,\n    isTransparent = _e === void 0 ? false : _e,\n    _f = _a.largeChartUrl,\n    largeChartUrl = _f === void 0 ? undefined : _f,\n    _g = _a.displayMode,\n    displayMode = _g === void 0 ? \"adaptive\" : _g,\n    _h = _a.locale,\n    locale = _h === void 0 ? \"en\" : _h,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"symbols\", \"showSymbolLogo\", \"colorTheme\", \"isTransparent\", \"largeChartUrl\", \"displayMode\", \"locale\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign({\n      symbols: symbols,\n      showSymbolLogo: showSymbolLogo,\n      colorTheme: colorTheme,\n      isTransparent: isTransparent,\n      largeChartUrl: largeChartUrl,\n      displayMode: displayMode,\n      locale: locale\n    }, props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/markets/\",\n      spanText: \"Markets\"\n    }\n  });\n};\nvar TickerTape$1 = memo(TickerTape);\nvar Timeline = function (_a) {\n  var _b = _a.feedMode,\n    feedMode = _b === void 0 ? \"all_symbols\" : _b,\n    _c = _a.colorTheme,\n    colorTheme = _c === void 0 ? \"light\" : _c,\n    _d = _a.isTransparent,\n    isTransparent = _d === void 0 ? false : _d,\n    _e = _a.displayMode,\n    displayMode = _e === void 0 ? \"regular\" : _e,\n    _f = _a.width,\n    width = _f === void 0 ? 480 : _f,\n    _g = _a.height,\n    height = _g === void 0 ? 830 : _g,\n    _h = _a.autosize,\n    autosize = _h === void 0 ? false : _h,\n    _j = _a.locale,\n    locale = _j === void 0 ? \"en\" : _j,\n    _k = _a.largeChartUrl,\n    largeChartUrl = _k === void 0 ? undefined : _k,\n    copyrightStyles = _a.copyrightStyles,\n    _l = _a.symbol,\n    symbol = _l === void 0 ? \"BTCUSD\" : _l,\n    _m = _a.market,\n    market = _m === void 0 ? \"crypto\" : _m,\n    props = __rest(_a, [\"feedMode\", \"colorTheme\", \"isTransparent\", \"displayMode\", \"width\", \"height\", \"autosize\", \"locale\", \"largeChartUrl\", \"copyrightStyles\", \"symbol\", \"market\"]);\n  var _o = useState(\"\"),\n    href = _o[0],\n    sethref = _o[1];\n  var _p = useState(\"\"),\n    spanText = _p[0],\n    setspanText = _p[1];\n  useEffect(function () {\n    if (feedMode == \"all_symbols\") {\n      sethref(\"key_events\");\n      setspanText(\"Daily news roundup\");\n    } else if (feedMode == \"market\") {\n      switch (market) {\n        case \"crypto\":\n          sethref(\"markets/cryptocurrencies/key-events/\");\n          setspanText(\"Daily cryptocurrency news\");\n          break;\n        case \"forex\":\n          sethref(\"markets/currencies/key-events/\");\n          setspanText(\"Daily currency news\");\n          break;\n        case \"stock\":\n          sethref(\"markets/stocks-usa/key-events/\");\n          setspanText(\"Daily stock news\");\n          break;\n        case \"index\":\n          sethref(\"markets/indices/key-events/\");\n          setspanText(\"Daily index news\");\n          break;\n        case \"futures\":\n          sethref(\"markets/futures/key-events/\");\n          setspanText(\"Daily futures news\");\n          break;\n        case \"cfd\":\n          sethref(\"markets/bonds/key-events/\");\n          setspanText(\"Daily bonds news\");\n          break;\n      }\n    } else if (feedMode == \"symbol\") {\n      sethref(\"symbols/\".concat(symbol, \"/history-timeline/\"));\n      setspanText(\"\".concat(symbol, \" History\"));\n    }\n  }, [feedMode, symbol, market]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign(__assign(__assign(__assign({}, !autosize ? {\n      width: width\n    } : {\n      width: \"100%\"\n    }), !autosize ? {\n      height: height\n    } : {\n      height: \"100%\"\n    }), {\n      feedMode: feedMode\n    }), feedMode == \"market\" ? {\n      market: market\n    } : feedMode == \"symbol\" ? {\n      symbol: symbol\n    } : {}), {\n      colorTheme: colorTheme,\n      isTransparent: isTransparent,\n      displayMode: displayMode,\n      locale: locale,\n      largeChartUrl: largeChartUrl\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-timeline.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/\".concat(href),\n      spanText: spanText\n    }\n  });\n};\nvar Timeline$1 = memo(Timeline);\nvar StockHeatmap = function (_a) {\n  var _b = _a.dataSource,\n    dataSource = _b === void 0 ? \"SPX500\" : _b,\n    _c = _a.exchanges,\n    exchanges = _c === void 0 ? [\"NYSE\"] : _c,\n    _d = _a.grouping,\n    grouping = _d === void 0 ? \"sector\" : _d,\n    _e = _a.blockSize,\n    blockSize = _e === void 0 ? \"market_cap_basic\" : _e,\n    _f = _a.blockColor,\n    blockColor = _f === void 0 ? \"change\" : _f,\n    _g = _a.locale,\n    locale = _g === void 0 ? \"en\" : _g,\n    _h = _a.autoSize,\n    autoSize = _h === void 0 ? false : _h,\n    _j = _a.height,\n    height = _j === void 0 ? undefined : _j,\n    _k = _a.width,\n    width = _k === void 0 ? undefined : _k,\n    _l = _a.symbolUrl,\n    symbolUrl = _l === void 0 ? \"\" : _l,\n    _m = _a.colorTheme,\n    colorTheme = _m === void 0 ? \"light\" : _m,\n    _o = _a.isZoomEnabled,\n    isZoomEnabled = _o === void 0 ? true : _o,\n    _p = _a.hasSymbolTooltip,\n    hasSymbolTooltip = _p === void 0 ? true : _p,\n    _q = _a.hasTopBar,\n    hasTopBar = _q === void 0 ? true : _q,\n    _r = _a.isSetDataSetEnabled,\n    isSetDataSetEnabled = _r === void 0 ? true : _r,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"dataSource\", \"exchanges\", \"grouping\", \"blockSize\", \"blockColor\", \"locale\", \"autoSize\", \"height\", \"width\", \"symbolUrl\", \"colorTheme\", \"isZoomEnabled\", \"hasSymbolTooltip\", \"hasTopBar\", \"isSetDataSetEnabled\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign({\n      dataSource: dataSource,\n      exchanges: exchanges,\n      grouping: grouping,\n      blockSize: blockSize,\n      blockColor: blockColor,\n      locale: locale,\n      autoSize: autoSize\n    }, autoSize ? {\n      width: \"100%\",\n      height: \"100%\"\n    } : {\n      width: width,\n      height: height\n    }), {\n      symbolUrl: symbolUrl,\n      colorTheme: colorTheme,\n      isZoomEnabled: isZoomEnabled,\n      hasSymbolTooltip: hasSymbolTooltip,\n      hasTopBar: hasTopBar,\n      isSetDataSetEnabled: isSetDataSetEnabled\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-stock-heatmap.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/?utm_source=www.tradingview.com&utm_medium=widget_new&utm_campaign=stock-heatmap\",\n      spanText: \"Track all markets on TradingView\"\n    }\n  });\n};\nvar StockHeatmap$1 = memo(StockHeatmap);\nvar CryptoCoinsHeatmap = function (_a) {\n  var _b = _a.dataSource,\n    dataSource = _b === void 0 ? \"Crypto\" : _b,\n    _c = _a.blockSize,\n    blockSize = _c === void 0 ? \"market_cap_calc\" : _c,\n    _d = _a.blockColor,\n    blockColor = _d === void 0 ? \"change\" : _d,\n    _e = _a.locale,\n    locale = _e === void 0 ? \"en\" : _e,\n    _f = _a.autoSize,\n    autoSize = _f === void 0 ? false : _f,\n    _g = _a.height,\n    height = _g === void 0 ? undefined : _g,\n    _h = _a.width,\n    width = _h === void 0 ? undefined : _h,\n    _j = _a.symbolUrl,\n    symbolUrl = _j === void 0 ? \"\" : _j,\n    _k = _a.colorTheme,\n    colorTheme = _k === void 0 ? \"light\" : _k,\n    _l = _a.isZoomEnabled,\n    isZoomEnabled = _l === void 0 ? true : _l,\n    _m = _a.hasSymbolTooltip,\n    hasSymbolTooltip = _m === void 0 ? true : _m,\n    _o = _a.hasTopBar,\n    hasTopBar = _o === void 0 ? true : _o,\n    _p = _a.isSetDataSetEnabled,\n    isSetDataSetEnabled = _p === void 0 ? true : _p,\n    copyrightStyles = _a.copyrightStyles,\n    props = __rest(_a, [\"dataSource\", \"blockSize\", \"blockColor\", \"locale\", \"autoSize\", \"height\", \"width\", \"symbolUrl\", \"colorTheme\", \"isZoomEnabled\", \"hasSymbolTooltip\", \"hasTopBar\", \"isSetDataSetEnabled\", \"copyrightStyles\"]);\n  return React.createElement(Widget, {\n    scriptHTML: __assign(__assign(__assign({\n      dataSource: dataSource,\n      blockSize: blockSize,\n      blockColor: blockColor,\n      locale: locale,\n      autoSize: autoSize\n    }, autoSize ? {\n      width: \"100%\",\n      height: \"100%\"\n    } : {\n      width: width,\n      height: height\n    }), {\n      symbolUrl: symbolUrl,\n      colorTheme: colorTheme,\n      isZoomEnabled: isZoomEnabled,\n      hasSymbolTooltip: hasSymbolTooltip,\n      hasTopBar: hasTopBar,\n      isSetDataSetEnabled: isSetDataSetEnabled\n    }), props),\n    scriptSRC: \"https://s3.tradingview.com/external-embedding/embed-widget-crypto-coins-heatmap.js\",\n    copyrightProps: {\n      copyrightStyles: copyrightStyles,\n      href: \"https://www.tradingview.com/?utm_source=www.tradingview.com&utm_medium=widget_new&utm_campaign=stock-heatmap\",\n      spanText: \"Track all markets on TradingView\"\n    }\n  });\n};\nvar CryptoCoinsHeatmap$1 = memo(CryptoCoinsHeatmap);\nexport { AdvancedRealTimeChart$1 as AdvancedRealTimeChart, CompanyProfile$1 as CompanyProfile, CryptoCoinsHeatmap$1 as CryptoCoinsHeatmap, CryptoCurrencyMarket$1 as CryptoCurrencyMarket, EconomicCalendar$1 as EconomicCalendar, ForexCrossRates$1 as ForexCrossRates, ForexHeatMap$1 as ForexHeatMap, FundamentalData$1 as FundamentalData, MarketData$1 as MarketData, MarketOverview$1 as MarketOverview, MiniChart$1 as MiniChart, Screener$1 as Screener, SingleTicker$1 as SingleTicker, StockHeatmap$1 as StockHeatmap, StockMarket$1 as StockMarket, SymbolInfo$1 as SymbolInfo, SymbolOverview$1 as SymbolOverview, TechnicalAnalysis$1 as TechnicalAnalysis, Ticker$1 as Ticker, TickerTape$1 as TickerTape, Timeline$1 as Timeline };","map":{"version":3,"names":["createId","length","result","characters","charactersLength","i","charAt","Math","floor","random","Copyright","_a","href","spanText","_b","text","copyrightStyles","defaultStyles","parent","fontSize","lineHeight","textAlign","verticalAlign","fontFamily","color","link","textDecoration","span","React","createElement","style","Object","assign","className","target","Widget","scriptHTML","scriptSRC","containerId","type","copyrightProps","ref","useRef","useEffect","refValue","initWidget","current","script_1","document","setAttribute","src","async","onload","TradingView","undefined","innerHTML","JSON","stringify","widget","MediumWidget","querySelector","appendChild","requestAnimationFrame","firstChild","removeChild","containerKey","display","id","key","AdvancedRealTimeChart","width","_c","height","_d","autosize","_e","symbol","_f","interval","_g","range","_h","timezone","_j","theme","_k","_l","locale","_m","toolbar_bg","_o","enable_publishing","_p","hide_top_toolbar","_q","hide_legend","_r","withdateranges","_s","hide_side_toolbar","_t","allow_symbol_change","_u","save_image","_v","details","_w","hotlist","_x","calendar","_y","show_popup_button","_z","popup_width","_0","popup_height","_1","watchlist","_2","studies","_3","disabled_features","_4","enabled_features","_5","container_id","concat","props","__rest","__assign","AdvancedRealTimeChart$1","memo","CompanyProfile","colorTheme","isTransparent","largeChartUrl","CompanyProfile$1","CryptoCurrencyMarket","defaultColumn","screener_type","displayCurrency","CryptoCurrencyMarket$1","EconomicCalendar","importanceFilter","countryFilter","EconomicCalendar$1","defaultCurrencies$1","ForexCrossRates","currencies","ForexCrossRates$1","defaultCurrencies","ForexHeatMap","ForexHeatMap$1","FundamentalData","displayMode","replace","FundamentalData$1","defaultSymbolGroup","name","originalName","symbols","displayName","MarketData","symbolsGroups","showSymbolLogo","MarketData$1","defaultTabs","title","s","d","originalTitle","MarketOverview","dateRange","showChart","showFloatingTooltip","plotLineColorGrowing","plotLineColorFalling","gridLineColor","scaleFontColor","belowLineFillColorGrowing","belowLineFillColorFalling","belowLineFillColorGrowingBottom","belowLineFillColorFallingBottom","symbolActiveColor","tabs","MarketOverview$1","MiniChart","trendLineColor","underLineColor","underLineBottomColor","MiniChart$1","Screener","defaultScreen","market","showToolbar","Screener$1","SingleTicker","SingleTicker$1","StockMarket","exchange","StockMarket$1","SymbolInfo","SymbolInfo$1","defaultSymbols$2","SymbolOverview","chartOnly","fontColor","scalePosition","scaleMode","noTimeScale","valuesTracking","lineWidth","showVolume","volumeUpColor","volumeDownColor","dateFormat","timeHoursFormat","hideMarketStatus","hideDateRanges","chartType","lineColor","bottomColor","topColor","upColor","downColor","_6","borderUpColor","_7","borderDownColor","_8","wickUpColor","_9","wickDownColor","_10","backGroundColor","_11","_12","widgetFontColor","_13","_14","SymbolOverview$1","TechnicalAnalysis","showIntervalTabs","TechnicalAnalysis$1","defaultSymbols$1","proName","Ticker","Ticker$1","defaultSymbols","TickerTape","TickerTape$1","Timeline","feedMode","useState","sethref","setspanText","Timeline$1","StockHeatmap","dataSource","exchanges","grouping","blockSize","blockColor","autoSize","symbolUrl","isZoomEnabled","hasSymbolTooltip","hasTopBar","isSetDataSetEnabled","StockHeatmap$1","CryptoCoinsHeatmap","CryptoCoinsHeatmap$1"],"sources":["C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\utils.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\Copyright.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\Widget.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\AdvancedRealTimeChart.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\CompanyProfile.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\CryptoCurrencyMarket.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\EconomicCalendar.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\ForexCrossRates.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\ForexHeatMap.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\FundamentalData.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\MarketData.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\MarketOverview.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\MiniChart.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\Screener.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\SingleTicker.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\StockMarket.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\SymbolInfo.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\SymbolOverview.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\TechnicalAnalysis.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\Ticker.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\TickerTape.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\Timeline.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\StockHeatmap.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\react-ts-tradingview-widgets\\src\\components\\CryptoCoinsHeatmap.tsx"],"sourcesContent":["export const createId = (length: number): string => {\n  var result = \"\";\n  var characters = \"abcdef0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n","import React from \"react\";\nimport { CopyrightStyles } from \"..\";\n\nexport type CopyrightProps = {\n  copyrightStyles?: CopyrightStyles;\n  href?: string;\n  spanText?: string;\n  text?: string;\n  children?: never;\n};\n\nconst Copyright: React.FC<CopyrightProps> = ({\n  href,\n  spanText,\n  text = \"By TradingView\",\n  copyrightStyles,\n}) => {\n  const defaultStyles: CopyrightStyles = {\n    parent: {\n      fontSize: \"13px\",\n      lineHeight: \"32px\",\n      textAlign: \"center\",\n      verticalAlign: \"center\",\n      fontFamily: \"Trebuchet MS, Arial, sans-serif\",\n      color: \"#9db2bd\",\n    },\n    link: {\n      textDecoration: \"none\",\n      color: \"#9db2bd\",\n    },\n    span: {\n      color: \"#2962FF\",\n    },\n  };\n\n  return (\n    <div\n      style={Object.assign({}, defaultStyles.parent, copyrightStyles?.parent)}\n      className=\"tradingview-widget-copyright\"\n    >\n      <a\n        style={Object.assign({}, defaultStyles.link, copyrightStyles?.link)}\n        href={href}\n        target=\"_blank\"\n      >\n        <span\n          style={Object.assign({}, defaultStyles.span, copyrightStyles?.span)}\n        >\n          {spanText}{\" \"}\n        </span>\n      </a>\n      {text}\n    </div>\n  );\n};\n\nexport default Copyright;\n","import React, { useEffect, useRef } from \"react\";\nimport Copyright, { CopyrightProps } from \"./Copyright\";\n\ninterface WidgetProps {\n  scriptHTML: unknown;\n  scriptSRC: string;\n  containerId?: string;\n  type?: \"Widget\" | \"MediumWidget\";\n  copyrightProps: CopyrightProps;\n}\n\ndeclare const TradingView: any;\n\nconst Widget: React.FC<WidgetProps> = ({\n  scriptHTML,\n  scriptSRC,\n  containerId,\n  type,\n  copyrightProps,\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    let refValue: HTMLDivElement;\n\n    const initWidget = () => {\n      if (ref.current) {\n        const script = document.createElement(\"script\");\n        script.setAttribute(\"data-nscript\", \"afterInteractive\");\n        script.src = scriptSRC;\n        script.async = true;\n        script.type = \"text/javascript\";\n\n        if (type === \"Widget\" || type === \"MediumWidget\") {\n          script.onload = () => {\n            if (typeof TradingView !== undefined) {\n              script.innerHTML = JSON.stringify(\n                type === \"Widget\"\n                  ? new TradingView.widget(scriptHTML)\n                  : type === \"MediumWidget\"\n                  ? new TradingView.MediumWidget(scriptHTML)\n                  : undefined\n              );\n            }\n          };\n        } else {\n          script.innerHTML = JSON.stringify(scriptHTML);\n        }\n        if (!ref.current.querySelector('script[src=\"' + scriptSRC + '\"]')) {\n          ref.current.appendChild(script);\n        }\n        refValue = ref.current;\n      }\n    };\n    requestAnimationFrame(initWidget);\n\n    return () => {\n      if (refValue) {\n        while (refValue.firstChild) {\n          refValue.removeChild(refValue.firstChild);\n        }\n      }\n    };\n  }, [ref, scriptHTML, type, scriptSRC]);\n\n  const containerKey = containerId || \"tradingview_\" + scriptHTML;\n\n  return (\n    <div style={{ display: \"contents\" }}>\n      {type === \"Widget\" || type === \"MediumWidget\" ? (\n        <div id={containerId} key={containerKey}>\n          <div ref={ref} style={{ display: \"contents\" }} />\n        </div>\n      ) : (\n        <div ref={ref} style={{ display: \"contents\" }} key={containerKey} />\n      )}\n      <Copyright\n        href={copyrightProps.href}\n        spanText={copyrightProps.spanText}\n        text={copyrightProps.text}\n        copyrightStyles={copyrightProps.copyrightStyles}\n      />\n    </div>\n  );\n};\n\nexport default Widget;\n","import React, { memo } from \"react\";\nimport {\n  ColorTheme,\n  CopyrightStyles,\n  Locales,\n  Studies,\n  Timezone,\n  WidgetFeatures,\n} from \"../index\";\nimport { createId } from \"../utils\";\nimport Widget from \"./Widget\";\n\nexport type AdvancedRealTimeChartProps = {\n  width?: number | string;\n  height?: number | string;\n  autosize?: boolean;\n  symbol?: string;\n  interval?:\n    | \"1\"\n    | \"3\"\n    | \"5\"\n    | \"15\"\n    | \"30\"\n    | \"60\"\n    | \"120\"\n    | \"180\"\n    | \"240\"\n    | \"D\"\n    | \"W\";\n  range?: \"1D\" | \"5D\" | \"1M\" | \"3M\" | \"6M\" | \"YTD\" | \"12M\" | \"60M\" | \"ALL\";\n  timezone?: Timezone;\n  theme?: ColorTheme;\n  style?: \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\";\n  locale?: Locales | \"hu_HU\" | \"fa_IR\";\n  toolbar_bg?: string;\n  enable_publishing?: boolean;\n  withdateranges?: boolean;\n  hide_top_toolbar?: boolean;\n  hide_legend?: boolean;\n  hide_side_toolbar?: boolean;\n  allow_symbol_change?: boolean;\n  save_image?: boolean;\n  details?: boolean;\n  hotlist?: boolean;\n  calendar?: boolean;\n  show_popup_button?: boolean;\n  popup_width?: string;\n  popup_height?: string;\n  watchlist?: string[];\n  studies?: Studies[];\n  disabled_features?: WidgetFeatures[];\n  enabled_features?: WidgetFeatures[];\n\n  container_id?: string;\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst AdvancedRealTimeChart: React.FC<AdvancedRealTimeChartProps> = ({\n  width = 980,\n  height = 610,\n  autosize = false,\n  symbol = \"NASDAQ:AAPL\",\n  interval = \"1\",\n  range = undefined,\n  timezone = \"UTC\",\n  theme = \"light\",\n  style = \"1\",\n  locale = \"en\",\n  toolbar_bg = \"#f1f3f6\",\n  enable_publishing = false,\n  hide_top_toolbar = false,\n  hide_legend = false,\n  withdateranges = true,\n  hide_side_toolbar = false,\n  allow_symbol_change = true,\n  save_image = true,\n  details = false,\n  hotlist = false,\n  calendar = false,\n  show_popup_button = false,\n  popup_width = \"600\",\n  popup_height = \"400\",\n  watchlist = undefined,\n  studies = undefined,\n  disabled_features = undefined,\n  enabled_features = undefined,\n  container_id = `tradingview_${createId(5)}`,\n\n  copyrightStyles,\n\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        autosize,\n        symbol,\n        ...(!range ? { interval } : { range }),\n        timezone,\n        theme,\n        style,\n        locale,\n        toolbar_bg,\n        enable_publishing,\n        hide_top_toolbar,\n        hide_legend,\n        withdateranges,\n        hide_side_toolbar,\n        allow_symbol_change,\n        save_image,\n        details,\n        hotlist,\n        calendar,\n        ...(show_popup_button && {\n          show_popup_button,\n          popup_width,\n          popup_height,\n        }),\n        watchlist,\n        studies,\n        disabled_features,\n        enabled_features,\n        container_id,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/tv.js\"\n      containerId={container_id}\n      type=\"Widget\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol}`,\n        spanText: `${symbol} Chart`,\n      }}\n    />\n  );\n};\n\nexport default memo(AdvancedRealTimeChart);\n","import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type CompanyProfileProps = {\n  symbol?: string;\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst CompanyProfile: React.FC<CompanyProfileProps> = ({\n  symbol = \"NASDAQ:AAPL\",\n  width = 480,\n  height = 650,\n  autosize = false,\n  colorTheme = \"light\",\n  isTransparent = false,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        symbol,\n        colorTheme,\n        isTransparent,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-symbol-profile.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol}/`,\n        spanText: `${symbol} Profile`,\n      }}\n    />\n  );\n};\n\nexport default memo(CompanyProfile);\n","import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type CryptoCurrencyMarketProps = {\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  defaultColumn?:\n    | \"overview\"\n    | \"performance\"\n    | \"oscillators\"\n    | \"moving_averages\";\n  screener_type?: \"crypto_mkt\";\n  displayCurrency?: \"USD\" | \"BTC\";\n  colorTheme?: ColorTheme;\n  locale?: Locales;\n  isTransparent?: boolean;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst CryptoCurrencyMarket: React.FC<CryptoCurrencyMarketProps> = ({\n  width = 1000,\n  height = 490,\n  autosize = false,\n  defaultColumn = \"overview\",\n  screener_type = \"crypto_mkt\",\n  displayCurrency = \"USD\",\n  colorTheme = \"light\",\n  locale = \"en\",\n  isTransparent = false,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        defaultColumn,\n        screener_type,\n        displayCurrency,\n        colorTheme,\n        locale,\n        isTransparent,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-screener.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/markets/cryptocurrencies/prices-all/`,\n        spanText: `Cryptocurrency Markets`,\n      }}\n    />\n  );\n};\n\nexport default memo(CryptoCurrencyMarket);\n","import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type EconomicCalendarProps = {\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  locale?: Locales;\n  importanceFilter?: \"-1,0,1\" | \"0,1\";\n  countryFilter?: string;\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst EconomicCalendar: React.FC<EconomicCalendarProps> = ({\n  colorTheme = \"light\",\n  isTransparent = false,\n  width = 510,\n  height = 600,\n  autosize = false,\n  locale = \"en\",\n  importanceFilter = \"-1,0,1\",\n  countryFilter = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        colorTheme,\n        isTransparent,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        locale,\n        importanceFilter,\n        countryFilter,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-events.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/markets/currencies/economic-calendar/`,\n        spanText: `Economic Calendar`,\n      }}\n    />\n  );\n};\n\nexport default memo(EconomicCalendar);\n","import React, { memo } from \"react\";\nimport { ColorTheme, Currencies, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type ForexCrossRatesProps = {\n  width?: number | string;\n  height?: number | string;\n  autosize?: boolean;\n  currencies?: Currencies[];\n  isTransparent?: boolean;\n  colorTheme?: ColorTheme;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst defaultCurrencies: Currencies[] = [\n  \"EUR\",\n  \"USD\",\n  \"JPY\",\n  \"GBP\",\n  \"CHF\",\n  \"AUD\",\n  \"CAD\",\n  \"NZD\",\n  \"CNY\",\n];\n\nconst ForexCrossRates: React.FC<ForexCrossRatesProps> = ({\n  width = 770,\n  height = 400,\n  autosize = false,\n  currencies = defaultCurrencies,\n  isTransparent = false,\n  colorTheme = \"light\",\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        currencies,\n        isTransparent,\n        colorTheme,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-forex-cross-rates.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/markets/currencies/forex-cross-rates/`,\n        spanText: `Exchange Rates`,\n      }}\n    />\n  );\n};\n\nexport default memo(ForexCrossRates);\n","import React, { memo } from \"react\";\nimport { ColorTheme, Currencies, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type ForexHeatMapProps = {\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  currencies?: Currencies[];\n  isTransparent?: boolean;\n  colorTheme?: ColorTheme;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst defaultCurrencies: Currencies[] = [\n  \"EUR\",\n  \"USD\",\n  \"JPY\",\n  \"GBP\",\n  \"CHF\",\n  \"AUD\",\n  \"CAD\",\n  \"NZD\",\n  \"CNY\",\n];\n\nconst ForexHeatMap: React.FC<ForexHeatMapProps> = ({\n  width = 700,\n  height = 400,\n  autosize = false,\n  currencies = defaultCurrencies,\n  isTransparent = false,\n  colorTheme = \"light\",\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        currencies,\n        isTransparent,\n        colorTheme,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-forex-heat-map.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/markets/currencies/forex-heat-map/`,\n        spanText: `Forex Heat Map`,\n      }}\n    />\n  );\n};\n\nexport default memo(ForexHeatMap);\n","import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, DisplayMode, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type FundamentalDataProps = {\n  symbol?: string;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  largeChartUrl?: string;\n  displayMode?: DisplayMode;\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  locale?: Locales;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst FundamentalData: React.FC<FundamentalDataProps> = ({\n  symbol = \"NASDAQ:AAPL\",\n  colorTheme = \"light\",\n  isTransparent = false,\n  largeChartUrl = undefined,\n  displayMode = \"regular\",\n  width = 480,\n  height = 830,\n  autosize = false,\n  locale = \"en\",\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        symbol,\n        colorTheme,\n        isTransparent,\n        largeChartUrl,\n        displayMode,\n        locale,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-financials.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol.replace(\n          \":\",\n          \"-\"\n        )}/financials-overview/`,\n        spanText: `${symbol} Fundamental Data`,\n      }}\n    />\n  );\n};\n\nexport default memo(FundamentalData);\n","import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport interface MarketDataSymbol {\n  name: string;\n  displayName?: string;\n}\n\nexport interface MarketDataSymbolsGroup {\n  name: string;\n  originalName: string;\n  symbols: MarketDataSymbol[];\n}\n\nexport interface MarketDataProps {\n  width?: number | string;\n  height?: number | string;\n  autosize?: boolean;\n  symbolsGroups?: MarketDataSymbolsGroup[];\n  showSymbolLogo?: boolean;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n}\n\nconst defaultSymbolGroup = [\n  {\n    name: \"Indices\",\n    originalName: \"Indices\",\n    symbols: [\n      {\n        name: \"FOREXCOM:SPXUSD\",\n        displayName: \"S&P 500\",\n      },\n      {\n        name: \"FOREXCOM:NSXUSD\",\n        displayName: \"Nasdaq 100\",\n      },\n      {\n        name: \"FOREXCOM:DJI\",\n        displayName: \"Dow 30\",\n      },\n      {\n        name: \"INDEX:NKY\",\n        displayName: \"Nikkei 225\",\n      },\n      {\n        name: \"INDEX:DEU30\",\n        displayName: \"DAX Index\",\n      },\n      {\n        name: \"FOREXCOM:UKXGBP\",\n        displayName: \"UK 100\",\n      },\n    ],\n  },\n  {\n    name: \"Commodities\",\n    originalName: \"Commodities\",\n    symbols: [\n      {\n        name: \"CME_MINI:ES1!\",\n        displayName: \"S&P 500\",\n      },\n      {\n        name: \"CME:6E1!\",\n        displayName: \"Euro\",\n      },\n      {\n        name: \"COMEX:GC1!\",\n        displayName: \"Gold\",\n      },\n      {\n        name: \"NYMEX:CL1!\",\n        displayName: \"Crude Oil\",\n      },\n      {\n        name: \"NYMEX:NG1!\",\n        displayName: \"Natural Gas\",\n      },\n      {\n        name: \"CBOT:ZC1!\",\n        displayName: \"Corn\",\n      },\n    ],\n  },\n  {\n    name: \"Bonds\",\n    originalName: \"Bonds\",\n    symbols: [\n      {\n        name: \"CME:GE1!\",\n        displayName: \"Eurodollar\",\n      },\n      {\n        name: \"CBOT:ZB1!\",\n        displayName: \"T-Bond\",\n      },\n      {\n        name: \"CBOT:UB1!\",\n        displayName: \"Ultra T-Bond\",\n      },\n      {\n        name: \"EUREX:FGBL1!\",\n        displayName: \"Euro Bund\",\n      },\n      {\n        name: \"EUREX:FBTP1!\",\n        displayName: \"Euro BTP\",\n      },\n      {\n        name: \"EUREX:FGBM1!\",\n        displayName: \"Euro BOBL\",\n      },\n    ],\n  },\n  {\n    name: \"Forex\",\n    originalName: \"Forex\",\n    symbols: [\n      {\n        name: \"FX:EURUSD\",\n      },\n      {\n        name: \"FX:GBPUSD\",\n      },\n      {\n        name: \"FX:USDJPY\",\n      },\n      {\n        name: \"FX:USDCHF\",\n      },\n      {\n        name: \"FX:AUDUSD\",\n      },\n      {\n        name: \"FX:USDCAD\",\n      },\n    ],\n  },\n];\n\nconst MarketData: React.FC<MarketDataProps> = ({\n  width = 770,\n  height = 450,\n  autosize = false,\n  symbolsGroups = defaultSymbolGroup,\n  showSymbolLogo = true,\n  colorTheme = \"light\",\n  isTransparent = false,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        symbolsGroups,\n        showSymbolLogo,\n        colorTheme,\n        isTransparent,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-market-quotes.js\"\n      copyrightProps={{\n        copyrightStyles,\n        spanText: `Financial Markets`,\n        href: \"https://www.tradingview.com/markets/\",\n      }}\n    />\n  );\n};\n\nexport default memo(MarketData);\n","import React, { memo } from \"react\";\nimport { ColorTheme, DateRange, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type MarketOverviewSymbol = {\n  s: string;\n  d?: string;\n};\n\nexport type MarketOverviewTab = {\n  title: string;\n  symbols: MarketOverviewSymbol[];\n  originalTitle: string;\n};\n\nexport type MarketOverviewProps = {\n  colorTheme?: ColorTheme;\n  dateRange?: DateRange;\n  showChart?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n  isTransparent?: boolean;\n  showSymbolLogo?: boolean;\n  showFloatingTooltip?: boolean;\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  plotLineColorGrowing?: string;\n  plotLineColorFalling?: string;\n  gridLineColor?: string;\n  scaleFontColor?: string;\n  belowLineFillColorGrowing?: string;\n  belowLineFillColorFalling?: string;\n  belowLineFillColorGrowingBottom?: string;\n  belowLineFillColorFallingBottom?: string;\n  symbolActiveColor?: string;\n  tabs?: MarketOverviewTab[];\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst defaultTabs: MarketOverviewTab[] = [\n  {\n    title: \"Indices\",\n    symbols: [\n      {\n        s: \"FOREXCOM:SPXUSD\",\n        d: \"S&P 500\",\n      },\n      {\n        s: \"FOREXCOM:NSXUSD\",\n        d: \"Nasdaq 100\",\n      },\n      {\n        s: \"FOREXCOM:DJI\",\n        d: \"Dow 30\",\n      },\n      {\n        s: \"INDEX:NKY\",\n        d: \"Nikkei 225\",\n      },\n      {\n        s: \"INDEX:DEU30\",\n        d: \"DAX Index\",\n      },\n      {\n        s: \"FOREXCOM:UKXGBP\",\n        d: \"UK 100\",\n      },\n    ],\n    originalTitle: \"Indices\",\n  },\n  {\n    title: \"Commodities\",\n    symbols: [\n      {\n        s: \"CME_MINI:ES1!\",\n        d: \"S&P 500\",\n      },\n      {\n        s: \"CME:6E1!\",\n        d: \"Euro\",\n      },\n      {\n        s: \"COMEX:GC1!\",\n        d: \"Gold\",\n      },\n      {\n        s: \"NYMEX:CL1!\",\n        d: \"Crude Oil\",\n      },\n      {\n        s: \"NYMEX:NG1!\",\n        d: \"Natural Gas\",\n      },\n      {\n        s: \"CBOT:ZC1!\",\n        d: \"Corn\",\n      },\n    ],\n    originalTitle: \"Commodities\",\n  },\n  {\n    title: \"Bonds\",\n    symbols: [\n      {\n        s: \"CME:GE1!\",\n        d: \"Eurodollar\",\n      },\n      {\n        s: \"CBOT:ZB1!\",\n        d: \"T-Bond\",\n      },\n      {\n        s: \"CBOT:UB1!\",\n        d: \"Ultra T-Bond\",\n      },\n      {\n        s: \"EUREX:FGBL1!\",\n        d: \"Euro Bund\",\n      },\n      {\n        s: \"EUREX:FBTP1!\",\n        d: \"Euro BTP\",\n      },\n      {\n        s: \"EUREX:FGBM1!\",\n        d: \"Euro BOBL\",\n      },\n    ],\n    originalTitle: \"Bonds\",\n  },\n  {\n    title: \"Forex\",\n    symbols: [\n      {\n        s: \"FX:EURUSD\",\n      },\n      {\n        s: \"FX:GBPUSD\",\n      },\n      {\n        s: \"FX:USDJPY\",\n      },\n      {\n        s: \"FX:USDCHF\",\n      },\n      {\n        s: \"FX:AUDUSD\",\n      },\n      {\n        s: \"FX:USDCAD\",\n      },\n    ],\n    originalTitle: \"Forex\",\n  },\n];\n\nconst MarketOverview: React.FC<MarketOverviewProps> = ({\n  colorTheme = \"light\",\n  dateRange = \"12M\",\n  showChart = true,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  isTransparent = false,\n  showSymbolLogo = true,\n  showFloatingTooltip = false,\n  width = 400,\n  height = 660,\n  autosize = false,\n  plotLineColorGrowing = \"rgba(33, 150, 243, 1)\",\n  plotLineColorFalling = \"rgba(33, 150, 243, 1)\",\n  gridLineColor = \"rgba(240, 243, 250, 1)\",\n  scaleFontColor = \"rgba(120, 123, 134, 1)\",\n  belowLineFillColorGrowing = \"rgba(33, 150, 243, 0.12)\",\n  belowLineFillColorFalling = \"rgba(33, 150, 243, 0.12)\",\n  belowLineFillColorGrowingBottom = \"rgba(41, 98, 255, 0)\",\n  belowLineFillColorFallingBottom = \"rgba(41, 98, 255, 0)\",\n  symbolActiveColor = \"rgba(33, 150, 243, 0.12)\",\n  tabs = defaultTabs,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        colorTheme,\n        dateRange,\n        showChart,\n        locale,\n        largeChartUrl,\n        isTransparent,\n        showSymbolLogo,\n        showFloatingTooltip,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        ...(showChart && {\n          plotLineColorGrowing,\n          plotLineColorFalling,\n          gridLineColor,\n          scaleFontColor,\n          belowLineFillColorGrowing,\n          belowLineFillColorFalling,\n          belowLineFillColorGrowingBottom,\n          belowLineFillColorFallingBottom,\n          symbolActiveColor,\n        }),\n        tabs,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js\"\n      copyrightProps={{\n        copyrightStyles,\n        spanText: `Financial Markets`,\n        href: \"https://www.tradingview.com/markets/\",\n      }}\n    />\n  );\n};\n\nexport default memo(MarketOverview);\n","import React, { memo } from \"react\";\nimport { ColorTheme, DateRange, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type MiniChartProps = {\n  symbol?: string;\n  width?: number | string;\n  height?: number | string;\n  locale?: Locales;\n  dateRange?: DateRange;\n  colorTheme?: ColorTheme;\n  trendLineColor?: string;\n  underLineColor?: string;\n  underLineBottomColor?: string;\n  isTransparent?: boolean;\n  autosize?: boolean;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst MiniChart: React.FC<MiniChartProps> = ({\n  symbol = \"FX:EURUSD\",\n  width = 350,\n  height = 220,\n  locale = \"en\",\n  dateRange = \"12M\",\n  colorTheme = \"light\",\n  trendLineColor = \"rgba(41, 98, 255, 1)\",\n  underLineColor = \"rgba(41, 98, 255, 0.3)\",\n  underLineBottomColor = \"rgba(41, 98, 255, 0)\",\n  isTransparent = false,\n  autosize = false,\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        symbol,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        locale,\n        dateRange,\n        colorTheme,\n        trendLineColor,\n        underLineColor,\n        underLineBottomColor,\n        isTransparent,\n        autosize,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-mini-symbol-overview.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol}/`,\n        spanText: `${symbol} Rates`,\n      }}\n    />\n  );\n};\n\nexport default memo(MiniChart);\n","import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\ntype DefaultColumnForexOrCrypto =\n  //forex, crypto\n  \"overview\" | \"performance\" | \"oscillators\" | \"moving_averages\";\n\ntype DefaultColumnCountries =\n  //US, australia, canada, egypt, germany, india, israel, italy, luxembourgh, poland, korea, sweden, turkey, uk\n  | \"overview\"\n  | \"performance\"\n  | \"valuation\"\n  | \"dividends\"\n  | \"margins\"\n  | \"income_statement\"\n  | \"balance_sheet\"\n  | \"oscillators\"\n  | \"moving_averages\";\n\ntype DefaultScreenForexOrCrypto =\n  //forex, crypto\n  | \"general\"\n  | \"top_gainers\"\n  | \"top_losers\"\n  | \"ath\"\n  | \"atl\"\n  | \"above_52wk_high\"\n  | \"below_52wk_low\"\n  | \"monthly_high\"\n  | \"monthly_low\"\n  | \"most_volatile\"\n  | \"overbought\"\n  | \"oversold\"\n  | \"outperforming_SMA50\"\n  | \"underperforming_SMA50\";\n\ntype DefaultScreenCountries =\n  //US, australia, canada, egypt, germany, india, israel, italy, luxembourgh, poland, korea, sweden, turkey, uk\n  | \"most_capitalized\"\n  | \"volume_leaders\"\n  | \"top_gainers\"\n  | \"top_losers\"\n  | \"ath\"\n  | \"atl\"\n  | \"high_dividend\"\n  | \"above_52wk_high\"\n  | \"below_52wk_low\"\n  | \"monthly_high\"\n  | \"monthly_low\"\n  | \"most_volatile\"\n  | \"unusual_volume\"\n  | \"overbought\"\n  | \"oversold\"\n  | \"outperforming_SMA50\"\n  | \"underperforming_SMA50\"\n  | \"earnings_this_week\";\n\ntype MarketCountries =\n  | \"america\"\n  | \"australia\"\n  | \"canada\"\n  | \"egypt\"\n  | \"germany\"\n  | \"india\"\n  | \"israel\"\n  | \"italy\"\n  | \"luxembourg\"\n  | \"philippines\"\n  | \"poland\"\n  | \"korea\"\n  | \"sweden\"\n  | \"taiwan\"\n  | \"turkey\"\n  | \"uk\"\n  | \"vietnam\";\n\ntype MarketForexOrCrypto = \"forex\" | \"crypto\";\n\ntype ConditionalScreenerProps =\n  | {\n      market?: MarketForexOrCrypto;\n      defaultColumn?: DefaultColumnForexOrCrypto;\n      defaultScreen?: DefaultScreenForexOrCrypto;\n    }\n  | {\n      market?: MarketCountries;\n      defaultColumn?: DefaultColumnCountries;\n      defaultScreen?: DefaultScreenCountries;\n    };\n\nexport type ScreenerProps = {\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  showToolbar?: boolean;\n  colorTheme?: ColorTheme;\n  locale?: Locales;\n  isTransparent?: boolean;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n} & ConditionalScreenerProps;\n\nconst Screener: React.FC<ScreenerProps> = ({\n  width = 1100,\n  height = 512,\n  autosize = false,\n  defaultColumn = \"overview\",\n  defaultScreen = \"general\",\n  market = \"forex\",\n  showToolbar = true,\n  colorTheme = \"light\",\n  locale = \"en\",\n  isTransparent = false,\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        defaultColumn,\n        defaultScreen,\n        market,\n        showToolbar,\n        colorTheme,\n        locale,\n        isTransparent,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-screener.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/forex-screener/`,\n        spanText: `Forex Screener`,\n      }}\n    />\n  );\n};\n\nexport default memo(Screener);\n","import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type SingleTickerProps = {\n  symbol?: string;\n  width?: string | number;\n  autosize?: boolean;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst SingleTicker: React.FC<SingleTickerProps> = ({\n  symbol = \"FX:EURUSD\",\n  width = 350,\n  autosize = false,\n  colorTheme = \"light\",\n  isTransparent = false,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        symbol,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        colorTheme,\n        isTransparent,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-single-quote.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol}/`,\n        spanText: `${symbol} Rates`,\n      }}\n    />\n  );\n};\n\nexport default memo(SingleTicker);\n","import React, { memo } from \"react\";\nimport { ColorTheme, DateRange, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type StockMarketProps = {\n  colorTheme?: ColorTheme;\n  dateRange?: DateRange;\n  exchange?:\n    | \"US\"\n    | \"NASDAQ\"\n    | \"NYSE\"\n    | \"AMEX\"\n    | \"OTC\"\n    | \"ASX\"\n    | \"CSE\"\n    | \"NEO\"\n    | \"TSX\"\n    | \"TSXV\"\n    | \"EGX\"\n    | \"BER\"\n    | \"DUS\"\n    | \"FWB\"\n    | \"HAM\"\n    | \"HAN\"\n    | \"MUN\"\n    | \"SWB\"\n    | \"XETR\"\n    | \"BSE\"\n    | \"NSE\"\n    | \"TASE\"\n    | \"MIL\"\n    | \"LUXSE\"\n    | \"PSE\"\n    | \"NEWCONNECT\"\n    | \"KRX\"\n    | \"NGM\"\n    | \"TPEX\"\n    | \"BIST\"\n    | \"LSE\"\n    | \"LSIN\"\n    | \"HNX\";\n  showChart?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n  isTransparent?: boolean;\n  showSymbolLogo?: boolean;\n  showFloatingTooltip?: boolean;\n  width?: string | number;\n  height?: string | number;\n  autosize?: boolean;\n  plotLineColorGrowing?: string;\n  plotLineColorFalling?: string;\n  gridLineColor?: string;\n  scaleFontColor?: string;\n  belowLineFillColorGrowing?: string;\n  belowLineFillColorFalling?: string;\n  belowLineFillColorGrowingBottom?: string;\n  belowLineFillColorFallingBottom?: string;\n  symbolActiveColor?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst StockMarket: React.FC<StockMarketProps> = ({\n  colorTheme = \"light\",\n  dateRange = \"12M\",\n  exchange = \"US\",\n  showChart = true,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  isTransparent = false,\n  showSymbolLogo = true,\n  showFloatingTooltip = false,\n  width = 400,\n  height = 600,\n  autosize = false,\n  plotLineColorGrowing = \"rgba(33, 150, 243, 1)\",\n  plotLineColorFalling = \"rgba(33, 150, 243, 1)\",\n  gridLineColor = \"rgba(240, 243, 250, 1)\",\n  scaleFontColor = \"rgba(120, 123, 134, 1)\",\n  belowLineFillColorGrowing = \"rgba(33, 150, 243, 0.12)\",\n  belowLineFillColorFalling = \"rgba(33, 150, 243, 0.12)\",\n  belowLineFillColorGrowingBottom = \"rgba(41, 98, 255, 0)\",\n  belowLineFillColorFallingBottom = \"rgba(41, 98, 255, 0)\",\n  symbolActiveColor = \"rgba(33, 150, 243, 0.12)\",\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        colorTheme,\n        dateRange,\n        exchange,\n        showChart,\n        locale,\n        largeChartUrl,\n        isTransparent,\n        showSymbolLogo,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        ...(showChart && {\n          plotLineColorGrowing,\n          plotLineColorFalling,\n          gridLineColor,\n          scaleFontColor,\n          belowLineFillColorGrowing,\n          belowLineFillColorFalling,\n          belowLineFillColorGrowingBottom,\n          belowLineFillColorFallingBottom,\n          symbolActiveColor,\n        }),\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-hotlists.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/markets/stocks-usa/`,\n        spanText: `Stock market Today`,\n      }}\n    />\n  );\n};\n\nexport default memo(StockMarket);\n","import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type SymbolInfoProps = {\n  symbol?: string;\n  width?: string | number;\n  autosize?: boolean;\n  locale?: Locales;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst SymbolInfo: React.FC<SymbolInfoProps> = ({\n  symbol = \"NASDAQ:AAPL\",\n  width = 1000,\n  autosize = false,\n  locale = \"en\",\n  colorTheme = \"light\",\n  isTransparent = false,\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        symbol,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        locale,\n        colorTheme,\n        isTransparent,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-symbol-info.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol}/`,\n        spanText: `${symbol} Profile`,\n      }}\n    />\n  );\n};\n\nexport default memo(SymbolInfo);\n","import React, { memo } from \"react\";\nimport {\n  ChartType,\n  ColorTheme,\n  CopyrightStyles,\n  DateFormat,\n  Locales,\n  ScaleMode,\n  ScalePosition,\n} from \"../index\";\nimport { createId } from \"../utils\";\nimport Widget from \"./Widget\";\n\nexport type SymbolOverviewProps = {\n  symbols?: string[][];\n  chartOnly?: boolean;\n  width?: string | number;\n  height?: string | number;\n  locale?: Locales;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  showFloatingTooltip?: boolean;\n  scalePosition?: ScalePosition;\n  scaleMode?: ScaleMode;\n  fontFamily?:\n    | \"Trebuchet MS, sans-serif\"\n    | \"Arial, sans-serif\"\n    | \"Times, Times New Roman, serif\"\n    | \"Andale Mono, monospace\"\n    | \"Courier New, monospace\"\n    | \"Comic Sans MS, Comic Sans, cursive\"\n    | \"Trattatello, fantasy\";\n  fontSize?:\n    | \"10\"\n    | \"11\"\n    | \"12\"\n    | \"13\"\n    | \"14\"\n    | \"16\"\n    | \"18\"\n    | \"20\"\n    | \"22\"\n    | \"24\"\n    | \"28\";\n  fontColor?: string;\n  noTimeScale?: boolean;\n  hideDateRanges?: boolean;\n  hideMarketStatus?: boolean;\n  valuesTracking?: \"0\" | \"1\" | \"2\" | \"3\";\n  lineWidth?: 1 | 2 | 3 | 4;\n  showVolume?: boolean;\n  volumeUpColor?: string;\n  volumeDownColor?: string;\n  dateFormat: DateFormat;\n  timeHoursFormat?: \"12-hours\" | \"24-hours\";\n\n  chartType?: ChartType;\n\n  //area & line\n  lineColor?: string;\n\n  //area\n  bottomColor?: string;\n  topColor?: string;\n\n  //bars & candles\n  upColor?: string;\n  downColor?: string;\n\n  //candles\n  borderUpColor?: string;\n  borderDownColor?: string;\n  wickUpColor?: string;\n  wickDownColor?: string;\n\n  //colors\n  backGroundColor?: string;\n  gridLineColor?: string;\n  widgetFontColor?: string;\n\n  autosize?: boolean;\n  container_id?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst defaultSymbols = [\n  [\"Apple\", \"AAPL\"],\n  [\"Google\", \"GOOGL\"],\n  [\"Microsoft\", \"MSFT\"],\n];\n\nconst SymbolOverview: React.FC<SymbolOverviewProps> = ({\n  symbols = defaultSymbols,\n  chartOnly = false,\n  width = 1000,\n  height = 400,\n  locale = \"en\",\n  colorTheme = \"light\",\n  fontColor = \"#787B86\",\n  fontSize = \"10\",\n  isTransparent = false,\n  showFloatingTooltip = true,\n  scalePosition = \"no\",\n  scaleMode = \"Normal\",\n  fontFamily = \"Trebuchet MS, sans-serif\",\n  noTimeScale = false,\n  valuesTracking = \"1\",\n  lineWidth = 3,\n  showVolume = false,\n  volumeUpColor = \"rgba(34, 171, 148, 0.5)\",\n  volumeDownColor = \"rgba(247, 82, 95, 0.5)\",\n  dateFormat = \"dd MMM 'yy\",\n  timeHoursFormat = \"24-hours\",\n  hideMarketStatus = false,\n  hideDateRanges = false,\n  chartType = \"area\",\n\n  //area\n  lineColor = \"#2962FF\",\n  bottomColor = \"rgba(41, 98, 255, 0)\",\n  topColor = \"rgba(41, 98, 255, 0.3)\",\n\n  //bars & candles\n  upColor = \"#26a69a\",\n  downColor = \"#ef5350\",\n\n  //candles\n  borderUpColor = \"#26a69a\",\n  borderDownColor = \"#ef5350\",\n  wickUpColor = \"#26a69a\",\n  wickDownColor = \"#ef5350\",\n\n  backGroundColor = \"rgba(19, 23, 34, 0)\",\n  gridLineColor = \"rgba(42, 46, 57, 0)\",\n  widgetFontColor = \"rgba(216, 216, 216, 1)\",\n\n  autosize = false,\n  container_id = `tradingview_${createId(5)}`,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        symbols,\n        chartOnly,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        locale,\n        colorTheme,\n        fontColor,\n        fontSize,\n        isTransparent,\n        showFloatingTooltip,\n        scalePosition,\n        scaleMode,\n        fontFamily,\n        noTimeScale,\n        hideDateRanges,\n        hideMarketStatus,\n        valuesTracking,\n        lineWidth,\n        showVolume,\n        ...(showVolume && { volumeUpColor, volumeDownColor }),\n        dateFormat,\n        timeHoursFormat,\n        chartType,\n        ...(chartType === \"line\" && { lineColor }),\n        ...(chartType === \"area\" && { lineColor, bottomColor, topColor }),\n        ...((chartType === \"bars\" || chartType === \"candlesticks\") && {\n          upColor,\n          downColor,\n        }),\n        ...(chartType === \"candlesticks\" && {\n          upColor,\n          downColor,\n          borderUpColor,\n          borderDownColor,\n          wickUpColor,\n          wickDownColor,\n        }),\n        backGroundColor,\n        widgetFontColor,\n        gridLineColor,\n        autosize,\n        container_id,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/tv.js\"\n      containerId={container_id}\n      type=\"MediumWidget\"\n      copyrightProps={{\n        href: `https://www.tradingview.com/symbols/${symbols[0][1]}`,\n        spanText: `${symbols[0][1]}`,\n      }}\n    />\n  );\n};\n\nexport default memo(SymbolOverview);\n","import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type TechnicalAnalysisProps = {\n  interval?:\n    | \"1m\"\n    | \"5m\"\n    | \"15m\"\n    | \"30m\"\n    | \"1h\"\n    | \"2h\"\n    | \"4h\"\n    | \"1D\"\n    | \"1W\"\n    | \"1M\";\n  width?: number | string;\n  height?: number | string;\n  autosize?: boolean;\n  isTransparent?: boolean;\n  symbol?: string;\n  showIntervalTabs?: boolean;\n  locale?: Locales;\n  colorTheme?: ColorTheme;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nconst TechnicalAnalysis: React.FC<TechnicalAnalysisProps> = ({\n  interval = \"1m\",\n  width = 425,\n  height = 450,\n  autosize = false,\n  isTransparent = false,\n  symbol = \"NASDAQ:AAPL\",\n  showIntervalTabs = true,\n  locale = \"en\",\n  colorTheme = \"light\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        interval,\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        isTransparent,\n        symbol,\n        showIntervalTabs,\n        locale,\n        colorTheme,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-technical-analysis.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/symbols/${symbol.replace(\n          \":\",\n          \"-\"\n        )}/technicals/`,\n        spanText: `Technical Analysis for ${symbol}`,\n      }}\n    />\n  );\n};\n\nexport default memo(TechnicalAnalysis);\n","import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"../index\";\nimport Widget from \"./Widget\";\n\nexport type TickerProps = {\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  showSymbolLogo?: boolean;\n  locale?: Locales;\n  symbols?: TickerSymbols;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n};\n\nexport type TickerSymbols = TickerSymbol[];\n\nexport type TickerSymbol = {\n  proName: string;\n  title: string;\n};\n\nconst defaultSymbols: TickerSymbols = [\n  {\n    proName: \"FOREXCOM:SPXUSD\",\n    title: \"S&P 500\",\n  },\n  {\n    proName: \"FOREXCOM:NSXUSD\",\n    title: \"Nasdaq 100\",\n  },\n  {\n    proName: \"FX_IDC:EURUSD\",\n    title: \"EUR/USD\",\n  },\n  {\n    proName: \"BITSTAMP:BTCUSD\",\n    title: \"BTC/USD\",\n  },\n  {\n    proName: \"BITSTAMP:ETHUSD\",\n    title: \"ETH/USD\",\n  },\n];\n\nconst Ticker: React.FC<TickerProps> = ({\n  colorTheme = \"light\",\n  isTransparent = false,\n  showSymbolLogo = true,\n  locale = \"en\",\n  symbols = defaultSymbols,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        colorTheme,\n        isTransparent,\n        showSymbolLogo,\n        locale,\n        symbols,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-tickers.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/`,\n        spanText: `Quotes`,\n      }}\n    />\n  );\n};\n\nexport default memo(Ticker);\n","import React, { memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, DisplayMode, Locales } from \"../index\";\n// import Copyright from \"./Copyright\";\nimport Widget from \"./Widget\";\n\nexport interface TickerTapeSymbol {\n  proName: string;\n  title: string;\n}\n\nexport interface TickerTapeProps {\n  symbols?: TickerTapeSymbol[];\n  showSymbolLogo?: boolean;\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  largeChartUrl?: string;\n  displayMode?: DisplayMode;\n  locale?: Locales;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n}\n\nconst defaultSymbols: TickerTapeSymbol[] = [\n  {\n    proName: \"FOREXCOM:SPXUSD\",\n    title: \"S&P 500\",\n  },\n  {\n    proName: \"FOREXCOM:NSXUSD\",\n    title: \"Nasdaq 100\",\n  },\n  {\n    proName: \"FX_IDC:EURUSD\",\n    title: \"EUR/USD\",\n  },\n  {\n    proName: \"BITSTAMP:BTCUSD\",\n    title: \"BTC/USD\",\n  },\n  {\n    proName: \"BITSTAMP:ETHUSD\",\n    title: \"ETH/USD\",\n  },\n];\n\nconst TickerTape: React.FC<TickerTapeProps> = ({\n  symbols = defaultSymbols,\n  showSymbolLogo = true,\n  colorTheme = \"light\",\n  isTransparent = false,\n  largeChartUrl = undefined,\n  displayMode = \"adaptive\",\n  locale = \"en\",\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        symbols,\n        showSymbolLogo,\n        colorTheme,\n        isTransparent,\n        largeChartUrl,\n        displayMode,\n        locale,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: \"https://www.tradingview.com/markets/\",\n        spanText: \"Markets\",\n      }}\n    />\n  );\n};\n\nexport default memo(TickerTape);\n","import React, { memo, useEffect, useState } from \"react\";\nimport {\n  ColorTheme,\n  CopyrightStyles,\n  DisplayMode,\n  Locales,\n  Market,\n} from \"../index\";\nimport Widget from \"./Widget\";\n\ntype ConditionalTimelineProps =\n  | {\n      feedMode?: \"market\";\n      market?: Market;\n      symbol?: never;\n    }\n  | {\n      feedMode?: \"symbol\";\n      symbol?: string;\n      market?: never;\n    }\n  | { feedMode?: \"all_symbols\"; market?: never; symbol?: never };\n\nexport type TimelineProps = {\n  colorTheme?: ColorTheme;\n  isTransparent?: boolean;\n  displayMode?: DisplayMode;\n  width?: number | string;\n  height?: number | string;\n  autosize?: boolean;\n  locale?: Locales;\n  largeChartUrl?: string;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n} & ConditionalTimelineProps;\n\nconst Timeline: React.FC<TimelineProps> = ({\n  feedMode = \"all_symbols\",\n  colorTheme = \"light\",\n  isTransparent = false,\n  displayMode = \"regular\",\n  width = 480,\n  height = 830,\n  autosize = false,\n  locale = \"en\",\n  largeChartUrl = undefined,\n  copyrightStyles,\n  symbol = \"BTCUSD\",\n  market = \"crypto\",\n  ...props\n}) => {\n  const [href, sethref] = useState(\"\");\n  const [spanText, setspanText] = useState(\"\");\n\n  useEffect(() => {\n    if (feedMode == \"all_symbols\") {\n      sethref(\"key_events\");\n      setspanText(\"Daily news roundup\");\n    } else if (feedMode == \"market\") {\n      switch (market) {\n        case \"crypto\":\n          sethref(\"markets/cryptocurrencies/key-events/\");\n          setspanText(\"Daily cryptocurrency news\");\n          break;\n        case \"forex\":\n          sethref(\"markets/currencies/key-events/\");\n          setspanText(\"Daily currency news\");\n          break;\n        case \"stock\":\n          sethref(\"markets/stocks-usa/key-events/\");\n          setspanText(\"Daily stock news\");\n          break;\n        case \"index\":\n          sethref(\"markets/indices/key-events/\");\n          setspanText(\"Daily index news\");\n          break;\n        case \"futures\":\n          sethref(\"markets/futures/key-events/\");\n          setspanText(\"Daily futures news\");\n          break;\n        case \"cfd\":\n          sethref(\"markets/bonds/key-events/\");\n          setspanText(\"Daily bonds news\");\n          break;\n      }\n    } else if (feedMode == \"symbol\") {\n      sethref(`symbols/${symbol}/history-timeline/`);\n      setspanText(`${symbol} History`);\n    }\n  }, [feedMode, symbol, market]);\n\n  return (\n    <Widget\n      scriptHTML={{\n        ...(!autosize ? { width } : { width: \"100%\" }),\n        ...(!autosize ? { height } : { height: \"100%\" }),\n        feedMode,\n        ...(feedMode == \"market\"\n          ? { market }\n          : feedMode == \"symbol\"\n          ? { symbol }\n          : {}),\n        colorTheme,\n        isTransparent,\n        displayMode,\n        locale,\n        largeChartUrl,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-timeline.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/${href}`,\n        spanText,\n      }}\n    />\n  );\n};\n\nexport default memo(Timeline);\n","import React, { FC, memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Exchanges, Locales } from \"..\";\nimport Widget from \"./Widget\";\n\ntype ConditionalStockHeatmapDataSetProps =\n  | {\n      hasTopBar?: true;\n      isSetDataSetEnabled?: boolean;\n    }\n  | {\n      hasTopBar?: false;\n      isSetDataSetEnabled?: never;\n    };\n\nexport type StockHeatmapProps = {\n  dataSource?: string;\n  exchanges?: Exchanges[];\n  grouping?: \"no_group\" | \"sector\";\n  blockSize?:\n    | \"market_cap_basic\"\n    | \"number_of_employees\"\n    | \"dividend_yield_recent\"\n    | \"price_earnings_ttm\"\n    | \"price_sales_current\"\n    | \"price_book_fq\"\n    | \"volume|60\"\n    | \"volume|240\"\n    | \"volume\"\n    | \"volume|1W\"\n    | \"volume|1M\"\n    | \"Value.Traded|60\"\n    | \"Value.Traded|240\"\n    | \"Value.Traded\"\n    | \"Value.Traded|1W\"\n    | \"Value.Traded|1M\";\n  blockColor?:\n    | \"change|60\"\n    | \"change|240\"\n    | \"change\"\n    | \"Perf.W\"\n    | \"Perf.1M\"\n    | \"Perf.3M\"\n    | \"Perf.6M\"\n    | \"Perf.YTD\"\n    | \"Perf.Y\"\n    | \"premarket_change\"\n    | \"postmarket_change\"\n    | \"relative_volume_10d_calc\"\n    | \"Volatility.D\"\n    | \"gap\";\n  locale?: Locales;\n  autoSize?: boolean;\n  height?: number | string;\n  width?: number | string;\n  symbolUrl?: string;\n  colorTheme?: ColorTheme;\n  isZoomEnabled?: boolean;\n  hasSymbolTooltip?: boolean;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n} & ConditionalStockHeatmapDataSetProps;\n\nconst StockHeatmap: FC<StockHeatmapProps> = ({\n  dataSource = \"SPX500\",\n  exchanges = [\"NYSE\"],\n  grouping = \"sector\",\n  blockSize = \"market_cap_basic\",\n  blockColor = \"change\",\n  locale = \"en\",\n  autoSize = false,\n  height = undefined,\n  width = undefined,\n  symbolUrl = \"\",\n  colorTheme = \"light\",\n  isZoomEnabled = true,\n  hasSymbolTooltip = true,\n  hasTopBar = true,\n  isSetDataSetEnabled = true,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        dataSource,\n        exchanges,\n        grouping,\n        blockSize,\n        blockColor,\n        locale,\n        autoSize,\n        ...(autoSize ? { width: \"100%\", height: \"100%\" } : { width, height }),\n        symbolUrl,\n        colorTheme,\n        isZoomEnabled,\n        hasSymbolTooltip,\n        hasTopBar,\n        isSetDataSetEnabled,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-stock-heatmap.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/?utm_source=www.tradingview.com&utm_medium=widget_new&utm_campaign=stock-heatmap`,\n        spanText: `Track all markets on TradingView`,\n      }}\n    />\n  );\n};\n\nexport default memo(StockHeatmap);\n","import React, { FC, memo } from \"react\";\nimport { ColorTheme, CopyrightStyles, Locales } from \"..\";\nimport Widget from \"./Widget\";\n\ntype ConditionalCryptoCoinsHeatmapDataSetProps =\n  | {\n      hasTopBar?: true;\n      isSetDataSetEnabled?: boolean;\n    }\n  | {\n      hasTopBar?: false;\n      isSetDataSetEnabled?: never;\n    };\n\nexport type CryptoCoinsHeatmapProps = {\n  dataSource?:\n    | \"Crypto\"\n    | \"CryptoWithoutBTC\"\n    | \"CryptoWithoutStable\"\n    | \"CryptoDeFi\";\n  blockSize?:\n    | \"market_cap_calc\"\n    | \"market_cap_diluted_calc\"\n    | \"24h_vol_cmc\"\n    | \"tvl\"\n    | \"24h_vol_to_market_cap\"\n    | \"market_cap_to_tvl\";\n  blockColor?:\n    | \"change|60\"\n    | \"change|240\"\n    | \"change\"\n    | \"Perf.W\"\n    | \"Perf.1M\"\n    | \"Perf.3M\"\n    | \"Perf.6M\"\n    | \"Perf.YTD\"\n    | \"Perf.Y\"\n    | \"24h_vol_change_cmc\"\n    | \"24h_vol_cmc\"\n    | \"Volatility.D\"\n    | \"gap\";\n  locale?: Locales;\n  autoSize?: boolean;\n  height?: number | string;\n  width?: number | string;\n  symbolUrl?: string;\n  colorTheme?: ColorTheme;\n  isZoomEnabled?: boolean;\n  hasSymbolTooltip?: boolean;\n\n  children?: never;\n\n  copyrightStyles?: CopyrightStyles;\n} & ConditionalCryptoCoinsHeatmapDataSetProps;\n\nconst CryptoCoinsHeatmap: FC<CryptoCoinsHeatmapProps> = ({\n  dataSource = \"Crypto\",\n  blockSize = \"market_cap_calc\",\n  blockColor = \"change\",\n  locale = \"en\",\n  autoSize = false,\n  height = undefined,\n  width = undefined,\n  symbolUrl = \"\",\n  colorTheme = \"light\",\n  isZoomEnabled = true,\n  hasSymbolTooltip = true,\n  hasTopBar = true,\n  isSetDataSetEnabled = true,\n  copyrightStyles,\n  ...props\n}) => {\n  return (\n    <Widget\n      scriptHTML={{\n        dataSource,\n        blockSize,\n        blockColor,\n        locale,\n        autoSize,\n        ...(autoSize ? { width: \"100%\", height: \"100%\" } : { width, height }),\n        symbolUrl,\n        colorTheme,\n        isZoomEnabled,\n        hasSymbolTooltip,\n        hasTopBar,\n        isSetDataSetEnabled,\n        ...props,\n      }}\n      scriptSRC=\"https://s3.tradingview.com/external-embedding/embed-widget-crypto-coins-heatmap.js\"\n      copyrightProps={{\n        copyrightStyles,\n        href: `https://www.tradingview.com/?utm_source=www.tradingview.com&utm_medium=widget_new&utm_campaign=stock-heatmap`,\n        spanText: `Track all markets on TradingView`,\n      }}\n    />\n  );\n};\n\nexport default memo(CryptoCoinsHeatmap);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}