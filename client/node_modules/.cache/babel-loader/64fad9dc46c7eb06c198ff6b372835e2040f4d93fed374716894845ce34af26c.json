{"ast":null,"code":"import { isValidElement as t, useMemo as n, createElement as i } from \"react\";\nimport o from \"lodash/filter\";\nimport e from \"lodash/isNumber\";\nimport a from \"lodash/omit\";\nimport { absoluteAngleDegrees as r, radiansToDegrees as s, positionFromAngle as l, degreesToRadians as u, useTheme as h, useMotionConfig as d, useAnimatedPath as c } from \"@nivo/core\";\nimport { useSpring as f, animated as y } from \"@react-spring/web\";\nimport { jsxs as x, Fragment as m, jsx as p } from \"react/jsx-runtime\";\nfunction g() {\n  return g = Object.assign ? Object.assign.bind() : function (t) {\n    for (var n = 1; n < arguments.length; n++) {\n      var i = arguments[n];\n      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (t[o] = i[o]);\n    }\n    return t;\n  }, g.apply(this, arguments);\n}\nvar k = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: !0\n  },\n  W = function (n) {\n    var i = typeof n;\n    return t(n) || \"string\" === i || \"function\" === i || \"object\" === i;\n  },\n  v = function (t) {\n    var n = typeof t;\n    return \"string\" === n || \"function\" === n;\n  },\n  b = function (t) {\n    return \"circle\" === t.type;\n  },\n  w = function (t) {\n    return \"dot\" === t.type;\n  },\n  z = function (t) {\n    return \"rect\" === t.type;\n  },\n  P = function (t) {\n    var n = t.data,\n      i = t.annotations,\n      e = t.getPosition,\n      r = t.getDimensions;\n    return i.reduce(function (t, i) {\n      var s = i.offset || 0;\n      return [].concat(t, o(n, i.match).map(function (t) {\n        var n = e(t),\n          o = r(t);\n        return (b(i) || z(i)) && (o.size = o.size + 2 * s, o.width = o.width + 2 * s, o.height = o.height + 2 * s), g({}, a(i, [\"match\", \"offset\"]), n, o, {\n          size: i.size || o.size,\n          datum: t\n        });\n      }));\n    }, []);\n  },\n  C = function (t, n, i, o) {\n    var e = Math.atan2(o - n, i - t);\n    return r(s(e));\n  },\n  O = function (t) {\n    var n,\n      i,\n      o = t.x,\n      a = t.y,\n      r = t.noteX,\n      s = t.noteY,\n      h = t.noteWidth,\n      d = void 0 === h ? k.noteWidth : h,\n      c = t.noteTextOffset,\n      f = void 0 === c ? k.noteTextOffset : c;\n    if (e(r)) n = o + r;else {\n      if (void 0 === r.abs) throw new Error(\"noteX should be either a number or an object containing an 'abs' property\");\n      n = r.abs;\n    }\n    if (e(s)) i = a + s;else {\n      if (void 0 === s.abs) throw new Error(\"noteY should be either a number or an object containing an 'abs' property\");\n      i = s.abs;\n    }\n    var y = o,\n      x = a,\n      m = C(o, a, n, i);\n    if (b(t)) {\n      var p = l(u(m), t.size / 2);\n      y += p.x, x += p.y;\n    }\n    if (z(t)) {\n      var g = Math.round((m + 90) / 45) % 8;\n      0 === g && (x -= t.height / 2), 1 === g && (y += t.width / 2, x -= t.height / 2), 2 === g && (y += t.width / 2), 3 === g && (y += t.width / 2, x += t.height / 2), 4 === g && (x += t.height / 2), 5 === g && (y -= t.width / 2, x += t.height / 2), 6 === g && (y -= t.width / 2), 7 === g && (y -= t.width / 2, x -= t.height / 2);\n    }\n    var W = n,\n      v = n;\n    return (m + 90) % 360 > 180 ? (W -= d, v -= d) : v += d, {\n      points: [[y, x], [n, i], [v, i]],\n      text: [W, i - f],\n      angle: m + 90\n    };\n  },\n  S = function (t) {\n    var i = t.data,\n      o = t.annotations,\n      e = t.getPosition,\n      a = t.getDimensions;\n    return n(function () {\n      return P({\n        data: i,\n        annotations: o,\n        getPosition: e,\n        getDimensions: a\n      });\n    }, [i, o, e, a]);\n  },\n  j = function (t) {\n    var i = t.annotations;\n    return n(function () {\n      return i.map(function (t) {\n        return g({}, t, {\n          computed: O(g({}, t))\n        });\n      });\n    }, [i]);\n  },\n  M = function (t) {\n    return n(function () {\n      return O(t);\n    }, [t]);\n  },\n  T = function (t) {\n    var n = t.datum,\n      o = t.x,\n      e = t.y,\n      r = t.note,\n      s = h(),\n      l = d(),\n      u = l.animate,\n      c = l.config,\n      k = f({\n        x: o,\n        y: e,\n        config: c,\n        immediate: !u\n      });\n    return \"function\" == typeof r ? i(r, {\n      x: o,\n      y: e,\n      datum: n\n    }) : x(m, {\n      children: [s.annotations.text.outlineWidth > 0 && p(y.text, {\n        x: k.x,\n        y: k.y,\n        style: g({}, s.annotations.text, {\n          strokeLinejoin: \"round\",\n          strokeWidth: 2 * s.annotations.text.outlineWidth,\n          stroke: s.annotations.text.outlineColor\n        }),\n        children: r\n      }), p(y.text, {\n        x: k.x,\n        y: k.y,\n        style: a(s.annotations.text, [\"outlineWidth\", \"outlineColor\"]),\n        children: r\n      })]\n    });\n  },\n  E = function (t) {\n    var i = t.points,\n      o = t.isOutline,\n      e = void 0 !== o && o,\n      a = h(),\n      r = n(function () {\n        var t = i[0];\n        return i.slice(1).reduce(function (t, n) {\n          return t + \" L\" + n[0] + \",\" + n[1];\n        }, \"M\" + t[0] + \",\" + t[1]);\n      }, [i]),\n      s = c(r);\n    if (e && a.annotations.link.outlineWidth <= 0) return null;\n    var l = g({}, a.annotations.link);\n    return e && (l.strokeLinecap = \"square\", l.strokeWidth = a.annotations.link.strokeWidth + 2 * a.annotations.link.outlineWidth, l.stroke = a.annotations.link.outlineColor, l.opacity = a.annotations.link.outlineOpacity), p(y.path, {\n      fill: \"none\",\n      d: s,\n      style: l\n    });\n  },\n  I = function (t) {\n    var n = t.x,\n      i = t.y,\n      o = t.size,\n      e = h(),\n      a = d(),\n      r = a.animate,\n      s = a.config,\n      l = f({\n        x: n,\n        y: i,\n        radius: o / 2,\n        config: s,\n        immediate: !r\n      });\n    return x(m, {\n      children: [e.annotations.outline.outlineWidth > 0 && p(y.circle, {\n        cx: l.x,\n        cy: l.y,\n        r: l.radius,\n        style: g({}, e.annotations.outline, {\n          fill: \"none\",\n          strokeWidth: e.annotations.outline.strokeWidth + 2 * e.annotations.outline.outlineWidth,\n          stroke: e.annotations.outline.outlineColor,\n          opacity: e.annotations.outline.outlineOpacity\n        })\n      }), p(y.circle, {\n        cx: l.x,\n        cy: l.y,\n        r: l.radius,\n        style: e.annotations.outline\n      })]\n    });\n  },\n  D = function (t) {\n    var n = t.x,\n      i = t.y,\n      o = t.size,\n      e = void 0 === o ? k.dotSize : o,\n      a = h(),\n      r = d(),\n      s = r.animate,\n      l = r.config,\n      u = f({\n        x: n,\n        y: i,\n        radius: e / 2,\n        config: l,\n        immediate: !s\n      });\n    return x(m, {\n      children: [a.annotations.outline.outlineWidth > 0 && p(y.circle, {\n        cx: u.x,\n        cy: u.y,\n        r: u.radius,\n        style: g({}, a.annotations.outline, {\n          fill: \"none\",\n          strokeWidth: 2 * a.annotations.outline.outlineWidth,\n          stroke: a.annotations.outline.outlineColor,\n          opacity: a.annotations.outline.outlineOpacity\n        })\n      }), p(y.circle, {\n        cx: u.x,\n        cy: u.y,\n        r: u.radius,\n        style: a.annotations.symbol\n      })]\n    });\n  },\n  L = function (t) {\n    var n = t.x,\n      i = t.y,\n      o = t.width,\n      e = t.height,\n      a = t.borderRadius,\n      r = void 0 === a ? 6 : a,\n      s = h(),\n      l = d(),\n      u = l.animate,\n      c = l.config,\n      k = f({\n        x: n - o / 2,\n        y: i - e / 2,\n        width: o,\n        height: e,\n        config: c,\n        immediate: !u\n      });\n    return x(m, {\n      children: [s.annotations.outline.outlineWidth > 0 && p(y.rect, {\n        x: k.x,\n        y: k.y,\n        rx: r,\n        ry: r,\n        width: k.width,\n        height: k.height,\n        style: g({}, s.annotations.outline, {\n          fill: \"none\",\n          strokeWidth: s.annotations.outline.strokeWidth + 2 * s.annotations.outline.outlineWidth,\n          stroke: s.annotations.outline.outlineColor,\n          opacity: s.annotations.outline.outlineOpacity\n        })\n      }), p(y.rect, {\n        x: k.x,\n        y: k.y,\n        rx: r,\n        ry: r,\n        width: k.width,\n        height: k.height,\n        style: s.annotations.outline\n      })]\n    });\n  },\n  R = function (t) {\n    var n = t.datum,\n      i = t.x,\n      o = t.y,\n      e = t.note,\n      a = M(t);\n    if (!W(e)) throw new Error(\"note should be a valid react element\");\n    return x(m, {\n      children: [p(E, {\n        points: a.points,\n        isOutline: !0\n      }), b(t) && p(I, {\n        x: i,\n        y: o,\n        size: t.size\n      }), w(t) && p(D, {\n        x: i,\n        y: o,\n        size: t.size\n      }), z(t) && p(L, {\n        x: i,\n        y: o,\n        width: t.width,\n        height: t.height,\n        borderRadius: t.borderRadius\n      }), p(E, {\n        points: a.points\n      }), p(T, {\n        datum: n,\n        x: a.text[0],\n        y: a.text[1],\n        note: e\n      })]\n    });\n  },\n  q = function (t, n) {\n    n.forEach(function (n, i) {\n      var o = n[0],\n        e = n[1];\n      0 === i ? t.moveTo(o, e) : t.lineTo(o, e);\n    });\n  },\n  J = function (t, n) {\n    var i = n.annotations,\n      o = n.theme;\n    0 !== i.length && (t.save(), i.forEach(function (n) {\n      if (!v(n.note)) throw new Error(\"note is invalid for canvas implementation\");\n      o.annotations.link.outlineWidth > 0 && (t.lineCap = \"square\", t.strokeStyle = o.annotations.link.outlineColor, t.lineWidth = o.annotations.link.strokeWidth + 2 * o.annotations.link.outlineWidth, t.beginPath(), q(t, n.computed.points), t.stroke(), t.lineCap = \"butt\"), b(n) && o.annotations.outline.outlineWidth > 0 && (t.strokeStyle = o.annotations.outline.outlineColor, t.lineWidth = o.annotations.outline.strokeWidth + 2 * o.annotations.outline.outlineWidth, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.stroke()), w(n) && o.annotations.symbol.outlineWidth > 0 && (t.strokeStyle = o.annotations.symbol.outlineColor, t.lineWidth = 2 * o.annotations.symbol.outlineWidth, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.stroke()), z(n) && o.annotations.outline.outlineWidth > 0 && (t.strokeStyle = o.annotations.outline.outlineColor, t.lineWidth = o.annotations.outline.strokeWidth + 2 * o.annotations.outline.outlineWidth, t.beginPath(), t.rect(n.x - n.width / 2, n.y - n.height / 2, n.width, n.height), t.stroke()), t.strokeStyle = o.annotations.link.stroke, t.lineWidth = o.annotations.link.strokeWidth, t.beginPath(), q(t, n.computed.points), t.stroke(), b(n) && (t.strokeStyle = o.annotations.outline.stroke, t.lineWidth = o.annotations.outline.strokeWidth, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.stroke()), w(n) && (t.fillStyle = o.annotations.symbol.fill, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.fill()), z(n) && (t.strokeStyle = o.annotations.outline.stroke, t.lineWidth = o.annotations.outline.strokeWidth, t.beginPath(), t.rect(n.x - n.width / 2, n.y - n.height / 2, n.width, n.height), t.stroke()), \"function\" == typeof n.note ? n.note(t, {\n        datum: n.datum,\n        x: n.computed.text[0],\n        y: n.computed.text[1],\n        theme: o\n      }) : (t.font = o.annotations.text.fontSize + \"px \" + o.annotations.text.fontFamily, t.textAlign = \"left\", t.textBaseline = \"alphabetic\", t.fillStyle = o.annotations.text.fill, t.strokeStyle = o.annotations.text.outlineColor, t.lineWidth = 2 * o.annotations.text.outlineWidth, o.annotations.text.outlineWidth > 0 && (t.lineJoin = \"round\", t.strokeText(n.note, n.computed.text[0], n.computed.text[1]), t.lineJoin = \"miter\"), t.fillText(n.note, n.computed.text[0], n.computed.text[1]));\n    }), t.restore());\n  };\nexport { R as Annotation, P as bindAnnotations, O as computeAnnotation, k as defaultProps, C as getLinkAngle, v as isCanvasNote, b as isCircleAnnotation, w as isDotAnnotation, z as isRectAnnotation, W as isSvgNote, J as renderAnnotationsToCanvas, S as useAnnotations, M as useComputedAnnotation, j as useComputedAnnotations };","map":{"version":3,"names":["k","dotSize","noteWidth","noteTextOffset","animate","W","isSvgNote","n","i","t","v","isCanvasNote","b","isCircleAnnotation","type","w","isDotAnnotation","z","isRectAnnotation","P","bindAnnotations","data","annotations","e","getPosition","r","getDimensions","reduce","s","offset","concat","o","match","map","size","width","height","g","a","datum","C","getLinkAngle","Math","atan2","O","computeAnnotation","x","y","noteX","noteY","h","d","c","f","abs","Error","m","p","l","u","round","points","text","angle","S","useAnnotations","j","useComputedAnnotations","computed","M","useComputedAnnotation","T","AnnotationNote","note","config","immediate","children","outlineWidth","style","strokeLinejoin","strokeWidth","stroke","outlineColor","E","AnnotationLink","isOutline","slice","link","strokeLinecap","opacity","outlineOpacity","path","fill","I","CircleAnnotationOutline","radius","outline","circle","cx","cy","D","DotAnnotationOutline","symbol","L","RectAnnotationOutline","borderRadius","rect","rx","ry","R","Annotation","q","drawPoints","forEach","moveTo","lineTo","J","renderAnnotationsToCanvas","theme","length","save","lineCap","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","font","fontSize","fontFamily","textAlign","textBaseline","lineJoin","strokeText","fillText","restore","defaultProps"],"sources":["C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\annotations\\src\\props.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\annotations\\src\\utils.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\annotations\\src\\compute.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\annotations\\src\\hooks.ts","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\annotations\\src\\AnnotationNote.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\annotations\\src\\AnnotationLink.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\annotations\\src\\CircleAnnotationOutline.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\annotations\\src\\DotAnnotationOutline.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\annotations\\src\\RectAnnotationOutline.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\annotations\\src\\Annotation.tsx","C:\\Users\\Caio\\Documents\\GeauxFrontend\\wsb-analytics\\client\\node_modules\\@nivo\\annotations\\src\\canvas.ts"],"sourcesContent":["export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import filter from 'lodash/filter'\nimport isNumber from 'lodash/isNumber'\nimport omit from 'lodash/omit'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: readonly Datum[]\n    annotations: readonly AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: readonly Datum[]\n    annotations: readonly AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: readonly BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAO,IAAMA,CAAA,GAAe;IACxBC,OAAA,EAAS;IACTC,SAAA,EAAW;IACXC,cAAA,EAAgB;IAChBC,OAAA,GAAS;EAAA;ECOAC,CAAA,GAAY,SAAAC,CAAQC,CAAA;IAC7B,IAAMC,CAAA,UAAkBD,CAAA;IAExB,OACIE,CAAA,CAAeF,CAAA,KACF,aAAbC,CAAA,IACa,eAAbA,CAAA,IACa,aAAbA,CAER;EAAA;EAEaE,CAAA,GAAe,SAAAC,CAAQF,CAAA;IAChC,IAAMF,CAAA,UAAkBE,CAAA;IAExB,OAAoB,aAAbF,CAAA,IAAsC,eAAbA,CACpC;EAAA;EAEaK,CAAA,GAAqB,SAAAC,CAC9BJ,CAAA;IAAqC,OACmC,aAAxBA,CAAA,CAAeK,IAAiB;EAAA;EAEvEC,CAAA,GAAkB,SAAAC,CAC3BP,CAAA;IAAqC,OACgC,UAAxBA,CAAA,CAAeK,IAAc;EAAA;EAEjEG,CAAA,GAAmB,SAAAC,CAC5BT,CAAA;IAAqC,OACiC,WAAxBA,CAAA,CAAeK,IAAe;EAAA;ECnBnEK,CAAA,GAAkB,SAAAC,CAAHX,CAAA;IAAA,IAMxBF,CAAA,GAAIE,CAAA,CAAJY,IAAA;MACAb,CAAA,GAAWC,CAAA,CAAXa,WAAA;MACAC,CAAA,GAAWd,CAAA,CAAXe,WAAA;MACAC,CAAA,GAAahB,CAAA,CAAbiB,aAAA;IAAa,OAOblB,CAAA,CAAYmB,MAAA,CAAO,UAAClB,CAAA,EAA+BD,CAAA;MAC/C,IAAMoB,CAAA,GAASpB,CAAA,CAAWqB,MAAA,IAAU;MAEpC,UAAAC,MAAA,CACOrB,CAAA,EACAsB,CAAA,CAAcxB,CAAA,EAAMC,CAAA,CAAWwB,KAAA,EAAOC,GAAA,CAAI,UAAAxB,CAAA;QACzC,IAAMF,CAAA,GAAWgB,CAAA,CAAYd,CAAA;UACvBsB,CAAA,GAAaN,CAAA,CAAchB,CAAA;QAyBjC,QAvBIG,CAAA,CAAmBJ,CAAA,KAAeS,CAAA,CAAiBT,CAAA,OACnDuB,CAAA,CAAWG,IAAA,GAAOH,CAAA,CAAWG,IAAA,GAAgB,IAATN,CAAA,EACpCG,CAAA,CAAWI,KAAA,GAAQJ,CAAA,CAAWI,KAAA,GAAiB,IAATP,CAAA,EACtCG,CAAA,CAAWK,MAAA,GAASL,CAAA,CAAWK,MAAA,GAAkB,IAATR,CAAA,GAoB5CS,CAAA,KACOC,CAAA,CAAK9B,CAAA,EAAY,CAAC,SAAS,YAC3BD,CAAA,EACAwB,CAAA,EAAU;UACbG,IAAA,EAAM1B,CAAA,CAAW0B,IAAA,IAAQH,CAAA,CAAWG,IAAA;UACpCK,KAAA,EAAA9B;QAAA,EAEP;MAAA,GAIR;IAAA,GAAE,GAAG;EAAA;EAEG+B,CAAA,GAAe,SAAAC,CACxBhC,CAAA,EACAF,CAAA,EACAC,CAAA,EACAuB,CAAA;IAEA,IAAMR,CAAA,GAAQmB,IAAA,CAAKC,KAAA,CAAMZ,CAAA,GAAUxB,CAAA,EAASC,CAAA,GAAUC,CAAA;IAEtD,OAAOgB,CAAA,CAAqBG,CAAA,CAAiBL,CAAA,EACjD;EAAA;EAEaqB,CAAA,GAAoB,SAAAC,CAC7BpC,CAAA;IAEA,IASIF,CAAA;MACAC,CAAA;MATAuB,CAAA,GAMAtB,CAAA,CANAqC,CAAA;MACAR,CAAA,GAKA7B,CAAA,CALAsC,CAAA;MACAtB,CAAA,GAIAhB,CAAA,CAJAuC,KAAA;MACApB,CAAA,GAGAnB,CAAA,CAHAwC,KAAA;MAAKC,CAAA,GAGLzC,CAAA,CAFAP,SAAA;MAAAiD,CAAA,QAAS,MAAAD,CAAA,GAAGlD,CAAA,CAAaE,SAAA,GAASgD,CAAA;MAAAE,CAAA,GAElC3C,CAAA,CADAN,cAAA;MAAAkD,CAAA,QAAc,MAAAD,CAAA,GAAGpD,CAAA,CAAaG,cAAA,GAAciD,CAAA;IAMhD,IAAI7B,CAAA,CAASE,CAAA,GACTlB,CAAA,GAAgBwB,CAAA,GAAIN,CAAA,MACjB;MAAA,SAAkB,MAAdA,CAAA,CAAM6B,GAAA,EAGb,MAAM,IAAIC,KAAA,CAAK;MAFfhD,CAAA,GAAgBkB,CAAA,CAAM6B,GAG1B;IAAA;IAEA,IAAI/B,CAAA,CAASK,CAAA,GACTpB,CAAA,GAAgB8B,CAAA,GAAIV,CAAA,MACjB;MAAA,SAAkB,MAAdA,CAAA,CAAM0B,GAAA,EAGb,MAAM,IAAIC,KAAA,CAAK;MAFf/C,CAAA,GAAgBoB,CAAA,CAAM0B,GAG1B;IAAA;IAEA,IAAIP,CAAA,GAAYhB,CAAA;MACZe,CAAA,GAAYR,CAAA;MAEVkB,CAAA,GAAQhB,CAAA,CAAaT,CAAA,EAAGO,CAAA,EAAG/B,CAAA,EAAeC,CAAA;IAEhD,IAAII,CAAA,CAA0BH,CAAA,GAAa;MACvC,IAAMgD,CAAA,GAAWC,CAAA,CAAkBC,CAAA,CAAiBH,CAAA,GAAQ/C,CAAA,CAAWyB,IAAA,GAAO;MAC9Ea,CAAA,IAAaU,CAAA,CAASX,CAAA,EACtBA,CAAA,IAAaW,CAAA,CAASV,CAC1B;IAAA;IAEA,IAAI9B,CAAA,CAAwBR,CAAA,GAAa;MACrC,IAAM4B,CAAA,GAASK,IAAA,CAAKkB,KAAA,EAAOJ,CAAA,GAAQ,MAAM,MAAM;MAChC,MAAXnB,CAAA,KACAS,CAAA,IAAarC,CAAA,CAAW2B,MAAA,GAAS,IAEtB,MAAXC,CAAA,KACAU,CAAA,IAAatC,CAAA,CAAW0B,KAAA,GAAQ,GAChCW,CAAA,IAAarC,CAAA,CAAW2B,MAAA,GAAS,IAEtB,MAAXC,CAAA,KACAU,CAAA,IAAatC,CAAA,CAAW0B,KAAA,GAAQ,IAErB,MAAXE,CAAA,KACAU,CAAA,IAAatC,CAAA,CAAW0B,KAAA,GAAQ,GAChCW,CAAA,IAAarC,CAAA,CAAW2B,MAAA,GAAS,IAEtB,MAAXC,CAAA,KACAS,CAAA,IAAarC,CAAA,CAAW2B,MAAA,GAAS,IAEtB,MAAXC,CAAA,KACAU,CAAA,IAAatC,CAAA,CAAW0B,KAAA,GAAQ,GAChCW,CAAA,IAAarC,CAAA,CAAW2B,MAAA,GAAS,IAEtB,MAAXC,CAAA,KACAU,CAAA,IAAatC,CAAA,CAAW0B,KAAA,GAAQ,IAErB,MAAXE,CAAA,KACAU,CAAA,IAAatC,CAAA,CAAW0B,KAAA,GAAQ,GAChCW,CAAA,IAAarC,CAAA,CAAW2B,MAAA,GAAS,EAEzC;IAAA;IAEA,IAAI/B,CAAA,GAAQE,CAAA;MAGRG,CAAA,GAAYH,CAAA;IAUhB,QAPKiD,CAAA,GAAQ,MAAM,MAAM,OACrBnD,CAAA,IAAS8C,CAAA,EACTzC,CAAA,IAAayC,CAAA,IAEbzC,CAAA,IAAayC,CAAA,EAGV;MACHU,MAAA,EAAQ,CACJ,CAACd,CAAA,EAAWD,CAAA,GACZ,CAACvC,CAAA,EAAeC,CAAA,GAChB,CAACE,CAAA,EAbSF,CAAA;MAedsD,IAAA,EAAM,CAACzD,CAAA,EAlBGG,CAAA,GAAgB6C,CAAA;MAmB1BU,KAAA,EAAOP,CAAA,GAAQ;IAAA,CAEvB;EAAA;EC/KaQ,CAAA,GAAiB,SAAAC,CAAHxD,CAAA;IAAA,IACvBD,CAAA,GAAIC,CAAA,CAAJY,IAAA;MACAU,CAAA,GAAWtB,CAAA,CAAXa,WAAA;MACAC,CAAA,GAAWd,CAAA,CAAXe,WAAA;MACAc,CAAA,GAAa7B,CAAA,CAAbiB,aAAA;IAAa,OAObnB,CAAA,CACI;MAAA,OACIY,CAAA,CAAuB;QACnBE,IAAA,EAAAb,CAAA;QACAc,WAAA,EAAAS,CAAA;QACAP,WAAA,EAAAD,CAAA;QACAG,aAAA,EAAAY;MAAA,EAER;IAAA,IAAC9B,CAAA,EAAMuB,CAAA,EAAaR,CAAA,EAAae,CAAA,EACpC;EAAA;EAEQ4B,CAAA,GAAyB,SAAAC,CAAH1D,CAAA;IAAA,IAC/BD,CAAA,GAAWC,CAAA,CAAXa,WAAA;IAAW,OAIXf,CAAA,CACI;MAAA,OACIC,CAAA,CAAYyB,GAAA,CAAI,UAAAxB,CAAA;QAAU,OAAA4B,CAAA,KACnB5B,CAAA,EAAU;UACb2D,QAAA,EAAUxB,CAAA,CAAiBP,CAAA,KACpB5B,CAAA;QAAA,EACL;MAAA;IAAA,GAEV,CAACD,CAAA,EACJ;EAAA;EAEQ6D,CAAA,GAAwB,SAAAC,CAAQ7D,CAAA;IAAkC,OAC3EF,CAAA,CAAQ;MAAA,OAAMqC,CAAA,CAAyBnC,CAAA;IAAA,GAAa,CAACA,CAAA,EAAY;EAAA;EC7CxD8D,CAAA,GAAiB,SAAAC,CAAH/D,CAAA;IAUrB,IATFF,CAAA,GAAKE,CAAA,CAAL8B,KAAA;MACAR,CAAA,GAACtB,CAAA,CAADqC,CAAA;MACAvB,CAAA,GAACd,CAAA,CAADsC,CAAA;MACAtB,CAAA,GAAIhB,CAAA,CAAJgE,IAAA;MAOM7C,CAAA,GAAQsB,CAAA;MACdQ,CAAA,GAA0CP,CAAA;MAAlCQ,CAAA,GAAOD,CAAA,CAAPtD,OAAA;MAAiBgD,CAAA,GAAYM,CAAA,CAApBgB,MAAA;MAEX1E,CAAA,GAAgBqD,CAAA,CAAU;QAC5BP,CAAA,EAAAf,CAAA;QACAgB,CAAA,EAAAxB,CAAA;QACAmD,MAAA,EAAQtB,CAAA;QACRuB,SAAA,GAAYhB;MAAA;IAGhB,OAAoB,qBAATlC,CAAA,GACAjB,CAAA,CAAciB,CAAA,EAAM;MAAEqB,CAAA,EAAAf,CAAA;MAAGgB,CAAA,EAAAxB,CAAA;MAAGgB,KAAA,EAAAhC;IAAA,KAInCuC,CAAA,CAAAU,CAAA;MAAAoB,QAAA,EACK,CAAAhD,CAAA,CAAMN,WAAA,CAAYwC,IAAA,CAAKe,YAAA,GAAe,KACnCpB,CAAA,CAACV,CAAA,CAASe,IAAA,EAAI;QACVhB,CAAA,EAAG9C,CAAA,CAAc8C,CAAA;QACjBC,CAAA,EAAG/C,CAAA,CAAc+C,CAAA;QACjB+B,KAAA,EAAKzC,CAAA,KACET,CAAA,CAAMN,WAAA,CAAYwC,IAAA,EAAI;UACzBiB,cAAA,EAAgB;UAChBC,WAAA,EAAmD,IAAtCpD,CAAA,CAAMN,WAAA,CAAYwC,IAAA,CAAKe,YAAA;UACpCI,MAAA,EAAQrD,CAAA,CAAMN,WAAA,CAAYwC,IAAA,CAAKoB;QAAA;QACjCN,QAAA,EAEDnD;MAAA,IAGTgC,CAAA,CAACV,CAAA,CAASe,IAAA,EAAI;QACVhB,CAAA,EAAG9C,CAAA,CAAc8C,CAAA;QACjBC,CAAA,EAAG/C,CAAA,CAAc+C,CAAA;QACjB+B,KAAA,EAAOxC,CAAA,CAAKV,CAAA,CAAMN,WAAA,CAAYwC,IAAA,EAAM,CAAC,gBAAgB;QAAiBc,QAAA,EAErEnD;MAAA;IAAA,EAIjB;EAAA;ECpDa0D,CAAA,GAAiB,SAAAC,CAAH3E,CAAA;IAMrB,IALFD,CAAA,GAAMC,CAAA,CAANoD,MAAA;MAAM9B,CAAA,GAAAtB,CAAA,CACN4E,SAAA;MAAA9D,CAAA,QAAY,MAAHQ,CAAA,IAAQA,CAAA;MAKXO,CAAA,GAAQY,CAAA;MAERzB,CAAA,GAAOlB,CAAA,CAAQ;QACjB,IAAOE,CAAA,GAA8BD,CAAA,CAAM;QAE3C,OAFqCA,CAAA,CAAM8E,KAAA,IAExB3D,MAAA,CACf,UAAClB,CAAA,EAAGF,CAAA;UAAO,OAASE,CAAA,GAAG,OAAfF,CAAA,MAAqB,MAAlBA,CAAA;QAAA,GAAyB,MAChCE,CAAA,CAAW,WAAMA,CAAA,CAAW,GAExC;MAAA,GAAG,CAACD,CAAA;MAEEoB,CAAA,GAAewB,CAAA,CAAgB3B,CAAA;IAErC,IAAIF,CAAA,IAAae,CAAA,CAAMhB,WAAA,CAAYiE,IAAA,CAAKV,YAAA,IAAgB,GACpD,OAAO;IAGX,IAAMnB,CAAA,GAAKrB,CAAA,KAAQC,CAAA,CAAMhB,WAAA,CAAYiE,IAAA;IASrC,OARIhE,CAAA,KACAmC,CAAA,CAAM8B,aAAA,GAAgB,UACtB9B,CAAA,CAAMsB,WAAA,GACF1C,CAAA,CAAMhB,WAAA,CAAYiE,IAAA,CAAKP,WAAA,GAAoD,IAAtC1C,CAAA,CAAMhB,WAAA,CAAYiE,IAAA,CAAKV,YAAA,EAChEnB,CAAA,CAAMuB,MAAA,GAAS3C,CAAA,CAAMhB,WAAA,CAAYiE,IAAA,CAAKL,YAAA,EACtCxB,CAAA,CAAM+B,OAAA,GAAUnD,CAAA,CAAMhB,WAAA,CAAYiE,IAAA,CAAKG,cAAA,GAGpCjC,CAAA,CAACV,CAAA,CAAS4C,IAAA,EAAI;MAACC,IAAA,EAAK;MAAOzC,CAAA,EAAGvB,CAAA;MAAckD,KAAA,EAAOpB;IAAA,EAC9D;EAAA;ECnCamC,CAAA,GAA0B,SAAAC,CAAHrF,CAAA;IAA+D,IAAzDF,CAAA,GAACE,CAAA,CAADqC,CAAA;MAAGtC,CAAA,GAACC,CAAA,CAADsC,CAAA;MAAGhB,CAAA,GAAItB,CAAA,CAAJyB,IAAA;MACtCX,CAAA,GAAQ2B,CAAA;MACdZ,CAAA,GAA0Ca,CAAA;MAAlC1B,CAAA,GAAOa,CAAA,CAAPlC,OAAA;MAAiBwB,CAAA,GAAYU,CAAA,CAApBoC,MAAA;MAEXhB,CAAA,GAAgBL,CAAA,CAAU;QAC5BP,CAAA,EAAAvC,CAAA;QACAwC,CAAA,EAAAvC,CAAA;QACAuF,MAAA,EAAQhE,CAAA,GAAO;QACf2C,MAAA,EAAQ9C,CAAA;QACR+C,SAAA,GAAYlD;MAAA;IAGhB,OACIqB,CAAA,CAAAU,CAAA;MAAAoB,QAAA,EACK,CAAArD,CAAA,CAAMD,WAAA,CAAY0E,OAAA,CAAQnB,YAAA,GAAe,KACtCpB,CAAA,CAACV,CAAA,CAASkD,MAAA,EAAM;QACZC,EAAA,EAAIxC,CAAA,CAAcZ,CAAA;QAClBqD,EAAA,EAAIzC,CAAA,CAAcX,CAAA;QAClBtB,CAAA,EAAGiC,CAAA,CAAcqC,MAAA;QACjBjB,KAAA,EAAKzC,CAAA,KACEd,CAAA,CAAMD,WAAA,CAAY0E,OAAA,EAAO;UAC5BJ,IAAA,EAAM;UACNZ,WAAA,EACIzD,CAAA,CAAMD,WAAA,CAAY0E,OAAA,CAAQhB,WAAA,GACe,IAAzCzD,CAAA,CAAMD,WAAA,CAAY0E,OAAA,CAAQnB,YAAA;UAC9BI,MAAA,EAAQ1D,CAAA,CAAMD,WAAA,CAAY0E,OAAA,CAAQd,YAAA;UAClCO,OAAA,EAASlE,CAAA,CAAMD,WAAA,CAAY0E,OAAA,CAAQN;QAAA;MAAA,IAI/CjC,CAAA,CAACV,CAAA,CAASkD,MAAA,EAAM;QACZC,EAAA,EAAIxC,CAAA,CAAcZ,CAAA;QAClBqD,EAAA,EAAIzC,CAAA,CAAcX,CAAA;QAClBtB,CAAA,EAAGiC,CAAA,CAAcqC,MAAA;QACjBjB,KAAA,EAAOvD,CAAA,CAAMD,WAAA,CAAY0E;MAAA;IAAA,EAIzC;EAAA;ECrCaI,CAAA,GAAuB,SAAAC,CAAH5F,CAAA;IAQ3B,IAPFF,CAAA,GAACE,CAAA,CAADqC,CAAA;MACAtC,CAAA,GAACC,CAAA,CAADsC,CAAA;MAAChB,CAAA,GAAAtB,CAAA,CACDyB,IAAA;MAAAX,CAAA,QAAI,MAAAQ,CAAA,GAAG/B,CAAA,CAAaC,OAAA,GAAO8B,CAAA;MAMrBO,CAAA,GAAQY,CAAA;MACdzB,CAAA,GAA0C0B,CAAA;MAAlCvB,CAAA,GAAOH,CAAA,CAAPrB,OAAA;MAAiBsD,CAAA,GAAYjC,CAAA,CAApBiD,MAAA;MAEXf,CAAA,GAAgBN,CAAA,CAAU;QAC5BP,CAAA,EAAAvC,CAAA;QACAwC,CAAA,EAAAvC,CAAA;QACAuF,MAAA,EAAQxE,CAAA,GAAO;QACfmD,MAAA,EAAQhB,CAAA;QACRiB,SAAA,GAAY/C;MAAA;IAGhB,OACIkB,CAAA,CAAAU,CAAA;MAAAoB,QAAA,EACK,CAAAtC,CAAA,CAAMhB,WAAA,CAAY0E,OAAA,CAAQnB,YAAA,GAAe,KACtCpB,CAAA,CAACV,CAAA,CAASkD,MAAA,EAAM;QACZC,EAAA,EAAIvC,CAAA,CAAcb,CAAA;QAClBqD,EAAA,EAAIxC,CAAA,CAAcZ,CAAA;QAClBtB,CAAA,EAAGkC,CAAA,CAAcoC,MAAA;QACjBjB,KAAA,EAAKzC,CAAA,KACEC,CAAA,CAAMhB,WAAA,CAAY0E,OAAA,EAAO;UAC5BJ,IAAA,EAAM;UACNZ,WAAA,EAAsD,IAAzC1C,CAAA,CAAMhB,WAAA,CAAY0E,OAAA,CAAQnB,YAAA;UACvCI,MAAA,EAAQ3C,CAAA,CAAMhB,WAAA,CAAY0E,OAAA,CAAQd,YAAA;UAClCO,OAAA,EAASnD,CAAA,CAAMhB,WAAA,CAAY0E,OAAA,CAAQN;QAAA;MAAA,IAI/CjC,CAAA,CAACV,CAAA,CAASkD,MAAA,EAAM;QACZC,EAAA,EAAIvC,CAAA,CAAcb,CAAA;QAClBqD,EAAA,EAAIxC,CAAA,CAAcZ,CAAA;QAClBtB,CAAA,EAAGkC,CAAA,CAAcoC,MAAA;QACjBjB,KAAA,EAAOxC,CAAA,CAAMhB,WAAA,CAAYgF;MAAA;IAAA,EAIzC;EAAA;EC7CaC,CAAA,GAAwB,SAAAC,CAAH/F,CAAA;IAY5B,IAXFF,CAAA,GAACE,CAAA,CAADqC,CAAA;MACAtC,CAAA,GAACC,CAAA,CAADsC,CAAA;MACAhB,CAAA,GAAKtB,CAAA,CAAL0B,KAAA;MACAZ,CAAA,GAAMd,CAAA,CAAN2B,MAAA;MAAME,CAAA,GAAA7B,CAAA,CACNgG,YAAA;MAAAhF,CAAA,QAAe,MAAHa,CAAA,GAAG,IAACA,CAAA;MAQVV,CAAA,GAAQsB,CAAA;MACdQ,CAAA,GAA0CP,CAAA;MAAlCQ,CAAA,GAAOD,CAAA,CAAPtD,OAAA;MAAiBgD,CAAA,GAAYM,CAAA,CAApBgB,MAAA;MAEX1E,CAAA,GAAgBqD,CAAA,CAAU;QAC5BP,CAAA,EAAGvC,CAAA,GAAIwB,CAAA,GAAQ;QACfgB,CAAA,EAAGvC,CAAA,GAAIe,CAAA,GAAS;QAChBY,KAAA,EAAAJ,CAAA;QACAK,MAAA,EAAAb,CAAA;QACAmD,MAAA,EAAQtB,CAAA;QACRuB,SAAA,GAAYhB;MAAA;IAGhB,OACIb,CAAA,CAAAU,CAAA;MAAAoB,QAAA,EACK,CAAAhD,CAAA,CAAMN,WAAA,CAAY0E,OAAA,CAAQnB,YAAA,GAAe,KACtCpB,CAAA,CAACV,CAAA,CAAS2D,IAAA,EAAI;QACV5D,CAAA,EAAG9C,CAAA,CAAc8C,CAAA;QACjBC,CAAA,EAAG/C,CAAA,CAAc+C,CAAA;QACjB4D,EAAA,EAAIlF,CAAA;QACJmF,EAAA,EAAInF,CAAA;QACJU,KAAA,EAAOnC,CAAA,CAAcmC,KAAA;QACrBC,MAAA,EAAQpC,CAAA,CAAcoC,MAAA;QACtB0C,KAAA,EAAKzC,CAAA,KACET,CAAA,CAAMN,WAAA,CAAY0E,OAAA,EAAO;UAC5BJ,IAAA,EAAM;UACNZ,WAAA,EACIpD,CAAA,CAAMN,WAAA,CAAY0E,OAAA,CAAQhB,WAAA,GACe,IAAzCpD,CAAA,CAAMN,WAAA,CAAY0E,OAAA,CAAQnB,YAAA;UAC9BI,MAAA,EAAQrD,CAAA,CAAMN,WAAA,CAAY0E,OAAA,CAAQd,YAAA;UAClCO,OAAA,EAAS7D,CAAA,CAAMN,WAAA,CAAY0E,OAAA,CAAQN;QAAA;MAAA,IAI/CjC,CAAA,CAACV,CAAA,CAAS2D,IAAA,EAAI;QACV5D,CAAA,EAAG9C,CAAA,CAAc8C,CAAA;QACjBC,CAAA,EAAG/C,CAAA,CAAc+C,CAAA;QACjB4D,EAAA,EAAIlF,CAAA;QACJmF,EAAA,EAAInF,CAAA;QACJU,KAAA,EAAOnC,CAAA,CAAcmC,KAAA;QACrBC,MAAA,EAAQpC,CAAA,CAAcoC,MAAA;QACtB0C,KAAA,EAAOlD,CAAA,CAAMN,WAAA,CAAY0E;MAAA;IAAA,EAIzC;EAAA;ECnDaa,CAAA,GAAa,SAAAC,CAASrG,CAAA;IAC/B,IAAQF,CAAA,GAAsBE,CAAA,CAAtB8B,KAAA;MAAO/B,CAAA,GAAeC,CAAA,CAAfqC,CAAA;MAAGf,CAAA,GAAYtB,CAAA,CAAZsC,CAAA;MAAGxB,CAAA,GAASd,CAAA,CAATgE,IAAA;MACfnC,CAAA,GAAW+B,CAAA,CAAsB5D,CAAA;IAEvC,KAAKJ,CAAA,CAAUkB,CAAA,GACX,MAAM,IAAIgC,KAAA,CAAM;IAGpB,OACIT,CAAA,CAAAU,CAAA;MAAAoB,QAAA,GACInB,CAAA,CAAC0B,CAAA,EAAc;QAACtB,MAAA,EAAQvB,CAAA,CAASuB,MAAA;QAAQwB,SAAA,GAAW;MAAA,IACnDzE,CAAA,CAAmBH,CAAA,KAChBgD,CAAA,CAACoC,CAAA,EAAuB;QAAC/C,CAAA,EAAGtC,CAAA;QAAGuC,CAAA,EAAGhB,CAAA;QAAGG,IAAA,EAAMzB,CAAA,CAAWyB;MAAA,IAEzDnB,CAAA,CAAgBN,CAAA,KACbgD,CAAA,CAAC2C,CAAA,EAAoB;QAACtD,CAAA,EAAGtC,CAAA;QAAGuC,CAAA,EAAGhB,CAAA;QAAGG,IAAA,EAAMzB,CAAA,CAAWyB;MAAA,IAEtDjB,CAAA,CAAiBR,CAAA,KACdgD,CAAA,CAAC8C,CAAA,EAAqB;QAClBzD,CAAA,EAAGtC,CAAA;QACHuC,CAAA,EAAGhB,CAAA;QACHI,KAAA,EAAO1B,CAAA,CAAW0B,KAAA;QAClBC,MAAA,EAAQ3B,CAAA,CAAW2B,MAAA;QACnBqE,YAAA,EAAchG,CAAA,CAAWgG;MAAA,IAGjChD,CAAA,CAAC0B,CAAA,EAAc;QAACtB,MAAA,EAAQvB,CAAA,CAASuB;MAAA,IACjCJ,CAAA,CAACc,CAAA,EAAc;QAAChC,KAAA,EAAOhC,CAAA;QAAOuC,CAAA,EAAGR,CAAA,CAASwB,IAAA,CAAK;QAAIf,CAAA,EAAGT,CAAA,CAASwB,IAAA,CAAK;QAAIW,IAAA,EAAMlD;MAAA;IAAA,EAG1F;EAAA;ECnCMwF,CAAA,GAAa,SAAAC,CAACvG,CAAA,EAA+BF,CAAA;IAC/CA,CAAA,CAAO0G,OAAA,CAAQ,UAAA1G,CAAA,EAASC,CAAA;MAAU,IAAjBuB,CAAA,GAACxB,CAAA;QAAEgB,CAAA,GAAChB,CAAA;MACH,MAAVC,CAAA,GACAC,CAAA,CAAIyG,MAAA,CAAOnF,CAAA,EAAGR,CAAA,IAEdd,CAAA,CAAI0G,MAAA,CAAOpF,CAAA,EAAGR,CAAA,CAEtB;IAAA,EACJ;EAAA;EAEa6F,CAAA,GAA4B,SAAAC,CACrC5G,CAAA,EAA6BF,CAAA;IAQ5B,IANGC,CAAA,GAAWD,CAAA,CAAXe,WAAA;MACAS,CAAA,GAAKxB,CAAA,CAAL+G,KAAA;IAMuB,MAAvB9G,CAAA,CAAY+G,MAAA,KAEhB9G,CAAA,CAAI+G,IAAA,IACJhH,CAAA,CAAYyG,OAAA,CAAQ,UAAA1G,CAAA;MAChB,KAAKG,CAAA,CAAaH,CAAA,CAAWkE,IAAA,GACzB,MAAM,IAAIlB,KAAA,CAAM;MAGhBxB,CAAA,CAAMT,WAAA,CAAYiE,IAAA,CAAKV,YAAA,GAAe,MACtCpE,CAAA,CAAIgH,OAAA,GAAU,UACdhH,CAAA,CAAIiH,WAAA,GAAc3F,CAAA,CAAMT,WAAA,CAAYiE,IAAA,CAAKL,YAAA,EACzCzE,CAAA,CAAIkH,SAAA,GACA5F,CAAA,CAAMT,WAAA,CAAYiE,IAAA,CAAKP,WAAA,GAAoD,IAAtCjD,CAAA,CAAMT,WAAA,CAAYiE,IAAA,CAAKV,YAAA,EAChEpE,CAAA,CAAImH,SAAA,IACJb,CAAA,CAAWtG,CAAA,EAAKF,CAAA,CAAW6D,QAAA,CAASP,MAAA,GACpCpD,CAAA,CAAIwE,MAAA,IACJxE,CAAA,CAAIgH,OAAA,GAAU,SAGd7G,CAAA,CAAmBL,CAAA,KAAewB,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQnB,YAAA,GAAe,MAC3EpE,CAAA,CAAIiH,WAAA,GAAc3F,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQd,YAAA,EAC5CzE,CAAA,CAAIkH,SAAA,GACA5F,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQhB,WAAA,GAAuD,IAAzCjD,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQnB,YAAA,EACtEpE,CAAA,CAAImH,SAAA,IACJnH,CAAA,CAAIoH,GAAA,CAAItH,CAAA,CAAWuC,CAAA,EAAGvC,CAAA,CAAWwC,CAAA,EAAGxC,CAAA,CAAW2B,IAAA,GAAO,GAAG,GAAG,IAAIQ,IAAA,CAAKoF,EAAA,GACrErH,CAAA,CAAIwE,MAAA,KAGJlE,CAAA,CAAgBR,CAAA,KAAewB,CAAA,CAAMT,WAAA,CAAYgF,MAAA,CAAOzB,YAAA,GAAe,MACvEpE,CAAA,CAAIiH,WAAA,GAAc3F,CAAA,CAAMT,WAAA,CAAYgF,MAAA,CAAOpB,YAAA,EAC3CzE,CAAA,CAAIkH,SAAA,GAAoD,IAAxC5F,CAAA,CAAMT,WAAA,CAAYgF,MAAA,CAAOzB,YAAA,EACzCpE,CAAA,CAAImH,SAAA,IACJnH,CAAA,CAAIoH,GAAA,CAAItH,CAAA,CAAWuC,CAAA,EAAGvC,CAAA,CAAWwC,CAAA,EAAGxC,CAAA,CAAW2B,IAAA,GAAO,GAAG,GAAG,IAAIQ,IAAA,CAAKoF,EAAA,GACrErH,CAAA,CAAIwE,MAAA,KAGJhE,CAAA,CAAiBV,CAAA,KAAewB,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQnB,YAAA,GAAe,MACzEpE,CAAA,CAAIiH,WAAA,GAAc3F,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQd,YAAA,EAC5CzE,CAAA,CAAIkH,SAAA,GACA5F,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQhB,WAAA,GAAuD,IAAzCjD,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQnB,YAAA,EACtEpE,CAAA,CAAImH,SAAA,IACJnH,CAAA,CAAIiG,IAAA,CACAnG,CAAA,CAAWuC,CAAA,GAAIvC,CAAA,CAAW4B,KAAA,GAAQ,GAClC5B,CAAA,CAAWwC,CAAA,GAAIxC,CAAA,CAAW6B,MAAA,GAAS,GACnC7B,CAAA,CAAW4B,KAAA,EACX5B,CAAA,CAAW6B,MAAA,GAEf3B,CAAA,CAAIwE,MAAA,KAGRxE,CAAA,CAAIiH,WAAA,GAAc3F,CAAA,CAAMT,WAAA,CAAYiE,IAAA,CAAKN,MAAA,EACzCxE,CAAA,CAAIkH,SAAA,GAAY5F,CAAA,CAAMT,WAAA,CAAYiE,IAAA,CAAKP,WAAA,EACvCvE,CAAA,CAAImH,SAAA,IACJb,CAAA,CAAWtG,CAAA,EAAKF,CAAA,CAAW6D,QAAA,CAASP,MAAA,GACpCpD,CAAA,CAAIwE,MAAA,IAEArE,CAAA,CAAmBL,CAAA,MACnBE,CAAA,CAAIiH,WAAA,GAAc3F,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQf,MAAA,EAC5CxE,CAAA,CAAIkH,SAAA,GAAY5F,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQhB,WAAA,EAC1CvE,CAAA,CAAImH,SAAA,IACJnH,CAAA,CAAIoH,GAAA,CAAItH,CAAA,CAAWuC,CAAA,EAAGvC,CAAA,CAAWwC,CAAA,EAAGxC,CAAA,CAAW2B,IAAA,GAAO,GAAG,GAAG,IAAIQ,IAAA,CAAKoF,EAAA,GACrErH,CAAA,CAAIwE,MAAA,KAGJlE,CAAA,CAAgBR,CAAA,MAChBE,CAAA,CAAIsH,SAAA,GAAYhG,CAAA,CAAMT,WAAA,CAAYgF,MAAA,CAAOV,IAAA,EACzCnF,CAAA,CAAImH,SAAA,IACJnH,CAAA,CAAIoH,GAAA,CAAItH,CAAA,CAAWuC,CAAA,EAAGvC,CAAA,CAAWwC,CAAA,EAAGxC,CAAA,CAAW2B,IAAA,GAAO,GAAG,GAAG,IAAIQ,IAAA,CAAKoF,EAAA,GACrErH,CAAA,CAAImF,IAAA,KAGJ3E,CAAA,CAAiBV,CAAA,MACjBE,CAAA,CAAIiH,WAAA,GAAc3F,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQf,MAAA,EAC5CxE,CAAA,CAAIkH,SAAA,GAAY5F,CAAA,CAAMT,WAAA,CAAY0E,OAAA,CAAQhB,WAAA,EAC1CvE,CAAA,CAAImH,SAAA,IACJnH,CAAA,CAAIiG,IAAA,CACAnG,CAAA,CAAWuC,CAAA,GAAIvC,CAAA,CAAW4B,KAAA,GAAQ,GAClC5B,CAAA,CAAWwC,CAAA,GAAIxC,CAAA,CAAW6B,MAAA,GAAS,GACnC7B,CAAA,CAAW4B,KAAA,EACX5B,CAAA,CAAW6B,MAAA,GAEf3B,CAAA,CAAIwE,MAAA,KAGuB,qBAApB1E,CAAA,CAAWkE,IAAA,GAClBlE,CAAA,CAAWkE,IAAA,CAAKhE,CAAA,EAAK;QACjB8B,KAAA,EAAOhC,CAAA,CAAWgC,KAAA;QAClBO,CAAA,EAAGvC,CAAA,CAAW6D,QAAA,CAASN,IAAA,CAAK;QAC5Bf,CAAA,EAAGxC,CAAA,CAAW6D,QAAA,CAASN,IAAA,CAAK;QAC5BwD,KAAA,EAAAvF;MAAA,MAGJtB,CAAA,CAAIuH,IAAA,GAAUjG,CAAA,CAAMT,WAAA,CAAYwC,IAAA,CAAKmE,QAAA,WAAclG,CAAA,CAAMT,WAAA,CAAYwC,IAAA,CAAKoE,UAAA,EAC1EzH,CAAA,CAAI0H,SAAA,GAAY,QAChB1H,CAAA,CAAI2H,YAAA,GAAe,cAEnB3H,CAAA,CAAIsH,SAAA,GAAYhG,CAAA,CAAMT,WAAA,CAAYwC,IAAA,CAAK8B,IAAA,EACvCnF,CAAA,CAAIiH,WAAA,GAAc3F,CAAA,CAAMT,WAAA,CAAYwC,IAAA,CAAKoB,YAAA,EACzCzE,CAAA,CAAIkH,SAAA,GAAkD,IAAtC5F,CAAA,CAAMT,WAAA,CAAYwC,IAAA,CAAKe,YAAA,EAEnC9C,CAAA,CAAMT,WAAA,CAAYwC,IAAA,CAAKe,YAAA,GAAe,MACtCpE,CAAA,CAAI4H,QAAA,GAAW,SACf5H,CAAA,CAAI6H,UAAA,CACA/H,CAAA,CAAWkE,IAAA,EACXlE,CAAA,CAAW6D,QAAA,CAASN,IAAA,CAAK,IACzBvD,CAAA,CAAW6D,QAAA,CAASN,IAAA,CAAK,KAE7BrD,CAAA,CAAI4H,QAAA,GAAW,UAEnB5H,CAAA,CAAI8H,QAAA,CAAShI,CAAA,CAAWkE,IAAA,EAAMlE,CAAA,CAAW6D,QAAA,CAASN,IAAA,CAAK,IAAIvD,CAAA,CAAW6D,QAAA,CAASN,IAAA,CAAK,IAE5F;IAAA,IACArD,CAAA,CAAI+H,OAAA,GACR;EAAA;AAAA,SAAA3B,CAAA,IAAAC,UAAA,EAAA3F,CAAA,IAAAC,eAAA,EAAAwB,CAAA,IAAAC,iBAAA,EAAA7C,CAAA,IAAAyI,YAAA,EAAAjG,CAAA,IAAAC,YAAA,EAAA/B,CAAA,IAAAC,YAAA,EAAAC,CAAA,IAAAC,kBAAA,EAAAE,CAAA,IAAAC,eAAA,EAAAC,CAAA,IAAAC,gBAAA,EAAAb,CAAA,IAAAC,SAAA,EAAA8G,CAAA,IAAAC,yBAAA,EAAArD,CAAA,IAAAC,cAAA,EAAAI,CAAA,IAAAC,qBAAA,EAAAJ,CAAA,IAAAC,sBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}