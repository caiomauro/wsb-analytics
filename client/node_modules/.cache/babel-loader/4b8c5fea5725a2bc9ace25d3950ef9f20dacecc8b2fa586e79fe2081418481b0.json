{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caio\\\\Documents\\\\GeauxFrontend\\\\wsb-analytics\\\\client\\\\src\\\\Pages\\\\DataPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactJson from 'react-json-view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataPage() {\n  _s();\n  const [jsonData, setJsonData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('/path/to/your/jsonl/file.jsonl').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      return response.text();\n    }).then(data => {\n      // Splitting JSONL data into individual JSON objects\n      const jsonObjects = data.trim().split('\\n').map(line => JSON.parse(line));\n      setJsonData(jsonObjects);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"JSONL Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), jsonData.map((json, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactJson, {\n        src: json,\n        theme: \"monokai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(DataPage, \"KHbrTW2ViFhkPS+oeq6BFRvnVO0=\");\n_c = DataPage;\nexport default DataPage;\nvar _c;\n$RefreshReg$(_c, \"DataPage\");","map":{"version":3,"names":["React","useState","useEffect","ReactJson","jsxDEV","_jsxDEV","DataPage","_s","jsonData","setJsonData","loading","setLoading","error","setError","fetch","then","response","ok","Error","text","data","jsonObjects","trim","split","map","line","JSON","parse","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","message","json","index","src","theme","_c","$RefreshReg$"],"sources":["C:/Users/Caio/Documents/GeauxFrontend/wsb-analytics/client/src/Pages/DataPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactJson from 'react-json-view';\r\n\r\ninterface JsonData {\r\n    [key: string]: any;\r\n}\r\n\r\nfunction DataPage() {\r\n    const [jsonData, setJsonData] = useState<JsonData[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [error, setError] = useState<Error | null>(null);\r\n\r\n    useEffect(() => {\r\n        fetch('/path/to/your/jsonl/file.jsonl')\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch data');\r\n                }\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                // Splitting JSONL data into individual JSON objects\r\n                const jsonObjects = data\r\n                    .trim()\r\n                    .split('\\n')\r\n                    .map(line => JSON.parse(line));\r\n                setJsonData(jsonObjects);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                setError(error);\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error.message}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>JSONL Viewer</h2>\r\n            {jsonData.map((json, index) => (\r\n                <div key={index}>\r\n                    <ReactJson src={json} theme=\"monokai\" />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAa,EAAE,CAAC;EACxD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAe,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZY,KAAK,CAAC,gCAAgC,CAAC,CAClCC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MAC3C;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACV;MACA,MAAMC,WAAW,GAAGD,IAAI,CACnBE,IAAI,CAAC,CAAC,CACNC,KAAK,CAAC,IAAI,CAAC,CACXC,GAAG,CAACC,IAAI,IAAIC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,CAAC;MAClChB,WAAW,CAACY,WAAW,CAAC;MACxBV,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDiB,KAAK,CAAChB,KAAK,IAAI;MACZC,QAAQ,CAACD,KAAK,CAAC;MACfD,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE,oBAAOL,OAAA;IAAAwB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIrB,KAAK,EAAE,oBAAOP,OAAA;IAAAwB,QAAA,GAAK,SAAO,EAACjB,KAAK,CAACsB,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEnD,oBACI5B,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBzB,QAAQ,CAACgB,GAAG,CAAC,CAACW,IAAI,EAAEC,KAAK,kBACtB/B,OAAA;MAAAwB,QAAA,eACIxB,OAAA,CAACF,SAAS;QAACkC,GAAG,EAAEF,IAAK;QAACG,KAAK,EAAC;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADlCG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC1B,EAAA,CAzCQD,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}