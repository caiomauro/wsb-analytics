{"ast":null,"code":"import groupDataBySegments from \"./SegmentDataUtil\";\nconst visualizationTimeline = (stock, data, days) => {\n  const stock_date_sentiment = {};\n  const printHolder = {};\n  const final_data = [];\n  for (let i = 0; i < data.length; i++) {\n    const stock = data[i][0];\n    const sentiment = data[i][1];\n    const dateObject = new Date(data[i][2]);\n    const unixTimestamp = dateObject.getTime();\n    if (!stock_date_sentiment[stock]) {\n      stock_date_sentiment[stock] = [];\n    }\n    stock_date_sentiment[stock].push([sentiment, unixTimestamp.toString()]);\n  }\n  Object.entries(stock_date_sentiment).forEach(([stock, data]) => {\n    printHolder[stock] = groupDataBySegments(data, days);\n  });\n  Object.entries(printHolder[stock]).forEach(([date, sentiments]) => {\n    const stock_data = [{\n      day: date,\n      positive: sentiments[0],\n      positiveColor: \"hsl(288, 70%, 50%)\",\n      negative: sentiments[1],\n      negativeColor: \"hsl(2, 70%, 50%))\",\n      mixed: sentiments[2],\n      mixedColor: \"hsl(323, 70%, 50%)\"\n    }];\n    final_data.push(stock_data[0]);\n  });\n  return final_data;\n};\nexport default visualizationTimeline;","map":{"version":3,"names":["groupDataBySegments","visualizationTimeline","stock","data","days","stock_date_sentiment","printHolder","final_data","i","length","sentiment","dateObject","Date","unixTimestamp","getTime","push","toString","Object","entries","forEach","date","sentiments","stock_data","day","positive","positiveColor","negative","negativeColor","mixed","mixedColor"],"sources":["C:/Users/Caio/Documents/GeauxFrontend/wsb-analytics/client/src/Utils/VisualizationTimelineUtil.tsx"],"sourcesContent":["import groupDataBySegments from \"./SegmentDataUtil\";\r\n\r\ntype timeline_data = {\r\n    day: string;\r\n    positive: number;\r\n    positiveColor: string;\r\n    negative: number;\r\n    negativeColor: string;\r\n    mixed: number;\r\n    mixedColor: string;\r\n  };\r\n\r\nconst visualizationTimeline = (\r\n    stock: string,\r\n    data: Array<Array<string>>,\r\n    days: number\r\n  ) => {\r\n    const stock_date_sentiment: { [key: string]: Array<Array<string>> } = {};\r\n    const printHolder: { [key: string]: { [date: string]: Array<number> } } =\r\n      {};\r\n    const final_data: any[] = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      const stock = data[i][0];\r\n      const sentiment = data[i][1];\r\n      const dateObject: Date = new Date(data[i][2]);\r\n      const unixTimestamp: number = dateObject.getTime();\r\n\r\n      if (!stock_date_sentiment[stock]) {\r\n        stock_date_sentiment[stock] = [];\r\n      }\r\n      stock_date_sentiment[stock].push([sentiment, unixTimestamp.toString()]);\r\n    }\r\n\r\n    Object.entries(stock_date_sentiment).forEach(([stock, data]) => {\r\n      printHolder[stock] = groupDataBySegments(data, days);\r\n    });\r\n\r\n    Object.entries(printHolder[stock]).forEach(([date, sentiments]) => {\r\n      const stock_data: timeline_data[] = [\r\n        {\r\n          day: date,\r\n          positive: sentiments[0],\r\n          positiveColor: \"hsl(288, 70%, 50%)\",\r\n          negative: sentiments[1],\r\n          negativeColor: \"hsl(2, 70%, 50%))\",\r\n          mixed: sentiments[2],\r\n          mixedColor: \"hsl(323, 70%, 50%)\",\r\n        },\r\n      ];\r\n\r\n      final_data.push(stock_data[0]);\r\n    });\r\n\r\n    return final_data;\r\n  };\r\n\r\nexport default visualizationTimeline;"],"mappings":"AAAA,OAAOA,mBAAmB,MAAM,mBAAmB;AAYnD,MAAMC,qBAAqB,GAAGA,CAC1BC,KAAa,EACbC,IAA0B,EAC1BC,IAAY,KACT;EACH,MAAMC,oBAA6D,GAAG,CAAC,CAAC;EACxE,MAAMC,WAAiE,GACrE,CAAC,CAAC;EACJ,MAAMC,UAAiB,GAAG,EAAE;EAE5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,IAAI,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,MAAMN,KAAK,GAAGC,IAAI,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,MAAME,SAAS,GAAGP,IAAI,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMG,UAAgB,GAAG,IAAIC,IAAI,CAACT,IAAI,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,MAAMK,aAAqB,GAAGF,UAAU,CAACG,OAAO,CAAC,CAAC;IAElD,IAAI,CAACT,oBAAoB,CAACH,KAAK,CAAC,EAAE;MAChCG,oBAAoB,CAACH,KAAK,CAAC,GAAG,EAAE;IAClC;IACAG,oBAAoB,CAACH,KAAK,CAAC,CAACa,IAAI,CAAC,CAACL,SAAS,EAAEG,aAAa,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACzE;EAEAC,MAAM,CAACC,OAAO,CAACb,oBAAoB,CAAC,CAACc,OAAO,CAAC,CAAC,CAACjB,KAAK,EAAEC,IAAI,CAAC,KAAK;IAC9DG,WAAW,CAACJ,KAAK,CAAC,GAAGF,mBAAmB,CAACG,IAAI,EAAEC,IAAI,CAAC;EACtD,CAAC,CAAC;EAEFa,MAAM,CAACC,OAAO,CAACZ,WAAW,CAACJ,KAAK,CAAC,CAAC,CAACiB,OAAO,CAAC,CAAC,CAACC,IAAI,EAAEC,UAAU,CAAC,KAAK;IACjE,MAAMC,UAA2B,GAAG,CAClC;MACEC,GAAG,EAAEH,IAAI;MACTI,QAAQ,EAAEH,UAAU,CAAC,CAAC,CAAC;MACvBI,aAAa,EAAE,oBAAoB;MACnCC,QAAQ,EAAEL,UAAU,CAAC,CAAC,CAAC;MACvBM,aAAa,EAAE,mBAAmB;MAClCC,KAAK,EAAEP,UAAU,CAAC,CAAC,CAAC;MACpBQ,UAAU,EAAE;IACd,CAAC,CACF;IAEDtB,UAAU,CAACQ,IAAI,CAACO,UAAU,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC;EAEF,OAAOf,UAAU;AACnB,CAAC;AAEH,eAAeN,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}